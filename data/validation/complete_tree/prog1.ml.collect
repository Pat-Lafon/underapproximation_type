General Collection:
New Blocks:
Old Blocks:
Type: int tree
digraph poset {
  label = "Partially Ordered Set"
  size = "8.270000,11.690000"
  ratio = 0.900000
  rotate = 0.000000
  center = 1

  edge [ dir = back ]

  node0 [ label = "_x2:[v:int tree | leaf v] 
 ⊢ Leaf  : int tree :
[v:int tree | leaf v]
" ]
  node1 [ label = "_x5:[v:int | v == s]
_17:[v:int tree | leaf v]
_18:[v:int tree | leaf v]
_x12:[v:int tree | ∃_x12, (root _x12 _x5 ∧ lch _x12 _17 ∧ rch _x12 _18 ∧ v == _x12)] 
 ⊢ let (_18) = Leaf  in let (_17) = Leaf  in let (_x5) = s in Node _x5 _17 _18 : int tree :
[v:int tree | ∃_x12, (root _x12 _x5 ∧ lch _x12 _17 ∧ rch _x12 _18 ∧ v == _x12)]
" ]
  node2 [ label = "_x4:[v:int | true]
_19:[v:int tree | leaf v]
_20:[v:int tree | leaf v]
_x13:[v:int tree | ∃_x13, (root _x13 _x4 ∧ lch _x13 _19 ∧ rch _x13 _20 ∧ v == _x13)] 
 ⊢ let (_20) = Leaf  in
let (_19) = Leaf  in let (_x4) = int_gen () in Node _x4 _19 _20 : int tree :
[v:int tree | ∃_x13, (root _x13 _x4 ∧ lch _x13 _19 ∧ rch _x13 _20 ∧ v == _x13)]
" ]
  node3 [ label = "_x5:[v:int | v == s]
_52:[v:int tree | leaf v]
_53:[v:int | true]
_54:[v:int tree | leaf v]
_55:[v:int tree | leaf v]
_56:[v:int tree | ∃_x13, (root _x13 _53 ∧ lch _x13 _54 ∧ rch _x13 _55 ∧ v == _x13)]
_x18:[v:int tree | ∃_x18, (root _x18 _x5 ∧ lch _x18 _52 ∧ rch _x18 _56 ∧ v == _x18)] 
 ⊢ let (_20) = Leaf  in
let (_19) = Leaf  in
let (_x4) = int_gen () in
let (_56) = Node _x4 _19 _20 in
let (_52) = Leaf  in let (_x5) = s in Node _x5 _52 _56 : int tree :
[v:int tree | ∃_x18, (root _x18 _x5 ∧ lch _x18 _52 ∧ rch _x18 _56 ∧ v == _x18)]
" ]
  node4 [ label = "_x5:[v:int | v == s]
_57:[v:int tree | leaf v]
_x5:[v:int | v == s]
_58:[v:int tree | leaf v]
_59:[v:int tree | leaf v]
_60:[v:int tree | ∃_x12, (root _x12 _x5 ∧ lch _x12 _58 ∧ rch _x12 _59 ∧ v == _x12)]
_x19:[v:int tree | ∃_x19, (root _x19 _x5 ∧ lch _x19 _57 ∧ rch _x19 _60 ∧ v == _x19)] 
 ⊢ let (_18) = Leaf  in
let (_17) = Leaf  in
let (_x5) = s in
let (_60) = Node _x5 _17 _18 in let (_57) = Leaf  in Node _x5 _57 _60 : int tree :
[v:int tree | ∃_x19, (root _x19 _x5 ∧ lch _x19 _57 ∧ rch _x19 _60 ∧ v == _x19)]
" ]
  node5 [ label = "_x4:[v:int | true]
_66:[v:int tree | leaf v]
_67:[v:int | true]
_68:[v:int tree | leaf v]
_69:[v:int tree | leaf v]
_70:[v:int tree | ∃_x13, (root _x13 _67 ∧ lch _x13 _68 ∧ rch _x13 _69 ∧ v == _x13)]
_x20:[v:int tree | ∃_x20, (root _x20 _x4 ∧ lch _x20 _66 ∧ rch _x20 _70 ∧ v == _x20)] 
 ⊢ let (_20) = Leaf  in
let (_19) = Leaf  in
let (_x4) = int_gen () in
let (_70) = Node _x4 _19 _20 in let (_66) = Leaf  in Node _x4 _66 _70 : int tree :
[v:int tree | ∃_x20, (root _x20 _x4 ∧ lch _x20 _66 ∧ rch _x20 _70 ∧ v == _x20)]
" ]
  node6 [ label = "_x4:[v:int | true]
_85:[v:int tree | leaf v]
_x5:[v:int | v == s]
_86:[v:int tree | leaf v]
_87:[v:int tree | leaf v]
_88:[v:int tree | ∃_x12, (root _x12 _x5 ∧ lch _x12 _86 ∧ rch _x12 _87 ∧ v == _x12)]
_x21:[v:int tree | ∃_x21, (root _x21 _x4 ∧ lch _x21 _85 ∧ rch _x21 _88 ∧ v == _x21)] 
 ⊢ let (_18) = Leaf  in
let (_17) = Leaf  in
let (_x5) = s in
let (_88) = Node _x5 _17 _18 in
let (_85) = Leaf  in let (_x4) = int_gen () in Node _x4 _85 _88 : int tree :
[v:int tree | ∃_x21, (root _x21 _x4 ∧ lch _x21 _85 ∧ rch _x21 _88 ∧ v == _x21)]
" ]
  node7 [ label = "_x5:[v:int | v == s]
_107:[v:int | true]
_108:[v:int tree | leaf v]
_109:[v:int tree | leaf v]
_110:[v:int tree | ∃_x13, (root _x13 _107 ∧ lch _x13 _108 ∧ rch _x13 _109 ∧ v == _x13)]
_111:[v:int tree | leaf v]
_x22:[v:int tree | ∃_x22, (root _x22 _x5 ∧ lch _x22 _110 ∧ rch _x22 _111 ∧ v == _x22)] 
 ⊢ let (_111) = Leaf  in
let (_20) = Leaf  in
let (_19) = Leaf  in
let (_x4) = int_gen () in
let (_110) = Node _x4 _19 _20 in let (_x5) = s in Node _x5 _110 _111 : int tree :
[v:int tree | ∃_x22, (root _x22 _x5 ∧ lch _x22 _110 ∧ rch _x22 _111 ∧ v == _x22)]
" ]
  node8 [ label = "_x5:[v:int | v == s]
_x5:[v:int | v == s]
_136:[v:int tree | leaf v]
_137:[v:int tree | leaf v]
_138:[v:int tree | ∃_x12, (root _x12 _x5 ∧ lch _x12 _136 ∧ rch _x12 _137 ∧ v == _x12)]
_139:[v:int tree | leaf v]
_x23:[v:int tree | ∃_x23, (root _x23 _x5 ∧ lch _x23 _138 ∧ rch _x23 _139 ∧ v == _x23)] 
 ⊢ let (_139) = Leaf  in
let (_18) = Leaf  in
let (_17) = Leaf  in
let (_x5) = s in let (_138) = Node _x5 _17 _18 in Node _x5 _138 _139 : int tree :
[v:int tree | ∃_x23, (root _x23 _x5 ∧ lch _x23 _138 ∧ rch _x23 _139 ∧ v == _x23)]
" ]
  node9 [ label = "_x4:[v:int | true]
_165:[v:int | true]
_166:[v:int tree | leaf v]
_167:[v:int tree | leaf v]
_168:[v:int tree | ∃_x13, (root _x13 _165 ∧ lch _x13 _166 ∧ rch _x13 _167 ∧ v == _x13)]
_169:[v:int tree | leaf v]
_x24:[v:int tree | ∃_x24, (root _x24 _x4 ∧ lch _x24 _168 ∧ rch _x24 _169 ∧ v == _x24)] 
 ⊢ let (_169) = Leaf  in
let (_20) = Leaf  in
let (_19) = Leaf  in
let (_x4) = int_gen () in let (_168) = Node _x4 _19 _20 in Node _x4 _168 _169 : int tree :
[v:int tree | ∃_x24, (root _x24 _x4 ∧ lch _x24 _168 ∧ rch _x24 _169 ∧ v == _x24)]
" ]
  node10 [ label = "_x4:[v:int | true]
_x5:[v:int | v == s]
_217:[v:int tree | leaf v]
_218:[v:int tree | leaf v]
_219:[v:int tree | ∃_x12, (root _x12 _x5 ∧ lch _x12 _217 ∧ rch _x12 _218 ∧ v == _x12)]
_220:[v:int tree | leaf v]
_x25:[v:int tree | ∃_x25, (root _x25 _x4 ∧ lch _x25 _219 ∧ rch _x25 _220 ∧ v == _x25)] 
 ⊢ let (_220) = Leaf  in
let (_18) = Leaf  in
let (_17) = Leaf  in
let (_x5) = s in
let (_219) = Node _x5 _17 _18 in let (_x4) = int_gen () in Node _x4 _219 _220 : int tree :
[v:int tree | ∃_x25, (root _x25 _x4 ∧ lch _x25 _219 ∧ rch _x25 _220 ∧ v == _x25)]
" ]
  node11 [ label = "_x5:[v:int | v == s]
_263:[v:int | true]
_264:[v:int tree | leaf v]
_265:[v:int tree | leaf v]
_266:[v:int tree | ∃_x13, (root _x13 _263 ∧ lch _x13 _264 ∧ rch _x13 _265 ∧ v == _x13)]
_267:[v:int | true]
_268:[v:int tree | leaf v]
_269:[v:int tree | leaf v]
_270:[v:int tree | ∃_x13, (root _x13 _267 ∧ lch _x13 _268 ∧ rch _x13 _269 ∧ v == _x13)]
_x26:[v:int tree | ∃_x26, (root _x26 _x5 ∧ lch _x26 _266 ∧ rch _x26 _270 ∧ v == _x26)] 
 ⊢ let (_20) = Leaf  in
let (_19) = Leaf  in
let (_x4) = int_gen () in
let (_270) = Node _x4 _19 _20 in
let (_266) = Node _x4 _19 _20 in let (_x5) = s in Node _x5 _266 _270 : int tree :
[v:int tree | ∃_x26, (root _x26 _x5 ∧ lch _x26 _266 ∧ rch _x26 _270 ∧ v == _x26)]
" ]
  node12 [ label = "_x5:[v:int | v == s]
_343:[v:int | true]
_344:[v:int tree | leaf v]
_345:[v:int tree | leaf v]
_346:[v:int tree | ∃_x13, (root _x13 _343 ∧ lch _x13 _344 ∧ rch _x13 _345 ∧ v == _x13)]
_x5:[v:int | v == s]
_347:[v:int tree | leaf v]
_348:[v:int tree | leaf v]
_349:[v:int tree | ∃_x12, (root _x12 _x5 ∧ lch _x12 _347 ∧ rch _x12 _348 ∧ v == _x12)]
_x27:[v:int tree | ∃_x27, (root _x27 _x5 ∧ lch _x27 _346 ∧ rch _x27 _349 ∧ v == _x27)] 
 ⊢ let (_18) = Leaf  in
let (_17) = Leaf  in
let (_x5) = s in
let (_349) = Node _x5 _17 _18 in
let (_20) = Leaf  in
let (_19) = Leaf  in
let (_x4) = int_gen () in let (_346) = Node _x4 _19 _20 in Node _x5 _346 _349 : int tree :
[v:int tree | ∃_x27, (root _x27 _x5 ∧ lch _x27 _346 ∧ rch _x27 _349 ∧ v == _x27)]
" ]
  node13 [ label = "_x5:[v:int | v == s]
_x5:[v:int | v == s]
_422:[v:int tree | leaf v]
_423:[v:int tree | leaf v]
_424:[v:int tree | ∃_x12, (root _x12 _x5 ∧ lch _x12 _422 ∧ rch _x12 _423 ∧ v == _x12)]
_425:[v:int | true]
_426:[v:int tree | leaf v]
_427:[v:int tree | leaf v]
_428:[v:int tree | ∃_x13, (root _x13 _425 ∧ lch _x13 _426 ∧ rch _x13 _427 ∧ v == _x13)]
_x28:[v:int tree | ∃_x28, (root _x28 _x5 ∧ lch _x28 _424 ∧ rch _x28 _428 ∧ v == _x28)] 
 ⊢ let (_20) = Leaf  in
let (_19) = Leaf  in
let (_x4) = int_gen () in
let (_428) = Node _x4 _19 _20 in
let (_18) = Leaf  in
let (_17) = Leaf  in
let (_x5) = s in let (_424) = Node _x5 _17 _18 in Node _x5 _424 _428 : int tree :
[v:int tree | ∃_x28, (root _x28 _x5 ∧ lch _x28 _424 ∧ rch _x28 _428 ∧ v == _x28)]
" ]
  node14 [ label = "_x5:[v:int | v == s]
_x5:[v:int | v == s]
_509:[v:int tree | leaf v]
_510:[v:int tree | leaf v]
_511:[v:int tree | ∃_x12, (root _x12 _x5 ∧ lch _x12 _509 ∧ rch _x12 _510 ∧ v == _x12)]
_x5:[v:int | v == s]
_512:[v:int tree | leaf v]
_513:[v:int tree | leaf v]
_514:[v:int tree | ∃_x12, (root _x12 _x5 ∧ lch _x12 _512 ∧ rch _x12 _513 ∧ v == _x12)]
_x29:[v:int tree | ∃_x29, (root _x29 _x5 ∧ lch _x29 _511 ∧ rch _x29 _514 ∧ v == _x29)] 
 ⊢ let (_18) = Leaf  in
let (_17) = Leaf  in
let (_x5) = s in
let (_514) = Node _x5 _17 _18 in
let (_511) = Node _x5 _17 _18 in Node _x5 _511 _514 : int tree :
[v:int tree | ∃_x29, (root _x29 _x5 ∧ lch _x29 _511 ∧ rch _x29 _514 ∧ v == _x29)]
" ]
  node15 [ label = "_x4:[v:int | true]
_600:[v:int | true]
_601:[v:int tree | leaf v]
_602:[v:int tree | leaf v]
_603:[v:int tree | ∃_x13, (root _x13 _600 ∧ lch _x13 _601 ∧ rch _x13 _602 ∧ v == _x13)]
_604:[v:int | true]
_605:[v:int tree | leaf v]
_606:[v:int tree | leaf v]
_607:[v:int tree | ∃_x13, (root _x13 _604 ∧ lch _x13 _605 ∧ rch _x13 _606 ∧ v == _x13)]
_x30:[v:int tree | ∃_x30, (root _x30 _x4 ∧ lch _x30 _603 ∧ rch _x30 _607 ∧ v == _x30)] 
 ⊢ let (_20) = Leaf  in
let (_19) = Leaf  in
let (_x4) = int_gen () in
let (_607) = Node _x4 _19 _20 in
let (_603) = Node _x4 _19 _20 in Node _x4 _603 _607 : int tree :
[v:int tree | ∃_x30, (root _x30 _x4 ∧ lch _x30 _603 ∧ rch _x30 _607 ∧ v == _x30)]
" ]
  node16 [ label = "_x4:[v:int | true]
_736:[v:int | true]
_737:[v:int tree | leaf v]
_738:[v:int tree | leaf v]
_739:[v:int tree | ∃_x13, (root _x13 _736 ∧ lch _x13 _737 ∧ rch _x13 _738 ∧ v == _x13)]
_x5:[v:int | v == s]
_740:[v:int tree | leaf v]
_741:[v:int tree | leaf v]
_742:[v:int tree | ∃_x12, (root _x12 _x5 ∧ lch _x12 _740 ∧ rch _x12 _741 ∧ v == _x12)]
_x31:[v:int tree | ∃_x31, (root _x31 _x4 ∧ lch _x31 _739 ∧ rch _x31 _742 ∧ v == _x31)] 
 ⊢ let (_18) = Leaf  in
let (_17) = Leaf  in
let (_x5) = s in
let (_742) = Node _x5 _17 _18 in
let (_20) = Leaf  in
let (_19) = Leaf  in
let (_x4) = int_gen () in let (_739) = Node _x4 _19 _20 in Node _x4 _739 _742 : int tree :
[v:int tree | ∃_x31, (root _x31 _x4 ∧ lch _x31 _739 ∧ rch _x31 _742 ∧ v == _x31)]
" ]
  node17 [ label = "_x4:[v:int | true]
_x5:[v:int | v == s]
_860:[v:int tree | leaf v]
_861:[v:int tree | leaf v]
_862:[v:int tree | ∃_x12, (root _x12 _x5 ∧ lch _x12 _860 ∧ rch _x12 _861 ∧ v == _x12)]
_863:[v:int | true]
_864:[v:int tree | leaf v]
_865:[v:int tree | leaf v]
_866:[v:int tree | ∃_x13, (root _x13 _863 ∧ lch _x13 _864 ∧ rch _x13 _865 ∧ v == _x13)]
_x32:[v:int tree | ∃_x32, (root _x32 _x4 ∧ lch _x32 _862 ∧ rch _x32 _866 ∧ v == _x32)] 
 ⊢ let (_20) = Leaf  in
let (_19) = Leaf  in
let (_x4) = int_gen () in
let (_866) = Node _x4 _19 _20 in
let (_18) = Leaf  in
let (_17) = Leaf  in
let (_x5) = s in let (_862) = Node _x5 _17 _18 in Node _x4 _862 _866 : int tree :
[v:int tree | ∃_x32, (root _x32 _x4 ∧ lch _x32 _862 ∧ rch _x32 _866 ∧ v == _x32)]
" ]
  node18 [ label = "_x4:[v:int | true]
_x5:[v:int | v == s]
_993:[v:int tree | leaf v]
_994:[v:int tree | leaf v]
_995:[v:int tree | ∃_x12, (root _x12 _x5 ∧ lch _x12 _993 ∧ rch _x12 _994 ∧ v == _x12)]
_x5:[v:int | v == s]
_996:[v:int tree | leaf v]
_997:[v:int tree | leaf v]
_998:[v:int tree | ∃_x12, (root _x12 _x5 ∧ lch _x12 _996 ∧ rch _x12 _997 ∧ v == _x12)]
_x33:[v:int tree | ∃_x33, (root _x33 _x4 ∧ lch _x33 _995 ∧ rch _x33 _998 ∧ v == _x33)] 
 ⊢ let (_18) = Leaf  in
let (_17) = Leaf  in
let (_x5) = s in
let (_998) = Node _x5 _17 _18 in
let (_995) = Node _x5 _17 _18 in let (_x4) = int_gen () in Node _x4 _995 _998 : int tree :
[v:int tree | ∃_x33, (root _x33 _x4 ∧ lch _x33 _995 ∧ rch _x33 _998 ∧ v == _x33)]
" ]
  node19 [ label = "_x5:[v:int | v == s]
_x8:[v:int | v == (_x5 - 1)]
_1119:[v:int tree | leaf v]
_1120:[v:int tree | leaf v]
_x34:[v:int tree | ∃_x34, (root _x34 _x8 ∧ lch _x34 _1119 ∧ rch _x34 _1120 ∧ v == _x34)] 
 ⊢ let (_1120) = Leaf  in
let (_1119) = Leaf  in
let (_x5) = s in let (_x8) = subs _x5 in Node _x8 _1119 _1120 : int tree :
[v:int tree | ∃_x34, (root _x34 _x8 ∧ lch _x34 _1119 ∧ rch _x34 _1120 ∧ v == _x34)]
" ]
  node20 [ label = "_x5:[v:int | v == s]
_x8:[v:int | v == (_x5 - 1)]
_1185:[v:int tree | leaf v]
_1186:[v:int | true]
_1187:[v:int tree | leaf v]
_1188:[v:int tree | leaf v]
_1189:[v:int tree | ∃_x13, (root _x13 _1186 ∧ lch _x13 _1187 ∧ rch _x13 _1188 ∧ v == _x13)]
_x35:[v:int tree | ∃_x35, (root _x35 _x8 ∧ lch _x35 _1185 ∧ rch _x35 _1189 ∧ v == _x35)] 
 ⊢ let (_20) = Leaf  in
let (_19) = Leaf  in
let (_x4) = int_gen () in
let (_1189) = Node _x4 _19 _20 in
let (_1185) = Leaf  in
let (_x5) = s in let (_x8) = subs _x5 in Node _x8 _1185 _1189 : int tree :
[v:int tree | ∃_x35, (root _x35 _x8 ∧ lch _x35 _1185 ∧ rch _x35 _1189 ∧ v == _x35)]
" ]
  node21 [ label = "_x5:[v:int | v == s]
_x8:[v:int | v == (_x5 - 1)]
_1309:[v:int tree | leaf v]
_x5:[v:int | v == s]
_1310:[v:int tree | leaf v]
_1311:[v:int tree | leaf v]
_1312:[v:int tree | ∃_x12, (root _x12 _x5 ∧ lch _x12 _1310 ∧ rch _x12 _1311 ∧ v == _x12)]
_x36:[v:int tree | ∃_x36, (root _x36 _x8 ∧ lch _x36 _1309 ∧ rch _x36 _1312 ∧ v == _x36)] 
 ⊢ let (_18) = Leaf  in
let (_17) = Leaf  in
let (_x5) = s in
let (_1312) = Node _x5 _17 _18 in
let (_1309) = Leaf  in let (_x8) = subs _x5 in Node _x8 _1309 _1312 : int tree :
[v:int tree | ∃_x36, (root _x36 _x8 ∧ lch _x36 _1309 ∧ rch _x36 _1312 ∧ v == _x36)]
" ]
  node22 [ label = "_x5:[v:int | v == s]
_x8:[v:int | v == (_x5 - 1)]
_1428:[v:int | true]
_1429:[v:int tree | leaf v]
_1430:[v:int tree | leaf v]
_1431:[v:int tree | ∃_x13, (root _x13 _1428 ∧ lch _x13 _1429 ∧ rch _x13 _1430 ∧ v == _x13)]
_1432:[v:int tree | leaf v]
_x37:[v:int tree | ∃_x37, (root _x37 _x8 ∧ lch _x37 _1431 ∧ rch _x37 _1432 ∧ v == _x37)] 
 ⊢ let (_1432) = Leaf  in
let (_20) = Leaf  in
let (_19) = Leaf  in
let (_x4) = int_gen () in
let (_1431) = Node _x4 _19 _20 in
let (_x5) = s in let (_x8) = subs _x5 in Node _x8 _1431 _1432 : int tree :
[v:int tree | ∃_x37, (root _x37 _x8 ∧ lch _x37 _1431 ∧ rch _x37 _1432 ∧ v == _x37)]
" ]
  node23 [ label = "_x5:[v:int | v == s]
_x8:[v:int | v == (_x5 - 1)]
_x5:[v:int | v == s]
_1566:[v:int tree | leaf v]
_1567:[v:int tree | leaf v]
_1568:[v:int tree | ∃_x12, (root _x12 _x5 ∧ lch _x12 _1566 ∧ rch _x12 _1567 ∧ v == _x12)]
_1569:[v:int tree | leaf v]
_x38:[v:int tree | ∃_x38, (root _x38 _x8 ∧ lch _x38 _1568 ∧ rch _x38 _1569 ∧ v == _x38)] 
 ⊢ let (_1569) = Leaf  in
let (_18) = Leaf  in
let (_17) = Leaf  in
let (_x5) = s in
let (_1568) = Node _x5 _17 _18 in
let (_x8) = subs _x5 in Node _x8 _1568 _1569 : int tree :
[v:int tree | ∃_x38, (root _x38 _x8 ∧ lch _x38 _1568 ∧ rch _x38 _1569 ∧ v == _x38)]
" ]
  node24 [ label = "_x5:[v:int | v == s]
_x8:[v:int | v == (_x5 - 1)]
_1697:[v:int | true]
_1698:[v:int tree | leaf v]
_1699:[v:int tree | leaf v]
_1700:[v:int tree | ∃_x13, (root _x13 _1697 ∧ lch _x13 _1698 ∧ rch _x13 _1699 ∧ v == _x13)]
_1701:[v:int | true]
_1702:[v:int tree | leaf v]
_1703:[v:int tree | leaf v]
_1704:[v:int tree | ∃_x13, (root _x13 _1701 ∧ lch _x13 _1702 ∧ rch _x13 _1703 ∧ v == _x13)]
_x39:[v:int tree | ∃_x39, (root _x39 _x8 ∧ lch _x39 _1700 ∧ rch _x39 _1704 ∧ v == _x39)] 
 ⊢ let (_20) = Leaf  in
let (_19) = Leaf  in
let (_x4) = int_gen () in
let (_1704) = Node _x4 _19 _20 in
let (_1700) = Node _x4 _19 _20 in
let (_x5) = s in let (_x8) = subs _x5 in Node _x8 _1700 _1704 : int tree :
[v:int tree | ∃_x39, (root _x39 _x8 ∧ lch _x39 _1700 ∧ rch _x39 _1704 ∧ v == _x39)]
" ]
  node25 [ label = "_x5:[v:int | v == s]
_x8:[v:int | v == (_x5 - 1)]
_1915:[v:int | true]
_1916:[v:int tree | leaf v]
_1917:[v:int tree | leaf v]
_1918:[v:int tree | ∃_x13, (root _x13 _1915 ∧ lch _x13 _1916 ∧ rch _x13 _1917 ∧ v == _x13)]
_x5:[v:int | v == s]
_1919:[v:int tree | leaf v]
_1920:[v:int tree | leaf v]
_1921:[v:int tree | ∃_x12, (root _x12 _x5 ∧ lch _x12 _1919 ∧ rch _x12 _1920 ∧ v == _x12)]
_x40:[v:int tree | ∃_x40, (root _x40 _x8 ∧ lch _x40 _1918 ∧ rch _x40 _1921 ∧ v == _x40)] 
 ⊢ let (_18) = Leaf  in
let (_17) = Leaf  in
let (_x5) = s in
let (_1921) = Node _x5 _17 _18 in
let (_20) = Leaf  in
let (_19) = Leaf  in
let (_x4) = int_gen () in
let (_1918) = Node _x4 _19 _20 in
let (_x8) = subs _x5 in Node _x8 _1918 _1921 : int tree :
[v:int tree | ∃_x40, (root _x40 _x8 ∧ lch _x40 _1918 ∧ rch _x40 _1921 ∧ v == _x40)]
" ]
  node26 [ label = "_x5:[v:int | v == s]
_x8:[v:int | v == (_x5 - 1)]
_x5:[v:int | v == s]
_2130:[v:int tree | leaf v]
_2131:[v:int tree | leaf v]
_2132:[v:int tree | ∃_x12, (root _x12 _x5 ∧ lch _x12 _2130 ∧ rch _x12 _2131 ∧ v == _x12)]
_2133:[v:int | true]
_2134:[v:int tree | leaf v]
_2135:[v:int tree | leaf v]
_2136:[v:int tree | ∃_x13, (root _x13 _2133 ∧ lch _x13 _2134 ∧ rch _x13 _2135 ∧ v == _x13)]
_x41:[v:int tree | ∃_x41, (root _x41 _x8 ∧ lch _x41 _2132 ∧ rch _x41 _2136 ∧ v == _x41)] 
 ⊢ let (_20) = Leaf  in
let (_19) = Leaf  in
let (_x4) = int_gen () in
let (_2136) = Node _x4 _19 _20 in
let (_18) = Leaf  in
let (_17) = Leaf  in
let (_x5) = s in
let (_2132) = Node _x5 _17 _18 in
let (_x8) = subs _x5 in Node _x8 _2132 _2136 : int tree :
[v:int tree | ∃_x41, (root _x41 _x8 ∧ lch _x41 _2132 ∧ rch _x41 _2136 ∧ v == _x41)]
" ]
  node27 [ label = "_x5:[v:int | v == s]
_x8:[v:int | v == (_x5 - 1)]
_x5:[v:int | v == s]
_2344:[v:int tree | leaf v]
_2345:[v:int tree | leaf v]
_2346:[v:int tree | ∃_x12, (root _x12 _x5 ∧ lch _x12 _2344 ∧ rch _x12 _2345 ∧ v == _x12)]
_x5:[v:int | v == s]
_2347:[v:int tree | leaf v]
_2348:[v:int tree | leaf v]
_2349:[v:int tree | ∃_x12, (root _x12 _x5 ∧ lch _x12 _2347 ∧ rch _x12 _2348 ∧ v == _x12)]
_x42:[v:int tree | ∃_x42, (root _x42 _x8 ∧ lch _x42 _2346 ∧ rch _x42 _2349 ∧ v == _x42)] 
 ⊢ let (_18) = Leaf  in
let (_17) = Leaf  in
let (_x5) = s in
let (_2349) = Node _x5 _17 _18 in
let (_2346) = Node _x5 _17 _18 in
let (_x8) = subs _x5 in Node _x8 _2346 _2349 : int tree :
[v:int tree | ∃_x42, (root _x42 _x8 ∧ lch _x42 _2346 ∧ rch _x42 _2349 ∧ v == _x42)]
" ]

  node0 [ shape = box, color = green ]
  node1 [ shape = box, color = red ]
  node2 [ shape = box, color = blue ]
  node2 -> node1
  node2 -> node19
  node3 -> node4
  node4 [ shape = box, color = red ]
  node5 [ shape = box, color = blue ]
  node5 -> node20
  node5 -> node6
  node5 -> node3
  node6 [ shape = box, color = red ]
  node7 -> node8
  node8 [ shape = box, color = red ]
  node9 [ shape = box, color = blue ]
  node9 -> node10
  node9 -> node22
  node9 -> node7
  node10 [ shape = box, color = red ]
  node11 -> node12
  node11 -> node13
  node12 -> node14
  node13 [ shape = box, color = red ]
  node14 [ shape = box, color = red ]
  node15 [ shape = box, color = blue ]
  node15 -> node16
  node15 -> node24
  node15 -> node17
  node15 -> node11
  node16 -> node12
  node16 -> node18
  node16 -> node25
  node16 -> node27
  node17 [ shape = box, color = red ]
  node18 [ shape = box, color = red ]
  node19 [ shape = box, color = red ]
  node20 -> node21
  node21 [ shape = box, color = red ]
  node22 -> node23
  node23 [ shape = box, color = red ]
  node24 -> node26
  node24 -> node25
  node25 -> node27
  node26 [ shape = box, color = red ]
  node27 [ shape = box, color = red ]
}
Type: bool
digraph poset {
  label = "Partially Ordered Set"
  size = "8.270000,11.690000"
  ratio = 0.900000
  rotate = 0.000000
  center = 1

  edge [ dir = back ]

  node0 [ label = "_x5:[v:int | v == s]
_x8:[v:int | v == (_x5 - 1)]
_x17:[v:bool | ∃_x17, ((_x17 <=> _x8 == 0) ∧ (¬_x17 <=> _x8 > 0) ∧ v == _x17)] 
 ⊢ let (_x5) = s in let (_x8) = subs _x5 in sizecheck _x8 : bool :
[v:bool | ∃_x17, ((_x17 <=> _x8 == 0) ∧ (¬_x17 <=> _x8 > 0) ∧ v == _x17)]
" ]
  node1 [ label = "_x5:[v:int | v == s]
_x10:[v:bool | ∃_x10, ((_x10 <=> _x5 == 0) ∧ (¬_x10 <=> _x5 > 0) ∧ v == _x10)] 
 ⊢ let (_x5) = s in sizecheck _x5 : bool :
[v:bool | ∃_x10, ((_x10 <=> _x5 == 0) ∧ (¬_x10 <=> _x5 > 0) ∧ v == _x10)]
" ]
  node2 [ label = "_x4:[v:int | true]
_x11:[v:bool | ∃_x11, ((_x11 <=> _x4 == 0) ∧ (¬_x11 <=> _x4 > 0) ∧ v == _x11)] 
 ⊢ let (_x4) = int_gen () in sizecheck _x4 : bool :
[v:bool | ∃_x11, ((_x11 <=> _x4 == 0) ∧ (¬_x11 <=> _x4 > 0) ∧ v == _x11)]
" ]
  node3 [ label = "_x1:[v:bool | ¬v] 
 ⊢ False  : bool :
[v:bool | ¬v]
" ]
  node4 [ label = "_x0:[v:bool | v] 
 ⊢ True  : bool :
[v:bool | v]
" ]

  node0 [ shape = box, color = red ]
  node1 [ shape = box, color = red ]
  node2 [ shape = box, color = blue ]
  node2 -> node0
  node2 -> node4
  node2 -> node1
  node2 -> node3
  node3 [ shape = box, color = red ]
  node4 [ shape = box, color = red ]
}
Type: int
digraph poset {
  label = "Partially Ordered Set"
  size = "8.270000,11.690000"
  ratio = 0.900000
  rotate = 0.000000
  center = 1

  edge [ dir = back ]

  node0 [ label = "_x5:[v:int | v == s]
_x8:[v:int | v == (_x5 - 1)]
_x16:[v:int | v == (_x8 - 1)] 
 ⊢ let (_x5) = s in let (_x8) = subs _x5 in subs _x8 : int :
[v:int | v == (_x8 - 1)]
" ]
  node1 [ label = "_x5:[v:int | v == s]
_x8:[v:int | v == (_x5 - 1)] 
 ⊢ let (_x5) = s in subs _x5 : int :
[v:int | v == (_x5 - 1)]
" ]
  node2 [ label = "_x4:[v:int | true] 
 ⊢ int_gen () : int :
[v:int | true]
" ]
  node3 [ label = "_x5:[v:int | v == s] 
 ⊢ s : int :
[v:int | v == s]
" ]

  node0 [ shape = box, color = red ]
  node1 [ shape = box, color = red ]
  node2 [ shape = box, color = blue ]
  node2 -> node0
  node2 -> node1
  node2 -> node3
  node3 [ shape = box, color = red ]
}
Path Specific Collection:
pathcond_0:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ x_3)]
New Blocks:
Old Blocks:
