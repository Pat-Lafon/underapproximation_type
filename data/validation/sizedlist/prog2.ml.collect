General Collection:
New Blocks:
Old Blocks:
Type: int list
digraph poset {
  label = "Partially Ordered Set"
  size = "8.270000,11.690000"
  ratio = 0.900000
  rotate = 0.000000
  center = 1

  edge [ dir = back ]

  node0 [ label = "_x2:[v:int list | emp v] 
 ⊢ Nil : int list :
[v:int list | emp v]
" ]
  node1 [ label = "_x5:[v:int | v == s]
_26:[v:int list | emp v]
_x13:[v:int list | ∃_x13, (hd _x13 _x5 ∧ tl _x13 _26 ∧ v == _x13)] 
 ⊢ let (_26) = Nil in let (_x5) = s in Cons (_x5, _26) : int list :
[v:int list | ∃_x13, (hd _x13 _x5 ∧ tl _x13 _26 ∧ v == _x13)]
" ]
  node2 [ label = "_x4:[v:int | true]
_27:[v:int list | emp v]
_x14:[v:int list | ∃_x14, (hd _x14 _x4 ∧ tl _x14 _27 ∧ v == _x14)] 
 ⊢ let (_27) = Nil in let (_x4) = int_gen () in Cons (_x4, _27) : int list :
[v:int list | ∃_x14, (hd _x14 _x4 ∧ tl _x14 _27 ∧ v == _x14)]
" ]
  node3 [ label = "_x5:[v:int | v == s]
_53:[v:int | true]
_54:[v:int list | emp v]
_55:[v:int list | ∃_x14, (hd _x14 _53 ∧ tl _x14 _54 ∧ v == _x14)]
_x19:[v:int list | ∃_x19, (hd _x19 _x5 ∧ tl _x19 _55 ∧ v == _x19)] 
 ⊢ let (_27) = Nil in
let (_x4) = int_gen () in
let (_55) = Cons (_x4, _27) in let (_x5) = s in Cons (_x5, _55) : int list :
[v:int list | ∃_x19, (hd _x19 _x5 ∧ tl _x19 _55 ∧ v == _x19)]
" ]
  node4 [ label = "_x5:[v:int | v == s]
_x5:[v:int | v == s]
_56:[v:int list | emp v]
_57:[v:int list | ∃_x13, (hd _x13 _x5 ∧ tl _x13 _56 ∧ v == _x13)]
_x20:[v:int list | ∃_x20, (hd _x20 _x5 ∧ tl _x20 _57 ∧ v == _x20)] 
 ⊢ let (_26) = Nil in
let (_x5) = s in let (_57) = Cons (_x5, _26) in Cons (_x5, _57) : int list :
[v:int list | ∃_x20, (hd _x20 _x5 ∧ tl _x20 _57 ∧ v == _x20)]
" ]
  node5 [ label = "_x4:[v:int | true]
_61:[v:int | true]
_62:[v:int list | emp v]
_63:[v:int list | ∃_x14, (hd _x14 _61 ∧ tl _x14 _62 ∧ v == _x14)]
_x21:[v:int list | ∃_x21, (hd _x21 _x4 ∧ tl _x21 _63 ∧ v == _x21)] 
 ⊢ let (_27) = Nil in
let (_x4) = int_gen () in let (_63) = Cons (_x4, _27) in Cons (_x4, _63) : int list :
[v:int list | ∃_x21, (hd _x21 _x4 ∧ tl _x21 _63 ∧ v == _x21)]
" ]
  node6 [ label = "_x4:[v:int | true]
_x5:[v:int | v == s]
_77:[v:int list | emp v]
_78:[v:int list | ∃_x13, (hd _x13 _x5 ∧ tl _x13 _77 ∧ v == _x13)]
_x22:[v:int list | ∃_x22, (hd _x22 _x4 ∧ tl _x22 _78 ∧ v == _x22)] 
 ⊢ let (_26) = Nil in
let (_x5) = s in
let (_78) = Cons (_x5, _26) in let (_x4) = int_gen () in Cons (_x4, _78) : int list :
[v:int list | ∃_x22, (hd _x22 _x4 ∧ tl _x22 _78 ∧ v == _x22)]
" ]
  node7 [ label = "_x5:[v:int | v == s]
_x9:[v:int | v == (_x5 - 1)]
_91:[v:int list | emp v]
_x23:[v:int list | ∃_x23, (hd _x23 _x9 ∧ tl _x23 _91 ∧ v == _x23)] 
 ⊢ let (_91) = Nil in let (_x5) = s in let (_x9) = subs _x5 in Cons (_x9, _91) : int list :
[v:int list | ∃_x23, (hd _x23 _x9 ∧ tl _x23 _91 ∧ v == _x23)]
" ]
  node8 [ label = "_x5:[v:int | v == s]
_x9:[v:int | v == (_x5 - 1)]
_104:[v:int | true]
_105:[v:int list | emp v]
_106:[v:int list | ∃_x14, (hd _x14 _104 ∧ tl _x14 _105 ∧ v == _x14)]
_x24:[v:int list | ∃_x24, (hd _x24 _x9 ∧ tl _x24 _106 ∧ v == _x24)] 
 ⊢ let (_27) = Nil in
let (_x4) = int_gen () in
let (_106) = Cons (_x4, _27) in
let (_x5) = s in let (_x9) = subs _x5 in Cons (_x9, _106) : int list :
[v:int list | ∃_x24, (hd _x24 _x9 ∧ tl _x24 _106 ∧ v == _x24)]
" ]
  node9 [ label = "_x5:[v:int | v == s]
_x9:[v:int | v == (_x5 - 1)]
_x5:[v:int | v == s]
_132:[v:int list | emp v]
_133:[v:int list | ∃_x13, (hd _x13 _x5 ∧ tl _x13 _132 ∧ v == _x13)]
_x25:[v:int list | ∃_x25, (hd _x25 _x9 ∧ tl _x25 _133 ∧ v == _x25)] 
 ⊢ let (_26) = Nil in
let (_x5) = s in
let (_133) = Cons (_x5, _26) in let (_x9) = subs _x5 in Cons (_x9, _133) : int list :
[v:int list | ∃_x25, (hd _x25 _x9 ∧ tl _x25 _133 ∧ v == _x25)]
" ]

  node0 [ shape = box, color = green ]
  node1 [ shape = box, color = red ]
  node2 [ shape = box, color = blue ]
  node2 -> node1
  node2 -> node7
  node3 -> node4
  node4 [ shape = box, color = red ]
  node5 [ shape = box, color = blue ]
  node5 -> node8
  node5 -> node6
  node5 -> node3
  node6 -> node4
  node6 -> node9
  node7 [ shape = box, color = red ]
  node8 -> node9
  node9 [ shape = box, color = red ]
}
Type: bool
digraph poset {
  label = "Partially Ordered Set"
  size = "8.270000,11.690000"
  ratio = 0.900000
  rotate = 0.000000
  center = 1

  edge [ dir = back ]

  node0 [ label = "_x5:[v:int | v == s]
_x9:[v:int | v == (_x5 - 1)]
_x18:[v:bool | ∃_x18, ((_x18 <=> _x9 == 0) ∧ (¬_x18 <=> _x9 > 0) ∧ v == _x18)] 
 ⊢ let (_x5) = s in let (_x9) = subs _x5 in sizecheck _x9 : bool :
[v:bool | ∃_x18, ((_x18 <=> _x9 == 0) ∧ (¬_x18 <=> _x9 > 0) ∧ v == _x18)]
" ]
  node1 [ label = "_x5:[v:int | v == s]
_x11:[v:bool | ∃_x11, ((_x11 <=> _x5 == 0) ∧ (¬_x11 <=> _x5 > 0) ∧ v == _x11)] 
 ⊢ let (_x5) = s in sizecheck _x5 : bool :
[v:bool | ∃_x11, ((_x11 <=> _x5 == 0) ∧ (¬_x11 <=> _x5 > 0) ∧ v == _x11)]
" ]
  node2 [ label = "_x3:[v:bool | true] 
 ⊢ bool_gen () : bool :
[v:bool | true]
" ]
  node3 [ label = "_x1:[v:bool | ¬v] 
 ⊢ False : bool :
[v:bool | ¬v]
" ]
  node4 [ label = "_x0:[v:bool | v] 
 ⊢ True : bool :
[v:bool | v]
" ]

  node0 [ shape = box, color = red ]
  node1 [ shape = box, color = red ]
  node2 [ shape = box, color = blue ]
  node2 -> node0
  node2 -> node4
  node2 -> node1
  node2 -> node3
  node3 [ shape = box, color = red ]
  node4 [ shape = box, color = red ]
}
Type: int
digraph poset {
  label = "Partially Ordered Set"
  size = "8.270000,11.690000"
  ratio = 0.900000
  rotate = 0.000000
  center = 1

  edge [ dir = back ]

  node0 [ label = "_x5:[v:int | v == s]
_x9:[v:int | v == (_x5 - 1)]
_x17:[v:int | v == (_x9 - 1)] 
 ⊢ let (_x5) = s in let (_x9) = subs _x5 in subs _x9 : int :
[v:int | v == (_x9 - 1)]
" ]
  node1 [ label = "_x5:[v:int | v == s]
_x9:[v:int | v == (_x5 - 1)] 
 ⊢ let (_x5) = s in subs _x5 : int :
[v:int | v == (_x5 - 1)]
" ]
  node2 [ label = "_x4:[v:int | true] 
 ⊢ int_gen () : int :
[v:int | true]
" ]
  node3 [ label = "_x5:[v:int | v == s] 
 ⊢ s : int :
[v:int | v == s]
" ]

  node0 [ shape = box, color = red ]
  node1 [ shape = box, color = red ]
  node2 [ shape = box, color = blue ]
  node2 -> node0
  node2 -> node1
  node2 -> node3
  node3 [ shape = box, color = red ]
}
Path Specific Collection:
pathcond_0:[v:unit | ∃x_7, ((x_7 <=> s == 0) ∧ (¬x_7 <=> s > 0) ∧ ¬x_7 ∧ (∃x_8, x_8))]
New Blocks:
Old Blocks:
Type: int list
digraph poset {
  label = "Partially Ordered Set"
  size = "8.270000,11.690000"
  ratio = 0.900000
  rotate = 0.000000
  center = 1

  edge [ dir = back ]

  node0 [ label = "_x5:[v:int | v == s]
_x9:[v:int | v == (_x5 - 1)]
pathcond_0:[v:unit | ∃x_7, ((x_7 <=> s == 0) ∧ (¬x_7 <=> s > 0) ∧ ¬x_7 ∧ (∃x_8, x_8))]
_x26:[v:int list | ∃s_15, (0 <= s_15 ∧ s_15 >= 0 ∧ s_15 < s ∧ s_15 == _x9 ∧ (∃_x26, ((∃n, (len _x26 n ∧ n <= s_15)) ∧ v == _x26)))] 
 ⊢ let (_x5) = s in let (_x9) = subs _x5 in sized_list_gen _x9 : int list :
[v:int list | ∃s_15, (0 <= s_15 ∧ s_15 >= 0 ∧ s_15 < s ∧ s_15 == _x9 ∧ (∃_x26, ((∃n, (len _x26 n ∧ n <= s_15)) ∧ v == _x26)))]
" ]

  node0 [ shape = box, color = green ]
}
