General Collection:
New Blocks:
Old Blocks:
Type: int list
digraph poset {
  label = "Partially Ordered Set"
  size = "8.270000,11.690000"
  ratio = 0.900000
  rotate = 0.000000
  center = 1

  edge [ dir = back ]

  node0 [ label = "_x0:[v:int list | emp v] 
 ⊢ Nil : int list :
[v:int list | emp v]
" ]
  node1 [ label = "_x2:[v:int | v == s]
_17:[v:int list | emp v]
_x8:[v:int list | ∃_x8, (hd _x8 _x2 ∧ tl _x8 _17 ∧ v == _x8)] 
 ⊢ let (_17) = Nil in let (_x2) = s in Cons (_x2, _17) : int list :
[v:int list | ∃_x8, (hd _x8 _x2 ∧ tl _x8 _17 ∧ v == _x8)]
" ]
  node2 [ label = "_x1:[v:int | true]
_18:[v:int list | emp v]
_x9:[v:int list | ∃_x9, (hd _x9 _x1 ∧ tl _x9 _18 ∧ v == _x9)] 
 ⊢ let (_18) = Nil in let (_x1) = int_gen () in Cons (_x1, _18) : int list :
[v:int list | ∃_x9, (hd _x9 _x1 ∧ tl _x9 _18 ∧ v == _x9)]
" ]
  node3 [ label = "_x2:[v:int | v == s]
_34:[v:int | true]
_35:[v:int list | emp v]
_36:[v:int list | ∃_x9, (hd _x9 _34 ∧ tl _x9 _35 ∧ v == _x9)]
_x13:[v:int list | ∃_x13, (hd _x13 _x2 ∧ tl _x13 _36 ∧ v == _x13)] 
 ⊢ let (_18) = Nil in
let (_x1) = int_gen () in
let (_36) = Cons (_x1, _18) in let (_x2) = s in Cons (_x2, _36) : int list :
[v:int list | ∃_x13, (hd _x13 _x2 ∧ tl _x13 _36 ∧ v == _x13)]
" ]
  node4 [ label = "_x2:[v:int | v == s]
_x2:[v:int | v == s]
_37:[v:int list | emp v]
_38:[v:int list | ∃_x8, (hd _x8 _x2 ∧ tl _x8 _37 ∧ v == _x8)]
_x14:[v:int list | ∃_x14, (hd _x14 _x2 ∧ tl _x14 _38 ∧ v == _x14)] 
 ⊢ let (_17) = Nil in
let (_x2) = s in let (_38) = Cons (_x2, _17) in Cons (_x2, _38) : int list :
[v:int list | ∃_x14, (hd _x14 _x2 ∧ tl _x14 _38 ∧ v == _x14)]
" ]
  node5 [ label = "_x1:[v:int | true]
_42:[v:int | true]
_43:[v:int list | emp v]
_44:[v:int list | ∃_x9, (hd _x9 _42 ∧ tl _x9 _43 ∧ v == _x9)]
_x15:[v:int list | ∃_x15, (hd _x15 _x1 ∧ tl _x15 _44 ∧ v == _x15)] 
 ⊢ let (_18) = Nil in
let (_x1) = int_gen () in let (_44) = Cons (_x1, _18) in Cons (_x1, _44) : int list :
[v:int list | ∃_x15, (hd _x15 _x1 ∧ tl _x15 _44 ∧ v == _x15)]
" ]
  node6 [ label = "_x1:[v:int | true]
_x2:[v:int | v == s]
_58:[v:int list | emp v]
_59:[v:int list | ∃_x8, (hd _x8 _x2 ∧ tl _x8 _58 ∧ v == _x8)]
_x16:[v:int list | ∃_x16, (hd _x16 _x1 ∧ tl _x16 _59 ∧ v == _x16)] 
 ⊢ let (_17) = Nil in
let (_x2) = s in
let (_59) = Cons (_x2, _17) in let (_x1) = int_gen () in Cons (_x1, _59) : int list :
[v:int list | ∃_x16, (hd _x16 _x1 ∧ tl _x16 _59 ∧ v == _x16)]
" ]
  node7 [ label = "_x2:[v:int | v == s]
_x6:[v:int | v == (_x2 - 1)]
_72:[v:int list | emp v]
_x17:[v:int list | ∃_x17, (hd _x17 _x6 ∧ tl _x17 _72 ∧ v == _x17)] 
 ⊢ let (_72) = Nil in let (_x2) = s in let (_x6) = subs _x2 in Cons (_x6, _72) : int list :
[v:int list | ∃_x17, (hd _x17 _x6 ∧ tl _x17 _72 ∧ v == _x17)]
" ]
  node8 [ label = "_x2:[v:int | v == s]
_x6:[v:int | v == (_x2 - 1)]
_85:[v:int | true]
_86:[v:int list | emp v]
_87:[v:int list | ∃_x9, (hd _x9 _85 ∧ tl _x9 _86 ∧ v == _x9)]
_x18:[v:int list | ∃_x18, (hd _x18 _x6 ∧ tl _x18 _87 ∧ v == _x18)] 
 ⊢ let (_18) = Nil in
let (_x1) = int_gen () in
let (_87) = Cons (_x1, _18) in
let (_x2) = s in let (_x6) = subs _x2 in Cons (_x6, _87) : int list :
[v:int list | ∃_x18, (hd _x18 _x6 ∧ tl _x18 _87 ∧ v == _x18)]
" ]
  node9 [ label = "_x2:[v:int | v == s]
_x6:[v:int | v == (_x2 - 1)]
_x2:[v:int | v == s]
_113:[v:int list | emp v]
_114:[v:int list | ∃_x8, (hd _x8 _x2 ∧ tl _x8 _113 ∧ v == _x8)]
_x19:[v:int list | ∃_x19, (hd _x19 _x6 ∧ tl _x19 _114 ∧ v == _x19)] 
 ⊢ let (_17) = Nil in
let (_x2) = s in
let (_114) = Cons (_x2, _17) in let (_x6) = subs _x2 in Cons (_x6, _114) : int list :
[v:int list | ∃_x19, (hd _x19 _x6 ∧ tl _x19 _114 ∧ v == _x19)]
" ]

  node0 [ shape = box, color = green ]
  node1 [ shape = box, color = red ]
  node2 [ shape = box, color = blue ]
  node2 -> node1
  node2 -> node7
  node3 -> node4
  node4 [ shape = box, color = red ]
  node5 [ shape = box, color = blue ]
  node5 -> node8
  node5 -> node6
  node5 -> node3
  node6 -> node4
  node6 -> node9
  node7 [ shape = box, color = red ]
  node8 -> node9
  node9 [ shape = box, color = red ]
}
Type: int
digraph poset {
  label = "Partially Ordered Set"
  size = "8.270000,11.690000"
  ratio = 0.900000
  rotate = 0.000000
  center = 1

  edge [ dir = back ]

  node0 [ label = "_x2:[v:int | v == s]
_x6:[v:int | v == (_x2 - 1)]
_x12:[v:int | v == (_x6 - 1)] 
 ⊢ let (_x2) = s in let (_x6) = subs _x2 in subs _x6 : int :
[v:int | v == (_x6 - 1)]
" ]
  node1 [ label = "_x2:[v:int | v == s]
_x6:[v:int | v == (_x2 - 1)] 
 ⊢ let (_x2) = s in subs _x2 : int :
[v:int | v == (_x2 - 1)]
" ]
  node2 [ label = "_x1:[v:int | true] 
 ⊢ int_gen () : int :
[v:int | true]
" ]
  node3 [ label = "_x2:[v:int | v == s] 
 ⊢ s : int :
[v:int | v == s]
" ]

  node0 [ shape = box, color = red ]
  node1 [ shape = box, color = red ]
  node2 [ shape = box, color = blue ]
  node2 -> node0
  node2 -> node1
  node2 -> node3
  node3 [ shape = box, color = red ]
}
Path Specific Collection:
pathcond_0:[v:unit | ∃x_7, ((x_7 <=> s == 0) ∧ (¬x_7 <=> s > 0) ∧ ¬x_7 ∧ (∃x_8, x_8))]
New Blocks:
Old Blocks:
Type: int list
digraph poset {
  label = "Partially Ordered Set"
  size = "8.270000,11.690000"
  ratio = 0.900000
  rotate = 0.000000
  center = 1

  edge [ dir = back ]

  node0 [ label = "_x2:[v:int | v == s]
_x6:[v:int | v == (_x2 - 1)]
pathcond_0:[v:unit | ∃x_7, ((x_7 <=> s == 0) ∧ (¬x_7 <=> s > 0) ∧ ¬x_7 ∧ (∃x_8, x_8))]
_x20:[v:int list | ∃s_15, (0 <= s_15 ∧ s_15 >= 0 ∧ s_15 < s ∧ s_15 == _x6 ∧ (∃_x20, ((∃n, (len _x20 n ∧ n <= s_15)) ∧ v == _x20)))] 
 ⊢ let (_x2) = s in let (_x6) = subs _x2 in sized_list_gen _x6 : int list :
[v:int list | ∃s_15, (0 <= s_15 ∧ s_15 >= 0 ∧ s_15 < s ∧ s_15 == _x6 ∧ (∃_x20, ((∃n, (len _x20 n ∧ n <= s_15)) ∧ v == _x20)))]
" ]

  node0 [ shape = box, color = green ]
}
