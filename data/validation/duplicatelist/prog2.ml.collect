General Collection:
New Blocks:
Old Blocks:
Type: int list
digraph poset {
  label = "Partially Ordered Set"
  size = "8.270000,11.690000"
  ratio = 0.900000
  rotate = 0.000000
  center = 1

  edge [ dir = back ]

  node0 [ label = "_x2:[v:int list | emp v] 
 ⊢ Nil  : int list :
[v:int list | emp v]
" ]
  node1 [ label = "_x6:[v:int | v == x]
_19:[v:int list | emp v]
_x15:[v:int list | ∃_x15, (hd _x15 _x6 ∧ tl _x15 _19 ∧ v == _x15)] 
 ⊢ let (_19) = Nil  in let (_x6) = x in Cons _x6 _19 : int list :
[v:int list | ∃_x15, (hd _x15 _x6 ∧ tl _x15 _19 ∧ v == _x15)]
" ]
  node2 [ label = "_x5:[v:int | v == s]
_20:[v:int list | emp v]
_x16:[v:int list | ∃_x16, (hd _x16 _x5 ∧ tl _x16 _20 ∧ v == _x16)] 
 ⊢ let (_20) = Nil  in let (_x5) = s in Cons _x5 _20 : int list :
[v:int list | ∃_x16, (hd _x16 _x5 ∧ tl _x16 _20 ∧ v == _x16)]
" ]
  node3 [ label = "_x4:[v:int | true]
_23:[v:int list | emp v]
_x17:[v:int list | ∃_x17, (hd _x17 _x4 ∧ tl _x17 _23 ∧ v == _x17)] 
 ⊢ let (_23) = Nil  in let (_x4) = int_gen () in Cons _x4 _23 : int list :
[v:int list | ∃_x17, (hd _x17 _x4 ∧ tl _x17 _23 ∧ v == _x17)]
" ]
  node4 [ label = "_x6:[v:int | v == x]
_85:[v:int | true]
_86:[v:int list | emp v]
_87:[v:int list | ∃_x17, (hd _x17 _85 ∧ tl _x17 _86 ∧ v == _x17)]
_x40:[v:int list | ∃_x40, (hd _x40 _x6 ∧ tl _x40 _87 ∧ v == _x40)] 
 ⊢ let (_23) = Nil  in
let (_x4) = int_gen () in
let (_87) = Cons _x4 _23 in let (_x6) = x in Cons _x6 _87 : int list :
[v:int list | ∃_x40, (hd _x40 _x6 ∧ tl _x40 _87 ∧ v == _x40)]
" ]
  node5 [ label = "_x6:[v:int | v == x]
_x5:[v:int | v == s]
_88:[v:int list | emp v]
_89:[v:int list | ∃_x16, (hd _x16 _x5 ∧ tl _x16 _88 ∧ v == _x16)]
_x41:[v:int list | ∃_x41, (hd _x41 _x6 ∧ tl _x41 _89 ∧ v == _x41)] 
 ⊢ let (_20) = Nil  in
let (_x5) = s in let (_89) = Cons _x5 _20 in let (_x6) = x in Cons _x6 _89 : int list :
[v:int list | ∃_x41, (hd _x41 _x6 ∧ tl _x41 _89 ∧ v == _x41)]
" ]
  node6 [ label = "_x6:[v:int | v == x]
_x6:[v:int | v == x]
_93:[v:int list | emp v]
_94:[v:int list | ∃_x15, (hd _x15 _x6 ∧ tl _x15 _93 ∧ v == _x15)]
_x42:[v:int list | ∃_x42, (hd _x42 _x6 ∧ tl _x42 _94 ∧ v == _x42)] 
 ⊢ let (_19) = Nil  in let (_x6) = x in let (_94) = Cons _x6 _19 in Cons _x6 _94 : int list :
[v:int list | ∃_x42, (hd _x42 _x6 ∧ tl _x42 _94 ∧ v == _x42)]
" ]
  node7 [ label = "_x5:[v:int | v == s]
_101:[v:int | true]
_102:[v:int list | emp v]
_103:[v:int list | ∃_x17, (hd _x17 _101 ∧ tl _x17 _102 ∧ v == _x17)]
_x43:[v:int list | ∃_x43, (hd _x43 _x5 ∧ tl _x43 _103 ∧ v == _x43)] 
 ⊢ let (_23) = Nil  in
let (_x4) = int_gen () in
let (_103) = Cons _x4 _23 in let (_x5) = s in Cons _x5 _103 : int list :
[v:int list | ∃_x43, (hd _x43 _x5 ∧ tl _x43 _103 ∧ v == _x43)]
" ]
  node8 [ label = "_x5:[v:int | v == s]
_x5:[v:int | v == s]
_116:[v:int list | emp v]
_117:[v:int list | ∃_x16, (hd _x16 _x5 ∧ tl _x16 _116 ∧ v == _x16)]
_x44:[v:int list | ∃_x44, (hd _x44 _x5 ∧ tl _x44 _117 ∧ v == _x44)] 
 ⊢ let (_20) = Nil  in
let (_x5) = s in let (_117) = Cons _x5 _20 in Cons _x5 _117 : int list :
[v:int list | ∃_x44, (hd _x44 _x5 ∧ tl _x44 _117 ∧ v == _x44)]
" ]
  node9 [ label = "_x5:[v:int | v == s]
_x6:[v:int | v == x]
_130:[v:int list | emp v]
_131:[v:int list | ∃_x15, (hd _x15 _x6 ∧ tl _x15 _130 ∧ v == _x15)]
_x45:[v:int list | ∃_x45, (hd _x45 _x5 ∧ tl _x45 _131 ∧ v == _x45)] 
 ⊢ let (_19) = Nil  in
let (_x6) = x in let (_131) = Cons _x6 _19 in let (_x5) = s in Cons _x5 _131 : int list :
[v:int list | ∃_x45, (hd _x45 _x5 ∧ tl _x45 _131 ∧ v == _x45)]
" ]
  node10 [ label = "_x4:[v:int | true]
_147:[v:int | true]
_148:[v:int list | emp v]
_149:[v:int list | ∃_x17, (hd _x17 _147 ∧ tl _x17 _148 ∧ v == _x17)]
_x46:[v:int list | ∃_x46, (hd _x46 _x4 ∧ tl _x46 _149 ∧ v == _x46)] 
 ⊢ let (_23) = Nil  in
let (_x4) = int_gen () in let (_149) = Cons _x4 _23 in Cons _x4 _149 : int list :
[v:int list | ∃_x46, (hd _x46 _x4 ∧ tl _x46 _149 ∧ v == _x46)]
" ]
  node11 [ label = "_x4:[v:int | true]
_x5:[v:int | v == s]
_196:[v:int list | emp v]
_197:[v:int list | ∃_x16, (hd _x16 _x5 ∧ tl _x16 _196 ∧ v == _x16)]
_x47:[v:int list | ∃_x47, (hd _x47 _x4 ∧ tl _x47 _197 ∧ v == _x47)] 
 ⊢ let (_20) = Nil  in
let (_x5) = s in
let (_197) = Cons _x5 _20 in let (_x4) = int_gen () in Cons _x4 _197 : int list :
[v:int list | ∃_x47, (hd _x47 _x4 ∧ tl _x47 _197 ∧ v == _x47)]
" ]
  node12 [ label = "_x4:[v:int | true]
_x6:[v:int | v == x]
_229:[v:int list | emp v]
_230:[v:int list | ∃_x15, (hd _x15 _x6 ∧ tl _x15 _229 ∧ v == _x15)]
_x48:[v:int list | ∃_x48, (hd _x48 _x4 ∧ tl _x48 _230 ∧ v == _x48)] 
 ⊢ let (_19) = Nil  in
let (_x6) = x in
let (_230) = Cons _x6 _19 in let (_x4) = int_gen () in Cons _x4 _230 : int list :
[v:int list | ∃_x48, (hd _x48 _x4 ∧ tl _x48 _230 ∧ v == _x48)]
" ]
  node13 [ label = "_x5:[v:int | v == s]
_x10:[v:int | v == (_x5 - 1)]
_266:[v:int list | emp v]
_x49:[v:int list | ∃_x49, (hd _x49 _x10 ∧ tl _x49 _266 ∧ v == _x49)] 
 ⊢ let (_266) = Nil  in let (_x5) = s in let (_x10) = subs _x5 in Cons _x10 _266 : int list :
[v:int list | ∃_x49, (hd _x49 _x10 ∧ tl _x49 _266 ∧ v == _x49)]
" ]
  node14 [ label = "_x6:[v:int | v == x]
_x9:[v:int | v == (_x6 - 1)]
_294:[v:int list | emp v]
_x50:[v:int list | ∃_x50, (hd _x50 _x9 ∧ tl _x50 _294 ∧ v == _x50)] 
 ⊢ let (_294) = Nil  in let (_x6) = x in let (_x9) = subs _x6 in Cons _x9 _294 : int list :
[v:int list | ∃_x50, (hd _x50 _x9 ∧ tl _x50 _294 ∧ v == _x50)]
" ]
  node15 [ label = "_x5:[v:int | v == s]
_x10:[v:int | v == (_x5 - 1)]
_325:[v:int | true]
_326:[v:int list | emp v]
_327:[v:int list | ∃_x17, (hd _x17 _325 ∧ tl _x17 _326 ∧ v == _x17)]
_x51:[v:int list | ∃_x51, (hd _x51 _x10 ∧ tl _x51 _327 ∧ v == _x51)] 
 ⊢ let (_23) = Nil  in
let (_x4) = int_gen () in
let (_327) = Cons _x4 _23 in
let (_x5) = s in let (_x10) = subs _x5 in Cons _x10 _327 : int list :
[v:int list | ∃_x51, (hd _x51 _x10 ∧ tl _x51 _327 ∧ v == _x51)]
" ]
  node16 [ label = "_x5:[v:int | v == s]
_x10:[v:int | v == (_x5 - 1)]
_x5:[v:int | v == s]
_383:[v:int list | emp v]
_384:[v:int list | ∃_x16, (hd _x16 _x5 ∧ tl _x16 _383 ∧ v == _x16)]
_x52:[v:int list | ∃_x52, (hd _x52 _x10 ∧ tl _x52 _384 ∧ v == _x52)] 
 ⊢ let (_20) = Nil  in
let (_x5) = s in
let (_384) = Cons _x5 _20 in let (_x10) = subs _x5 in Cons _x10 _384 : int list :
[v:int list | ∃_x52, (hd _x52 _x10 ∧ tl _x52 _384 ∧ v == _x52)]
" ]
  node17 [ label = "_x5:[v:int | v == s]
_x10:[v:int | v == (_x5 - 1)]
_x6:[v:int | v == x]
_442:[v:int list | emp v]
_443:[v:int list | ∃_x15, (hd _x15 _x6 ∧ tl _x15 _442 ∧ v == _x15)]
_x53:[v:int list | ∃_x53, (hd _x53 _x10 ∧ tl _x53 _443 ∧ v == _x53)] 
 ⊢ let (_19) = Nil  in
let (_x6) = x in
let (_443) = Cons _x6 _19 in
let (_x5) = s in let (_x10) = subs _x5 in Cons _x10 _443 : int list :
[v:int list | ∃_x53, (hd _x53 _x10 ∧ tl _x53 _443 ∧ v == _x53)]
" ]
  node18 [ label = "_x6:[v:int | v == x]
_x9:[v:int | v == (_x6 - 1)]
_505:[v:int | true]
_506:[v:int list | emp v]
_507:[v:int list | ∃_x17, (hd _x17 _505 ∧ tl _x17 _506 ∧ v == _x17)]
_x54:[v:int list | ∃_x54, (hd _x54 _x9 ∧ tl _x54 _507 ∧ v == _x54)] 
 ⊢ let (_23) = Nil  in
let (_x4) = int_gen () in
let (_507) = Cons _x4 _23 in
let (_x6) = x in let (_x9) = subs _x6 in Cons _x9 _507 : int list :
[v:int list | ∃_x54, (hd _x54 _x9 ∧ tl _x54 _507 ∧ v == _x54)]
" ]
  node19 [ label = "_x6:[v:int | v == x]
_x9:[v:int | v == (_x6 - 1)]
_x5:[v:int | v == s]
_578:[v:int list | emp v]
_579:[v:int list | ∃_x16, (hd _x16 _x5 ∧ tl _x16 _578 ∧ v == _x16)]
_x55:[v:int list | ∃_x55, (hd _x55 _x9 ∧ tl _x55 _579 ∧ v == _x55)] 
 ⊢ let (_20) = Nil  in
let (_x5) = s in
let (_579) = Cons _x5 _20 in
let (_x6) = x in let (_x9) = subs _x6 in Cons _x9 _579 : int list :
[v:int list | ∃_x55, (hd _x55 _x9 ∧ tl _x55 _579 ∧ v == _x55)]
" ]
  node20 [ label = "_x6:[v:int | v == x]
_x9:[v:int | v == (_x6 - 1)]
_x6:[v:int | v == x]
_649:[v:int list | emp v]
_650:[v:int list | ∃_x15, (hd _x15 _x6 ∧ tl _x15 _649 ∧ v == _x15)]
_x56:[v:int list | ∃_x56, (hd _x56 _x9 ∧ tl _x56 _650 ∧ v == _x56)] 
 ⊢ let (_19) = Nil  in
let (_x6) = x in
let (_650) = Cons _x6 _19 in let (_x9) = subs _x6 in Cons _x9 _650 : int list :
[v:int list | ∃_x56, (hd _x56 _x9 ∧ tl _x56 _650 ∧ v == _x56)]
" ]

  node0 [ shape = box, color = green ]
  node1 [ shape = box, color = red ]
  node2 [ shape = box, color = red ]
  node3 [ shape = box, color = blue ]
  node3 -> node2
  node3 -> node14
  node3 -> node1
  node3 -> node13
  node4 -> node6
  node4 -> node5
  node5 [ shape = box, color = red ]
  node6 [ shape = box, color = red ]
  node7 -> node8
  node7 -> node9
  node8 [ shape = box, color = red ]
  node9 [ shape = box, color = red ]
  node10 [ shape = box, color = blue ]
  node10 -> node4
  node10 -> node12
  node10 -> node18
  node10 -> node11
  node10 -> node7
  node10 -> node15
  node11 -> node16
  node11 -> node8
  node11 -> node5
  node11 -> node19
  node12 -> node20
  node12 -> node6
  node12 -> node17
  node12 -> node9
  node13 [ shape = box, color = red ]
  node14 [ shape = box, color = red ]
  node15 -> node16
  node15 -> node17
  node16 [ shape = box, color = red ]
  node17 [ shape = box, color = red ]
  node18 -> node20
  node18 -> node19
  node19 [ shape = box, color = red ]
  node20 [ shape = box, color = red ]
}
Type: bool
digraph poset {
  label = "Partially Ordered Set"
  size = "8.270000,11.690000"
  ratio = 0.900000
  rotate = 0.000000
  center = 1

  edge [ dir = back ]

  node0 [ label = "_x5:[v:int | v == s]
_x10:[v:int | v == (_x5 - 1)]
_x38:[v:bool | ∃_x38, ((_x38 <=> _x10 == 0) ∧ (¬_x38 <=> _x10 > 0) ∧ v == _x38)] 
 ⊢ let (_x5) = s in let (_x10) = subs _x5 in sizecheck _x10 : bool :
[v:bool | ∃_x38, ((_x38 <=> _x10 == 0) ∧ (¬_x38 <=> _x10 > 0) ∧ v == _x38)]
" ]
  node1 [ label = "_x6:[v:int | v == x]
_x9:[v:int | v == (_x6 - 1)]
_x39:[v:bool | ∃_x39, ((_x39 <=> _x9 == 0) ∧ (¬_x39 <=> _x9 > 0) ∧ v == _x39)] 
 ⊢ let (_x6) = x in let (_x9) = subs _x6 in sizecheck _x9 : bool :
[v:bool | ∃_x39, ((_x39 <=> _x9 == 0) ∧ (¬_x39 <=> _x9 > 0) ∧ v == _x39)]
" ]
  node2 [ label = "_x6:[v:int | v == x]
_x12:[v:bool | ∃_x12, ((_x12 <=> _x6 == 0) ∧ (¬_x12 <=> _x6 > 0) ∧ v == _x12)] 
 ⊢ let (_x6) = x in sizecheck _x6 : bool :
[v:bool | ∃_x12, ((_x12 <=> _x6 == 0) ∧ (¬_x12 <=> _x6 > 0) ∧ v == _x12)]
" ]
  node3 [ label = "_x5:[v:int | v == s]
_x13:[v:bool | ∃_x13, ((_x13 <=> _x5 == 0) ∧ (¬_x13 <=> _x5 > 0) ∧ v == _x13)] 
 ⊢ let (_x5) = s in sizecheck _x5 : bool :
[v:bool | ∃_x13, ((_x13 <=> _x5 == 0) ∧ (¬_x13 <=> _x5 > 0) ∧ v == _x13)]
" ]
  node4 [ label = "_x3:[v:bool | true] 
 ⊢ bool_gen () : bool :
[v:bool | true]
" ]
  node5 [ label = "_x1:[v:bool | ¬v] 
 ⊢ False  : bool :
[v:bool | ¬v]
" ]
  node6 [ label = "_x0:[v:bool | v] 
 ⊢ True  : bool :
[v:bool | v]
" ]

  node0 [ shape = box, color = red ]
  node1 [ shape = box, color = red ]
  node2 [ shape = box, color = red ]
  node3 [ shape = box, color = red ]
  node4 [ shape = box, color = blue ]
  node4 -> node0
  node4 -> node2
  node4 -> node6
  node4 -> node1
  node4 -> node5
  node4 -> node3
  node5 [ shape = box, color = red ]
  node6 [ shape = box, color = red ]
}
Type: int
digraph poset {
  label = "Partially Ordered Set"
  size = "8.270000,11.690000"
  ratio = 0.900000
  rotate = 0.000000
  center = 1

  edge [ dir = back ]

  node0 [ label = "_x5:[v:int | v == s]
_x10:[v:int | v == (_x5 - 1)]
_x36:[v:int | v == (_x10 - 1)] 
 ⊢ let (_x5) = s in let (_x10) = subs _x5 in subs _x10 : int :
[v:int | v == (_x10 - 1)]
" ]
  node1 [ label = "_x6:[v:int | v == x]
_x9:[v:int | v == (_x6 - 1)]
_x37:[v:int | v == (_x9 - 1)] 
 ⊢ let (_x6) = x in let (_x9) = subs _x6 in subs _x9 : int :
[v:int | v == (_x9 - 1)]
" ]
  node2 [ label = "_x6:[v:int | v == x]
_x9:[v:int | v == (_x6 - 1)] 
 ⊢ let (_x6) = x in subs _x6 : int :
[v:int | v == (_x6 - 1)]
" ]
  node3 [ label = "_x5:[v:int | v == s]
_x10:[v:int | v == (_x5 - 1)] 
 ⊢ let (_x5) = s in subs _x5 : int :
[v:int | v == (_x5 - 1)]
" ]
  node4 [ label = "_x4:[v:int | true] 
 ⊢ int_gen () : int :
[v:int | true]
" ]
  node5 [ label = "_x5:[v:int | v == s] 
 ⊢ s : int :
[v:int | v == s]
" ]
  node6 [ label = "_x6:[v:int | v == x] 
 ⊢ x : int :
[v:int | v == x]
" ]

  node0 [ shape = box, color = red ]
  node1 [ shape = box, color = red ]
  node2 [ shape = box, color = red ]
  node3 [ shape = box, color = red ]
  node4 [ shape = box, color = blue ]
  node4 -> node0
  node4 -> node2
  node4 -> node6
  node4 -> node1
  node4 -> node5
  node4 -> node3
  node5 [ shape = box, color = red ]
  node6 [ shape = box, color = red ]
}
Path Specific Collection:
pathcond_0:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
New Blocks:
Type: int list
digraph poset {
  label = "Partially Ordered Set"
  size = "8.270000,11.690000"
  ratio = 0.900000
  rotate = 0.000000
  center = 1

  edge [ dir = back ]

  node0 [ label = "_x6:[v:int | v == x]
_x5:[v:int | v == s]
_2217:[v:int | v == (_x5 - 1)]
_2218:[v:int | true]
pathcond_0:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_2219:[v:int list | ∃s_9, (s_9 >= 0 ∧ s_9 < s ∧ s_9 == _2217 ∧ (∃_x74, (len _x74 s_9 ∧ (∀u, (list_mem _x74 u => u == _2218)) ∧ v == _x74)))]
_x266:[v:int list | ∃_x266, (hd _x266 _x6 ∧ tl _x266 _2219 ∧ v == _x266)] 
 ⊢ let (_x5) = s in
let (_x10) = subs _x5 in
let (_x73) = duplicate_list_gen _x10 in
let (_795) = int_gen () in
let (_2219) = _x73 _795 in let (_x6) = x in Cons _x6 _2219 : int list :
[v:int list | ∃_x266, (hd _x266 _x6 ∧ tl _x266 _2219 ∧ v == _x266)]
" ]
  node1 [ label = "_x6:[v:int | v == x]
_x5:[v:int | v == s]
_2222:[v:int | v == (_x5 - 1)]
_x6:[v:int | v == x]
pathcond_0:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_2223:[v:int list | ∃s_7, (s_7 >= 0 ∧ s_7 < s ∧ s_7 == _2222 ∧ (∃_x70, (len _x70 s_7 ∧ (∀u, (list_mem _x70 u => u == _x6)) ∧ v == _x70)))]
_x268:[v:int list | ∃_x268, (hd _x268 _x6 ∧ tl _x268 _2223 ∧ v == _x268)] 
 ⊢ let (_x5) = s in
let (_x10) = subs _x5 in
let (_x69) = duplicate_list_gen _x10 in
let (_x6) = x in let (_2223) = _x69 _x6 in Cons _x6 _2223 : int list :
[v:int list | ∃_x268, (hd _x268 _x6 ∧ tl _x268 _2223 ∧ v == _x268)]
" ]
  node2 [ label = "_x4:[v:int | true]
_x5:[v:int | v == s]
_2248:[v:int | v == (_x5 - 1)]
_x6:[v:int | v == x]
pathcond_0:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_2249:[v:int list | ∃s_7, (s_7 >= 0 ∧ s_7 < s ∧ s_7 == _2248 ∧ (∃_x70, (len _x70 s_7 ∧ (∀u, (list_mem _x70 u => u == _x6)) ∧ v == _x70)))]
_x278:[v:int list | ∃_x278, (hd _x278 _x4 ∧ tl _x278 _2249 ∧ v == _x278)] 
 ⊢ let (_x5) = s in
let (_x10) = subs _x5 in
let (_x69) = duplicate_list_gen _x10 in
let (_x6) = x in
let (_2249) = _x69 _x6 in let (_x4) = int_gen () in Cons _x4 _2249 : int list :
[v:int list | ∃_x278, (hd _x278 _x4 ∧ tl _x278 _2249 ∧ v == _x278)]
" ]

  node0 [ shape = box, color = green ]
  node1 [ shape = box, color = red ]
  node2 [ shape = box, color = blue ]
  node2 -> node1
}
Old Blocks:
Type: int list
digraph poset {
  label = "Partially Ordered Set"
  size = "8.270000,11.690000"
  ratio = 0.900000
  rotate = 0.000000
  center = 1

  edge [ dir = back ]

  node0 [ label = "_x5:[v:int | v == s]
_x10:[v:int | v == (_x5 - 1)]
_x6:[v:int | v == x]
pathcond_0:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x70:[v:int list | ∃s_7, (s_7 >= 0 ∧ s_7 < s ∧ s_7 == _x10 ∧ (∃_x70, (len _x70 s_7 ∧ (∀u, (list_mem _x70 u => u == _x6)) ∧ v == _x70)))] 
 ⊢ let (_x5) = s in
let (_x10) = subs _x5 in
let (_x69) = duplicate_list_gen _x10 in let (_x6) = x in _x69 _x6 : int list :
[v:int list | ∃s_7, (s_7 >= 0 ∧ s_7 < s ∧ s_7 == _x10 ∧ (∃_x70, (len _x70 s_7 ∧ (∀u, (list_mem _x70 u => u == _x6)) ∧ v == _x70)))]
" ]
  node1 [ label = "_x5:[v:int | v == s]
_x10:[v:int | v == (_x5 - 1)]
_x5:[v:int | v == s]
pathcond_0:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x72:[v:int list | ∃s_8, (s_8 >= 0 ∧ s_8 < s ∧ s_8 == _x10 ∧ (∃_x72, (len _x72 s_8 ∧ (∀u, (list_mem _x72 u => u == _x5)) ∧ v == _x72)))] 
 ⊢ let (_x5) = s in
let (_x10) = subs _x5 in let (_x71) = duplicate_list_gen _x10 in _x71 _x5 : int list :
[v:int list | ∃s_8, (s_8 >= 0 ∧ s_8 < s ∧ s_8 == _x10 ∧ (∃_x72, (len _x72 s_8 ∧ (∀u, (list_mem _x72 u => u == _x5)) ∧ v == _x72)))]
" ]
  node2 [ label = "_x5:[v:int | v == s]
_x10:[v:int | v == (_x5 - 1)]
_795:[v:int | true]
pathcond_0:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x74:[v:int list | ∃s_9, (s_9 >= 0 ∧ s_9 < s ∧ s_9 == _x10 ∧ (∃_x74, (len _x74 s_9 ∧ (∀u, (list_mem _x74 u => u == _795)) ∧ v == _x74)))] 
 ⊢ let (_x5) = s in
let (_x10) = subs _x5 in
let (_x73) = duplicate_list_gen _x10 in let (_795) = int_gen () in _x73 _795 : int list :
[v:int list | ∃s_9, (s_9 >= 0 ∧ s_9 < s ∧ s_9 == _x10 ∧ (∃_x74, (len _x74 s_9 ∧ (∀u, (list_mem _x74 u => u == _795)) ∧ v == _x74)))]
" ]
  node3 [ label = "_x5:[v:int | v == s]
_x10:[v:int | v == (_x5 - 1)]
_x5:[v:int | v == s]
_797:[v:int | v == (_x5 - 1)]
pathcond_0:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x82:[v:int list | ∃s_10, (s_10 >= 0 ∧ s_10 < s ∧ s_10 == _x10 ∧ (∃_x82, (len _x82 s_10 ∧ (∀u, (list_mem _x82 u => u == _797)) ∧ v == _x82)))] 
 ⊢ let (_x5) = s in
let (_x10) = subs _x5 in
let (_x81) = duplicate_list_gen _x10 in let (_797) = subs _x5 in _x81 _797 : int list :
[v:int list | ∃s_10, (s_10 >= 0 ∧ s_10 < s ∧ s_10 == _x10 ∧ (∃_x82, (len _x82 s_10 ∧ (∀u, (list_mem _x82 u => u == _797)) ∧ v == _x82)))]
" ]
  node4 [ label = "_x5:[v:int | v == s]
_x10:[v:int | v == (_x5 - 1)]
_x6:[v:int | v == x]
_798:[v:int | v == (_x6 - 1)]
pathcond_0:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x84:[v:int list | ∃s_11, (s_11 >= 0 ∧ s_11 < s ∧ s_11 == _x10 ∧ (∃_x84, (len _x84 s_11 ∧ (∀u, (list_mem _x84 u => u == _798)) ∧ v == _x84)))] 
 ⊢ let (_x5) = s in
let (_x10) = subs _x5 in
let (_x83) = duplicate_list_gen _x10 in
let (_x6) = x in let (_798) = subs _x6 in _x83 _798 : int list :
[v:int list | ∃s_11, (s_11 >= 0 ∧ s_11 < s ∧ s_11 == _x10 ∧ (∃_x84, (len _x84 s_11 ∧ (∀u, (list_mem _x84 u => u == _798)) ∧ v == _x84)))]
" ]

  node0 [ shape = box, color = red ]
  node1 [ shape = box, color = red ]
  node2 [ shape = box, color = blue ]
  node2 -> node0
  node2 -> node4
  node2 -> node1
  node2 -> node3
  node3 [ shape = box, color = red ]
  node4 [ shape = box, color = red ]
}
