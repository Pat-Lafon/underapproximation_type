Path Specific Collection:
In Path:
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
Cost: 5
Type: Ty_int
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x6:[v:int | v == (_x1 - 1)] 
 ⊢ _x6 as let (_x1) = s in subs _x1 : int :
[v:int | v == (_x1 - 1)]

_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x5:[v:int | v == (_x2 - 1)] 
 ⊢ _x5 as let (_x2) = x in subs _x2 : int :
[v:int | v == (_x2 - 1)]

Cost: 13
Type: Ty_int
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x6:[v:int | v == (_x1 - 1)]
_x17:[v:int | v == (_x6 - 1)]
_x42:[v:int | v == (_x17 - 1)] 
 ⊢ _x42 as let (_x1) = s in let (_x6) = subs _x1 in let (_x17) = subs _x6 in subs _x17 : int :
[v:int | v == (_x17 - 1)]

_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x5:[v:int | v == (_x2 - 1)]
_x18:[v:int | v == (_x5 - 1)]
_x41:[v:int | v == (_x18 - 1)] 
 ⊢ _x41 as let (_x2) = x in let (_x5) = subs _x2 in let (_x18) = subs _x5 in subs _x18 : int :
[v:int | v == (_x18 - 1)]

Type: (Ty_constructor(list(Ty_int)))
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x6:[v:int | v == (_x1 - 1)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_19:[v:int | v == (_x2 - 1)]
_x54:[v:int list | ∃s_11, (s_11 >= 0 ∧ s_11 < s ∧ s_11 == _x6 ∧ (∃_x54, (len _x54 s_11 ∧ (∀u, (list_mem _x54 u => u == _19)) ∧ v == _x54)))] 
 ⊢ _x54 as let (_x1) = s in
let (_x6) = subs _x1 in
let (_x53) = duplicate_list_gen _x6 in
let (_x2) = x in let (_19) = subs _x2 in _x53 _19 : int list :
[v:int list | ∃s_11, (s_11 >= 0 ∧ s_11 < s ∧ s_11 == _x6 ∧ (∃_x54, (len _x54 s_11 ∧ (∀u, (list_mem _x54 u => u == _19)) ∧ v == _x54)))]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x6:[v:int | v == (_x1 - 1)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_18:[v:int | v == (_x1 - 1)]
_x52:[v:int list | ∃s_10, (s_10 >= 0 ∧ s_10 < s ∧ s_10 == _x6 ∧ (∃_x52, (len _x52 s_10 ∧ (∀u, (list_mem _x52 u => u == _18)) ∧ v == _x52)))] 
 ⊢ _x52 as let (_x1) = s in
let (_x6) = subs _x1 in
let (_x51) = duplicate_list_gen _x6 in let (_18) = subs _x1 in _x51 _18 : int list :
[v:int list | ∃s_10, (s_10 >= 0 ∧ s_10 < s ∧ s_10 == _x6 ∧ (∃_x52, (len _x52 s_10 ∧ (∀u, (list_mem _x52 u => u == _18)) ∧ v == _x52)))]

Cost: 15
Type: (Ty_constructor(list(Ty_int)))
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x6:[v:int | v == (_x1 - 1)]
_x17:[v:int | v == (_x6 - 1)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x72:[v:int list | ∃_x72, (hd _x72 _x17 ∧ tl _x72 _x0 ∧ v == _x72)] 
 ⊢ _x72 as let (_x0) = Nil in
let (_x1) = s in
let (_x6) = subs _x1 in let (_x17) = subs _x6 in Cons (_x17, _x0) : int list :
[v:int list | ∃_x72, (hd _x72 _x17 ∧ tl _x72 _x0 ∧ v == _x72)]

_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x5:[v:int | v == (_x2 - 1)]
_x18:[v:int | v == (_x5 - 1)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x71:[v:int list | ∃_x71, (hd _x71 _x18 ∧ tl _x71 _x0 ∧ v == _x71)] 
 ⊢ _x71 as let (_x0) = Nil in
let (_x2) = x in
let (_x5) = subs _x2 in let (_x18) = subs _x5 in Cons (_x18, _x0) : int list :
[v:int list | ∃_x71, (hd _x71 _x18 ∧ tl _x71 _x0 ∧ v == _x71)]

Cost: 16
Type: (Ty_constructor(list(Ty_int)))
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x5:[v:int | v == (_x2 - 1)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_41:[v:int list | ∃_x15, (hd _x15 _x2 ∧ tl _x15 _x0 ∧ v == _x15)]
_x80:[v:int list | ∃_x80, (hd _x80 _x5 ∧ tl _x80 _41 ∧ v == _x80)] 
 ⊢ _x80 as let (_x0) = Nil in
let (_x2) = x in
let (_41) = Cons (_x2, _x0) in let (_x5) = subs _x2 in Cons (_x5, _41) : int list :
[v:int list | ∃_x80, (hd _x80 _x5 ∧ tl _x80 _41 ∧ v == _x80)]

_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x5:[v:int | v == (_x2 - 1)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_40:[v:int list | ∃_x16, (hd _x16 _x1 ∧ tl _x16 _x0 ∧ v == _x16)]
_x79:[v:int list | ∃_x79, (hd _x79 _x5 ∧ tl _x79 _40 ∧ v == _x79)] 
 ⊢ _x79 as let (_x0) = Nil in
let (_x1) = s in
let (_40) = Cons (_x1, _x0) in
let (_x2) = x in let (_x5) = subs _x2 in Cons (_x5, _40) : int list :
[v:int list | ∃_x79, (hd _x79 _x5 ∧ tl _x79 _40 ∧ v == _x79)]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x6:[v:int | v == (_x1 - 1)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_39:[v:int list | ∃_x15, (hd _x15 _x2 ∧ tl _x15 _x0 ∧ v == _x15)]
_x78:[v:int list | ∃_x78, (hd _x78 _x6 ∧ tl _x78 _39 ∧ v == _x78)] 
 ⊢ _x78 as let (_x0) = Nil in
let (_x2) = x in
let (_39) = Cons (_x2, _x0) in
let (_x1) = s in let (_x6) = subs _x1 in Cons (_x6, _39) : int list :
[v:int list | ∃_x78, (hd _x78 _x6 ∧ tl _x78 _39 ∧ v == _x78)]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x6:[v:int | v == (_x1 - 1)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_38:[v:int list | ∃_x16, (hd _x16 _x1 ∧ tl _x16 _x0 ∧ v == _x16)]
_x77:[v:int list | ∃_x77, (hd _x77 _x6 ∧ tl _x77 _38 ∧ v == _x77)] 
 ⊢ _x77 as let (_x0) = Nil in
let (_x1) = s in
let (_38) = Cons (_x1, _x0) in let (_x6) = subs _x1 in Cons (_x6, _38) : int list :
[v:int list | ∃_x77, (hd _x77 _x6 ∧ tl _x77 _38 ∧ v == _x77)]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_36:[v:int | v == (_x1 - 1)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_37:[v:int list | ∃_x35, (hd _x35 _36 ∧ tl _x35 _x0 ∧ v == _x35)]
_x76:[v:int list | ∃_x76, (hd _x76 _x1 ∧ tl _x76 _37 ∧ v == _x76)] 
 ⊢ _x76 as let (_x0) = Nil in
let (_x1) = s in
let (_x6) = subs _x1 in let (_37) = Cons (_x6, _x0) in Cons (_x1, _37) : int list :
[v:int list | ∃_x76, (hd _x76 _x1 ∧ tl _x76 _37 ∧ v == _x76)]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_34:[v:int | v == (_x2 - 1)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_35:[v:int list | ∃_x36, (hd _x36 _34 ∧ tl _x36 _x0 ∧ v == _x36)]
_x75:[v:int list | ∃_x75, (hd _x75 _x1 ∧ tl _x75 _35 ∧ v == _x75)] 
 ⊢ _x75 as let (_x0) = Nil in
let (_x2) = x in
let (_x5) = subs _x2 in
let (_35) = Cons (_x5, _x0) in let (_x1) = s in Cons (_x1, _35) : int list :
[v:int list | ∃_x75, (hd _x75 _x1 ∧ tl _x75 _35 ∧ v == _x75)]

_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_32:[v:int | v == (_x1 - 1)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_33:[v:int list | ∃_x35, (hd _x35 _32 ∧ tl _x35 _x0 ∧ v == _x35)]
_x74:[v:int list | ∃_x74, (hd _x74 _x2 ∧ tl _x74 _33 ∧ v == _x74)] 
 ⊢ _x74 as let (_x0) = Nil in
let (_x1) = s in
let (_x6) = subs _x1 in
let (_33) = Cons (_x6, _x0) in let (_x2) = x in Cons (_x2, _33) : int list :
[v:int list | ∃_x74, (hd _x74 _x2 ∧ tl _x74 _33 ∧ v == _x74)]

_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_30:[v:int | v == (_x2 - 1)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_31:[v:int list | ∃_x36, (hd _x36 _30 ∧ tl _x36 _x0 ∧ v == _x36)]
_x73:[v:int list | ∃_x73, (hd _x73 _x2 ∧ tl _x73 _31 ∧ v == _x73)] 
 ⊢ _x73 as let (_x0) = Nil in
let (_x2) = x in
let (_x5) = subs _x2 in let (_31) = Cons (_x5, _x0) in Cons (_x2, _31) : int list :
[v:int list | ∃_x73, (hd _x73 _x2 ∧ tl _x73 _31 ∧ v == _x73)]

Cost: 7
Type: (Ty_constructor(list(Ty_int)))
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x16:[v:int list | ∃_x16, (hd _x16 _x1 ∧ tl _x16 _x0 ∧ v == _x16)] 
 ⊢ _x16 as let (_x0) = Nil in let (_x1) = s in Cons (_x1, _x0) : int list :
[v:int list | ∃_x16, (hd _x16 _x1 ∧ tl _x16 _x0 ∧ v == _x16)]

_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x15:[v:int list | ∃_x15, (hd _x15 _x2 ∧ tl _x15 _x0 ∧ v == _x15)] 
 ⊢ _x15 as let (_x0) = Nil in let (_x2) = x in Cons (_x2, _x0) : int list :
[v:int list | ∃_x15, (hd _x15 _x2 ∧ tl _x15 _x0 ∧ v == _x15)]

Cost: 20
Type: (Ty_constructor(list(Ty_int)))
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x6:[v:int | v == (_x1 - 1)]
_x17:[v:int | v == (_x6 - 1)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_149:[v:int list | ∃_x15, (hd _x15 _x2 ∧ tl _x15 _x0 ∧ v == _x15)]
_x152:[v:int list | ∃_x152, (hd _x152 _x17 ∧ tl _x152 _149 ∧ v == _x152)] 
 ⊢ _x152 as let (_x0) = Nil in
let (_x2) = x in
let (_149) = Cons (_x2, _x0) in
let (_x1) = s in
let (_x6) = subs _x1 in let (_x17) = subs _x6 in Cons (_x17, _149) : int list :
[v:int list | ∃_x152, (hd _x152 _x17 ∧ tl _x152 _149 ∧ v == _x152)]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x6:[v:int | v == (_x1 - 1)]
_x17:[v:int | v == (_x6 - 1)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_148:[v:int list | ∃_x16, (hd _x16 _x1 ∧ tl _x16 _x0 ∧ v == _x16)]
_x151:[v:int list | ∃_x151, (hd _x151 _x17 ∧ tl _x151 _148 ∧ v == _x151)] 
 ⊢ _x151 as let (_x0) = Nil in
let (_x1) = s in
let (_148) = Cons (_x1, _x0) in
let (_x6) = subs _x1 in let (_x17) = subs _x6 in Cons (_x17, _148) : int list :
[v:int list | ∃_x151, (hd _x151 _x17 ∧ tl _x151 _148 ∧ v == _x151)]

_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x5:[v:int | v == (_x2 - 1)]
_x18:[v:int | v == (_x5 - 1)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_147:[v:int list | ∃_x15, (hd _x15 _x2 ∧ tl _x15 _x0 ∧ v == _x15)]
_x150:[v:int list | ∃_x150, (hd _x150 _x18 ∧ tl _x150 _147 ∧ v == _x150)] 
 ⊢ _x150 as let (_x0) = Nil in
let (_x2) = x in
let (_147) = Cons (_x2, _x0) in
let (_x5) = subs _x2 in let (_x18) = subs _x5 in Cons (_x18, _147) : int list :
[v:int list | ∃_x150, (hd _x150 _x18 ∧ tl _x150 _147 ∧ v == _x150)]

_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x5:[v:int | v == (_x2 - 1)]
_x18:[v:int | v == (_x5 - 1)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_146:[v:int list | ∃_x16, (hd _x16 _x1 ∧ tl _x16 _x0 ∧ v == _x16)]
_x149:[v:int list | ∃_x149, (hd _x149 _x18 ∧ tl _x149 _146 ∧ v == _x149)] 
 ⊢ _x149 as let (_x0) = Nil in
let (_x1) = s in
let (_146) = Cons (_x1, _x0) in
let (_x2) = x in
let (_x5) = subs _x2 in let (_x18) = subs _x5 in Cons (_x18, _146) : int list :
[v:int list | ∃_x149, (hd _x149 _x18 ∧ tl _x149 _146 ∧ v == _x149)]

_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x5:[v:int | v == (_x2 - 1)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_144:[v:int | v == (_x1 - 1)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_145:[v:int list | ∃_x35, (hd _x35 _144 ∧ tl _x35 _x0 ∧ v == _x35)]
_x148:[v:int list | ∃_x148, (hd _x148 _x5 ∧ tl _x148 _145 ∧ v == _x148)] 
 ⊢ _x148 as let (_x0) = Nil in
let (_x1) = s in
let (_x6) = subs _x1 in
let (_145) = Cons (_x6, _x0) in
let (_x2) = x in let (_x5) = subs _x2 in Cons (_x5, _145) : int list :
[v:int list | ∃_x148, (hd _x148 _x5 ∧ tl _x148 _145 ∧ v == _x148)]

_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x5:[v:int | v == (_x2 - 1)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_142:[v:int | v == (_x2 - 1)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_143:[v:int list | ∃_x36, (hd _x36 _142 ∧ tl _x36 _x0 ∧ v == _x36)]
_x147:[v:int list | ∃_x147, (hd _x147 _x5 ∧ tl _x147 _143 ∧ v == _x147)] 
 ⊢ _x147 as let (_x0) = Nil in
let (_x2) = x in
let (_x5) = subs _x2 in let (_143) = Cons (_x5, _x0) in Cons (_x5, _143) : int list :
[v:int list | ∃_x147, (hd _x147 _x5 ∧ tl _x147 _143 ∧ v == _x147)]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x6:[v:int | v == (_x1 - 1)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_140:[v:int | v == (_x1 - 1)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_141:[v:int list | ∃_x35, (hd _x35 _140 ∧ tl _x35 _x0 ∧ v == _x35)]
_x146:[v:int list | ∃_x146, (hd _x146 _x6 ∧ tl _x146 _141 ∧ v == _x146)] 
 ⊢ _x146 as let (_x0) = Nil in
let (_x1) = s in
let (_x6) = subs _x1 in let (_141) = Cons (_x6, _x0) in Cons (_x6, _141) : int list :
[v:int list | ∃_x146, (hd _x146 _x6 ∧ tl _x146 _141 ∧ v == _x146)]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x6:[v:int | v == (_x1 - 1)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_138:[v:int | v == (_x2 - 1)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_139:[v:int list | ∃_x36, (hd _x36 _138 ∧ tl _x36 _x0 ∧ v == _x36)]
_x145:[v:int list | ∃_x145, (hd _x145 _x6 ∧ tl _x145 _139 ∧ v == _x145)] 
 ⊢ _x145 as let (_x0) = Nil in
let (_x2) = x in
let (_x5) = subs _x2 in
let (_139) = Cons (_x5, _x0) in
let (_x1) = s in let (_x6) = subs _x1 in Cons (_x6, _139) : int list :
[v:int list | ∃_x145, (hd _x145 _x6 ∧ tl _x145 _139 ∧ v == _x145)]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_135:[v:int | v == (_x2 - 1)]
_136:[v:int | v == (_135 - 1)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_137:[v:int list | ∃_x71, (hd _x71 _136 ∧ tl _x71 _x0 ∧ v == _x71)]
_x144:[v:int list | ∃_x144, (hd _x144 _x1 ∧ tl _x144 _137 ∧ v == _x144)] 
 ⊢ _x144 as let (_x0) = Nil in
let (_x2) = x in
let (_x5) = subs _x2 in
let (_x18) = subs _x5 in
let (_137) = Cons (_x18, _x0) in let (_x1) = s in Cons (_x1, _137) : int list :
[v:int list | ∃_x144, (hd _x144 _x1 ∧ tl _x144 _137 ∧ v == _x144)]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_132:[v:int | v == (_x1 - 1)]
_133:[v:int | v == (_132 - 1)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_134:[v:int list | ∃_x72, (hd _x72 _133 ∧ tl _x72 _x0 ∧ v == _x72)]
_x143:[v:int list | ∃_x143, (hd _x143 _x1 ∧ tl _x143 _134 ∧ v == _x143)] 
 ⊢ _x143 as let (_x0) = Nil in
let (_x1) = s in
let (_x6) = subs _x1 in
let (_x17) = subs _x6 in let (_134) = Cons (_x17, _x0) in Cons (_x1, _134) : int list :
[v:int list | ∃_x143, (hd _x143 _x1 ∧ tl _x143 _134 ∧ v == _x143)]

_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_129:[v:int | v == (_x2 - 1)]
_130:[v:int | v == (_129 - 1)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_131:[v:int list | ∃_x71, (hd _x71 _130 ∧ tl _x71 _x0 ∧ v == _x71)]
_x142:[v:int list | ∃_x142, (hd _x142 _x2 ∧ tl _x142 _131 ∧ v == _x142)] 
 ⊢ _x142 as let (_x0) = Nil in
let (_x2) = x in
let (_x5) = subs _x2 in
let (_x18) = subs _x5 in let (_131) = Cons (_x18, _x0) in Cons (_x2, _131) : int list :
[v:int list | ∃_x142, (hd _x142 _x2 ∧ tl _x142 _131 ∧ v == _x142)]

_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_126:[v:int | v == (_x1 - 1)]
_127:[v:int | v == (_126 - 1)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_128:[v:int list | ∃_x72, (hd _x72 _127 ∧ tl _x72 _x0 ∧ v == _x72)]
_x141:[v:int list | ∃_x141, (hd _x141 _x2 ∧ tl _x141 _128 ∧ v == _x141)] 
 ⊢ _x141 as let (_x0) = Nil in
let (_x1) = s in
let (_x6) = subs _x1 in
let (_x17) = subs _x6 in
let (_128) = Cons (_x17, _x0) in let (_x2) = x in Cons (_x2, _128) : int list :
[v:int list | ∃_x141, (hd _x141 _x2 ∧ tl _x141 _128 ∧ v == _x141)]

Cost: 2
Type: (Ty_constructor(list(Ty_int)))
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)] 
 ⊢ _x0 as Nil : int list :
[v:int list | emp v]

Cost: 11
Type: (Ty_constructor(list(Ty_int)))
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x5:[v:int | v == (_x2 - 1)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x36:[v:int list | ∃_x36, (hd _x36 _x5 ∧ tl _x36 _x0 ∧ v == _x36)] 
 ⊢ _x36 as let (_x0) = Nil in let (_x2) = x in let (_x5) = subs _x2 in Cons (_x5, _x0) : int list :
[v:int list | ∃_x36, (hd _x36 _x5 ∧ tl _x36 _x0 ∧ v == _x36)]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x6:[v:int | v == (_x1 - 1)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x35:[v:int list | ∃_x35, (hd _x35 _x6 ∧ tl _x35 _x0 ∧ v == _x35)] 
 ⊢ _x35 as let (_x0) = Nil in let (_x1) = s in let (_x6) = subs _x1 in Cons (_x6, _x0) : int list :
[v:int list | ∃_x35, (hd _x35 _x6 ∧ tl _x35 _x0 ∧ v == _x35)]

Cost: 18
Type: (Ty_constructor(list(Ty_int)))
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x5:[v:int | v == (_x2 - 1)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_100:[v:int | v == (_x1 - 1)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_101:[v:int list | ∃s_6, (s_6 >= 0 ∧ s_6 < s ∧ s_6 == _100 ∧ (∃_x28, (len _x28 s_6 ∧ (∀u, (list_mem _x28 u => u == _x2)) ∧ v == _x28)))]
_x130:[v:int list | ∃_x130, (hd _x130 _x5 ∧ tl _x130 _101 ∧ v == _x130)] 
 ⊢ _x130 as let (_x1) = s in
let (_x6) = subs _x1 in
let (_x27) = duplicate_list_gen _x6 in
let (_x2) = x in
let (_101) = _x27 _x2 in let (_x5) = subs _x2 in Cons (_x5, _101) : int list :
[v:int list | ∃_x130, (hd _x130 _x5 ∧ tl _x130 _101 ∧ v == _x130)]

_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x5:[v:int | v == (_x2 - 1)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_98:[v:int | v == (_x1 - 1)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_99:[v:int list | ∃s_7, (s_7 >= 0 ∧ s_7 < s ∧ s_7 == _98 ∧ (∃_x30, (len _x30 s_7 ∧ (∀u, (list_mem _x30 u => u == _x1)) ∧ v == _x30)))]
_x129:[v:int list | ∃_x129, (hd _x129 _x5 ∧ tl _x129 _99 ∧ v == _x129)] 
 ⊢ _x129 as let (_x1) = s in
let (_x6) = subs _x1 in
let (_x29) = duplicate_list_gen _x6 in
let (_99) = _x29 _x1 in
let (_x2) = x in let (_x5) = subs _x2 in Cons (_x5, _99) : int list :
[v:int list | ∃_x129, (hd _x129 _x5 ∧ tl _x129 _99 ∧ v == _x129)]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x6:[v:int | v == (_x1 - 1)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_96:[v:int | v == (_x1 - 1)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_97:[v:int list | ∃s_6, (s_6 >= 0 ∧ s_6 < s ∧ s_6 == _96 ∧ (∃_x28, (len _x28 s_6 ∧ (∀u, (list_mem _x28 u => u == _x2)) ∧ v == _x28)))]
_x128:[v:int list | ∃_x128, (hd _x128 _x6 ∧ tl _x128 _97 ∧ v == _x128)] 
 ⊢ _x128 as let (_x1) = s in
let (_x6) = subs _x1 in
let (_x27) = duplicate_list_gen _x6 in
let (_x2) = x in let (_97) = _x27 _x2 in Cons (_x6, _97) : int list :
[v:int list | ∃_x128, (hd _x128 _x6 ∧ tl _x128 _97 ∧ v == _x128)]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x6:[v:int | v == (_x1 - 1)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_94:[v:int | v == (_x1 - 1)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_95:[v:int list | ∃s_7, (s_7 >= 0 ∧ s_7 < s ∧ s_7 == _94 ∧ (∃_x30, (len _x30 s_7 ∧ (∀u, (list_mem _x30 u => u == _x1)) ∧ v == _x30)))]
_x127:[v:int list | ∃_x127, (hd _x127 _x6 ∧ tl _x127 _95 ∧ v == _x127)] 
 ⊢ _x127 as let (_x1) = s in
let (_x6) = subs _x1 in
let (_x29) = duplicate_list_gen _x6 in
let (_95) = _x29 _x1 in Cons (_x6, _95) : int list :
[v:int list | ∃_x127, (hd _x127 _x6 ∧ tl _x127 _95 ∧ v == _x127)]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_91:[v:int | v == (_x1 - 1)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_92:[v:int | v == (_x1 - 1)]
_93:[v:int list | ∃s_10, (s_10 >= 0 ∧ s_10 < s ∧ s_10 == _91 ∧ (∃_x52, (len _x52 s_10 ∧ (∀u, (list_mem _x52 u => u == _92)) ∧ v == _x52)))]
_x126:[v:int list | ∃_x126, (hd _x126 _x1 ∧ tl _x126 _93 ∧ v == _x126)] 
 ⊢ _x126 as let (_x1) = s in
let (_x6) = subs _x1 in
let (_x51) = duplicate_list_gen _x6 in
let (_18) = subs _x1 in let (_93) = _x51 _18 in Cons (_x1, _93) : int list :
[v:int list | ∃_x126, (hd _x126 _x1 ∧ tl _x126 _93 ∧ v == _x126)]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_88:[v:int | v == (_x1 - 1)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_89:[v:int | v == (_x2 - 1)]
_90:[v:int list | ∃s_11, (s_11 >= 0 ∧ s_11 < s ∧ s_11 == _88 ∧ (∃_x54, (len _x54 s_11 ∧ (∀u, (list_mem _x54 u => u == _89)) ∧ v == _x54)))]
_x125:[v:int list | ∃_x125, (hd _x125 _x1 ∧ tl _x125 _90 ∧ v == _x125)] 
 ⊢ _x125 as let (_x1) = s in
let (_x6) = subs _x1 in
let (_x53) = duplicate_list_gen _x6 in
let (_x2) = x in
let (_19) = subs _x2 in let (_90) = _x53 _19 in Cons (_x1, _90) : int list :
[v:int list | ∃_x125, (hd _x125 _x1 ∧ tl _x125 _90 ∧ v == _x125)]

_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_85:[v:int | v == (_x1 - 1)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_86:[v:int | v == (_x1 - 1)]
_87:[v:int list | ∃s_10, (s_10 >= 0 ∧ s_10 < s ∧ s_10 == _85 ∧ (∃_x52, (len _x52 s_10 ∧ (∀u, (list_mem _x52 u => u == _86)) ∧ v == _x52)))]
_x124:[v:int list | ∃_x124, (hd _x124 _x2 ∧ tl _x124 _87 ∧ v == _x124)] 
 ⊢ _x124 as let (_x1) = s in
let (_x6) = subs _x1 in
let (_x51) = duplicate_list_gen _x6 in
let (_18) = subs _x1 in
let (_87) = _x51 _18 in let (_x2) = x in Cons (_x2, _87) : int list :
[v:int list | ∃_x124, (hd _x124 _x2 ∧ tl _x124 _87 ∧ v == _x124)]

_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_82:[v:int | v == (_x1 - 1)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_83:[v:int | v == (_x2 - 1)]
_84:[v:int list | ∃s_11, (s_11 >= 0 ∧ s_11 < s ∧ s_11 == _82 ∧ (∃_x54, (len _x54 s_11 ∧ (∀u, (list_mem _x54 u => u == _83)) ∧ v == _x54)))]
_x123:[v:int list | ∃_x123, (hd _x123 _x2 ∧ tl _x123 _84 ∧ v == _x123)] 
 ⊢ _x123 as let (_x1) = s in
let (_x6) = subs _x1 in
let (_x53) = duplicate_list_gen _x6 in
let (_x2) = x in
let (_19) = subs _x2 in let (_84) = _x53 _19 in Cons (_x2, _84) : int list :
[v:int list | ∃_x123, (hd _x123 _x2 ∧ tl _x123 _84 ∧ v == _x123)]

Cost: 9
Type: Ty_int
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x5:[v:int | v == (_x2 - 1)]
_x18:[v:int | v == (_x5 - 1)] 
 ⊢ _x18 as let (_x2) = x in let (_x5) = subs _x2 in subs _x5 : int :
[v:int | v == (_x5 - 1)]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x6:[v:int | v == (_x1 - 1)]
_x17:[v:int | v == (_x6 - 1)] 
 ⊢ _x17 as let (_x1) = s in let (_x6) = subs _x1 in subs _x6 : int :
[v:int | v == (_x6 - 1)]

Type: (Ty_constructor(list(Ty_int)))
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x6:[v:int | v == (_x1 - 1)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x30:[v:int list | ∃s_7, (s_7 >= 0 ∧ s_7 < s ∧ s_7 == _x6 ∧ (∃_x30, (len _x30 s_7 ∧ (∀u, (list_mem _x30 u => u == _x1)) ∧ v == _x30)))] 
 ⊢ _x30 as let (_x1) = s in
let (_x6) = subs _x1 in let (_x29) = duplicate_list_gen _x6 in _x29 _x1 : int list :
[v:int list | ∃s_7, (s_7 >= 0 ∧ s_7 < s ∧ s_7 == _x6 ∧ (∃_x30, (len _x30 s_7 ∧ (∀u, (list_mem _x30 u => u == _x1)) ∧ v == _x30)))]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x6:[v:int | v == (_x1 - 1)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x28:[v:int list | ∃s_6, (s_6 >= 0 ∧ s_6 < s ∧ s_6 == _x6 ∧ (∃_x28, (len _x28 s_6 ∧ (∀u, (list_mem _x28 u => u == _x2)) ∧ v == _x28)))] 
 ⊢ _x28 as let (_x1) = s in
let (_x6) = subs _x1 in
let (_x27) = duplicate_list_gen _x6 in let (_x2) = x in _x27 _x2 : int list :
[v:int list | ∃s_6, (s_6 >= 0 ∧ s_6 < s ∧ s_6 == _x6 ∧ (∃_x28, (len _x28 s_6 ∧ (∀u, (list_mem _x28 u => u == _x2)) ∧ v == _x28)))]

Cost: 12
Type: (Ty_constructor(list(Ty_int)))
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_9:[v:int list | ∃_x15, (hd _x15 _x2 ∧ tl _x15 _x0 ∧ v == _x15)]
_x40:[v:int list | ∃_x40, (hd _x40 _x1 ∧ tl _x40 _9 ∧ v == _x40)] 
 ⊢ _x40 as let (_x0) = Nil in
let (_x2) = x in
let (_9) = Cons (_x2, _x0) in let (_x1) = s in Cons (_x1, _9) : int list :
[v:int list | ∃_x40, (hd _x40 _x1 ∧ tl _x40 _9 ∧ v == _x40)]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_8:[v:int list | ∃_x16, (hd _x16 _x1 ∧ tl _x16 _x0 ∧ v == _x16)]
_x39:[v:int list | ∃_x39, (hd _x39 _x1 ∧ tl _x39 _8 ∧ v == _x39)] 
 ⊢ _x39 as let (_x0) = Nil in
let (_x1) = s in let (_8) = Cons (_x1, _x0) in Cons (_x1, _8) : int list :
[v:int list | ∃_x39, (hd _x39 _x1 ∧ tl _x39 _8 ∧ v == _x39)]

_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_7:[v:int list | ∃_x15, (hd _x15 _x2 ∧ tl _x15 _x0 ∧ v == _x15)]
_x38:[v:int list | ∃_x38, (hd _x38 _x2 ∧ tl _x38 _7 ∧ v == _x38)] 
 ⊢ _x38 as let (_x0) = Nil in
let (_x2) = x in let (_7) = Cons (_x2, _x0) in Cons (_x2, _7) : int list :
[v:int list | ∃_x38, (hd _x38 _x2 ∧ tl _x38 _7 ∧ v == _x38)]

_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_6:[v:int list | ∃_x16, (hd _x16 _x1 ∧ tl _x16 _x0 ∧ v == _x16)]
_x37:[v:int list | ∃_x37, (hd _x37 _x2 ∧ tl _x37 _6 ∧ v == _x37)] 
 ⊢ _x37 as let (_x0) = Nil in
let (_x1) = s in
let (_6) = Cons (_x1, _x0) in let (_x2) = x in Cons (_x2, _6) : int list :
[v:int list | ∃_x37, (hd _x37 _x2 ∧ tl _x37 _6 ∧ v == _x37)]

Cost: 14
Type: (Ty_constructor(list(Ty_int)))
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_28:[v:int | v == (_x1 - 1)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_29:[v:int list | ∃s_6, (s_6 >= 0 ∧ s_6 < s ∧ s_6 == _28 ∧ (∃_x28, (len _x28 s_6 ∧ (∀u, (list_mem _x28 u => u == _x2)) ∧ v == _x28)))]
_x70:[v:int list | ∃_x70, (hd _x70 _x1 ∧ tl _x70 _29 ∧ v == _x70)] 
 ⊢ _x70 as let (_x1) = s in
let (_x6) = subs _x1 in
let (_x27) = duplicate_list_gen _x6 in
let (_x2) = x in let (_29) = _x27 _x2 in Cons (_x1, _29) : int list :
[v:int list | ∃_x70, (hd _x70 _x1 ∧ tl _x70 _29 ∧ v == _x70)]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_26:[v:int | v == (_x1 - 1)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_27:[v:int list | ∃s_7, (s_7 >= 0 ∧ s_7 < s ∧ s_7 == _26 ∧ (∃_x30, (len _x30 s_7 ∧ (∀u, (list_mem _x30 u => u == _x1)) ∧ v == _x30)))]
_x69:[v:int list | ∃_x69, (hd _x69 _x1 ∧ tl _x69 _27 ∧ v == _x69)] 
 ⊢ _x69 as let (_x1) = s in
let (_x6) = subs _x1 in
let (_x29) = duplicate_list_gen _x6 in
let (_27) = _x29 _x1 in Cons (_x1, _27) : int list :
[v:int list | ∃_x69, (hd _x69 _x1 ∧ tl _x69 _27 ∧ v == _x69)]

_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_24:[v:int | v == (_x1 - 1)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_25:[v:int list | ∃s_6, (s_6 >= 0 ∧ s_6 < s ∧ s_6 == _24 ∧ (∃_x28, (len _x28 s_6 ∧ (∀u, (list_mem _x28 u => u == _x2)) ∧ v == _x28)))]
_x68:[v:int list | ∃_x68, (hd _x68 _x2 ∧ tl _x68 _25 ∧ v == _x68)] 
 ⊢ _x68 as let (_x1) = s in
let (_x6) = subs _x1 in
let (_x27) = duplicate_list_gen _x6 in
let (_x2) = x in let (_25) = _x27 _x2 in Cons (_x2, _25) : int list :
[v:int list | ∃_x68, (hd _x68 _x2 ∧ tl _x68 _25 ∧ v == _x68)]

_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_22:[v:int | v == (_x1 - 1)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_23:[v:int list | ∃s_7, (s_7 >= 0 ∧ s_7 < s ∧ s_7 == _22 ∧ (∃_x30, (len _x30 s_7 ∧ (∀u, (list_mem _x30 u => u == _x1)) ∧ v == _x30)))]
_x67:[v:int list | ∃_x67, (hd _x67 _x2 ∧ tl _x67 _23 ∧ v == _x67)] 
 ⊢ _x67 as let (_x1) = s in
let (_x6) = subs _x1 in
let (_x29) = duplicate_list_gen _x6 in
let (_23) = _x29 _x1 in let (_x2) = x in Cons (_x2, _23) : int list :
[v:int list | ∃_x67, (hd _x67 _x2 ∧ tl _x67 _23 ∧ v == _x67)]

Cost: 17
Type: Ty_int
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x5:[v:int | v == (_x2 - 1)]
_x18:[v:int | v == (_x5 - 1)]
_x41:[v:int | v == (_x18 - 1)]
_x82:[v:int | v == (_x41 - 1)] 
 ⊢ _x82 as let (_x2) = x in
let (_x5) = subs _x2 in
let (_x18) = subs _x5 in let (_x41) = subs _x18 in subs _x41 : int :
[v:int | v == (_x41 - 1)]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x6:[v:int | v == (_x1 - 1)]
_x17:[v:int | v == (_x6 - 1)]
_x42:[v:int | v == (_x17 - 1)]
_x81:[v:int | v == (_x42 - 1)] 
 ⊢ _x81 as let (_x1) = s in
let (_x6) = subs _x1 in
let (_x17) = subs _x6 in let (_x42) = subs _x17 in subs _x42 : int :
[v:int | v == (_x42 - 1)]

Type: (Ty_constructor(list(Ty_int)))
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x6:[v:int | v == (_x1 - 1)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_72:[v:int | v == (_x1 - 1)]
_73:[v:int | v == (_72 - 1)]
_x102:[v:int list | ∃s_15, (s_15 >= 0 ∧ s_15 < s ∧ s_15 == _x6 ∧ (∃_x102, (len _x102 s_15 ∧ (∀u, (list_mem _x102 u => u == _73)) ∧ v == _x102)))] 
 ⊢ _x102 as let (_x1) = s in
let (_x6) = subs _x1 in
let (_x101) = duplicate_list_gen _x6 in let (_73) = subs _x6 in _x101 _73 : int list :
[v:int list | ∃s_15, (s_15 >= 0 ∧ s_15 < s ∧ s_15 == _x6 ∧ (∃_x102, (len _x102 s_15 ∧ (∀u, (list_mem _x102 u => u == _73)) ∧ v == _x102)))]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x6:[v:int | v == (_x1 - 1)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_70:[v:int | v == (_x2 - 1)]
_71:[v:int | v == (_70 - 1)]
_x100:[v:int list | ∃s_14, (s_14 >= 0 ∧ s_14 < s ∧ s_14 == _x6 ∧ (∃_x100, (len _x100 s_14 ∧ (∀u, (list_mem _x100 u => u == _71)) ∧ v == _x100)))] 
 ⊢ _x100 as let (_x1) = s in
let (_x6) = subs _x1 in
let (_x99) = duplicate_list_gen _x6 in
let (_x2) = x in let (_x5) = subs _x2 in let (_71) = subs _x5 in _x99 _71 : int list :
[v:int list | ∃s_14, (s_14 >= 0 ∧ s_14 < s ∧ s_14 == _x6 ∧ (∃_x100, (len _x100 s_14 ∧ (∀u, (list_mem _x100 u => u == _71)) ∧ v == _x100)))]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_56:[v:int list | ∃_x16, (hd _x16 _x1 ∧ tl _x16 _x0 ∧ v == _x16)]
_57:[v:int list | ∃_x37, (hd _x37 _x2 ∧ tl _x37 _56 ∧ v == _x37)]
_x90:[v:int list | ∃_x90, (hd _x90 _x1 ∧ tl _x90 _57 ∧ v == _x90)] 
 ⊢ _x90 as let (_x0) = Nil in
let (_x1) = s in
let (_6) = Cons (_x1, _x0) in
let (_x2) = x in let (_57) = Cons (_x2, _6) in Cons (_x1, _57) : int list :
[v:int list | ∃_x90, (hd _x90 _x1 ∧ tl _x90 _57 ∧ v == _x90)]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_54:[v:int list | ∃_x15, (hd _x15 _x2 ∧ tl _x15 _x0 ∧ v == _x15)]
_55:[v:int list | ∃_x38, (hd _x38 _x2 ∧ tl _x38 _54 ∧ v == _x38)]
_x89:[v:int list | ∃_x89, (hd _x89 _x1 ∧ tl _x89 _55 ∧ v == _x89)] 
 ⊢ _x89 as let (_x0) = Nil in
let (_x2) = x in
let (_7) = Cons (_x2, _x0) in
let (_55) = Cons (_x2, _7) in let (_x1) = s in Cons (_x1, _55) : int list :
[v:int list | ∃_x89, (hd _x89 _x1 ∧ tl _x89 _55 ∧ v == _x89)]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_52:[v:int list | ∃_x16, (hd _x16 _x1 ∧ tl _x16 _x0 ∧ v == _x16)]
_53:[v:int list | ∃_x39, (hd _x39 _x1 ∧ tl _x39 _52 ∧ v == _x39)]
_x88:[v:int list | ∃_x88, (hd _x88 _x1 ∧ tl _x88 _53 ∧ v == _x88)] 
 ⊢ _x88 as let (_x0) = Nil in
let (_x1) = s in
let (_8) = Cons (_x1, _x0) in let (_53) = Cons (_x1, _8) in Cons (_x1, _53) : int list :
[v:int list | ∃_x88, (hd _x88 _x1 ∧ tl _x88 _53 ∧ v == _x88)]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_50:[v:int list | ∃_x15, (hd _x15 _x2 ∧ tl _x15 _x0 ∧ v == _x15)]
_51:[v:int list | ∃_x40, (hd _x40 _x1 ∧ tl _x40 _50 ∧ v == _x40)]
_x87:[v:int list | ∃_x87, (hd _x87 _x1 ∧ tl _x87 _51 ∧ v == _x87)] 
 ⊢ _x87 as let (_x0) = Nil in
let (_x2) = x in
let (_9) = Cons (_x2, _x0) in
let (_x1) = s in let (_51) = Cons (_x1, _9) in Cons (_x1, _51) : int list :
[v:int list | ∃_x87, (hd _x87 _x1 ∧ tl _x87 _51 ∧ v == _x87)]

_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_48:[v:int list | ∃_x16, (hd _x16 _x1 ∧ tl _x16 _x0 ∧ v == _x16)]
_49:[v:int list | ∃_x37, (hd _x37 _x2 ∧ tl _x37 _48 ∧ v == _x37)]
_x86:[v:int list | ∃_x86, (hd _x86 _x2 ∧ tl _x86 _49 ∧ v == _x86)] 
 ⊢ _x86 as let (_x0) = Nil in
let (_x1) = s in
let (_6) = Cons (_x1, _x0) in
let (_x2) = x in let (_49) = Cons (_x2, _6) in Cons (_x2, _49) : int list :
[v:int list | ∃_x86, (hd _x86 _x2 ∧ tl _x86 _49 ∧ v == _x86)]

_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_46:[v:int list | ∃_x15, (hd _x15 _x2 ∧ tl _x15 _x0 ∧ v == _x15)]
_47:[v:int list | ∃_x38, (hd _x38 _x2 ∧ tl _x38 _46 ∧ v == _x38)]
_x85:[v:int list | ∃_x85, (hd _x85 _x2 ∧ tl _x85 _47 ∧ v == _x85)] 
 ⊢ _x85 as let (_x0) = Nil in
let (_x2) = x in
let (_7) = Cons (_x2, _x0) in let (_47) = Cons (_x2, _7) in Cons (_x2, _47) : int list :
[v:int list | ∃_x85, (hd _x85 _x2 ∧ tl _x85 _47 ∧ v == _x85)]

_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_44:[v:int list | ∃_x16, (hd _x16 _x1 ∧ tl _x16 _x0 ∧ v == _x16)]
_45:[v:int list | ∃_x39, (hd _x39 _x1 ∧ tl _x39 _44 ∧ v == _x39)]
_x84:[v:int list | ∃_x84, (hd _x84 _x2 ∧ tl _x84 _45 ∧ v == _x84)] 
 ⊢ _x84 as let (_x0) = Nil in
let (_x1) = s in
let (_8) = Cons (_x1, _x0) in
let (_45) = Cons (_x1, _8) in let (_x2) = x in Cons (_x2, _45) : int list :
[v:int list | ∃_x84, (hd _x84 _x2 ∧ tl _x84 _45 ∧ v == _x84)]

_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_42:[v:int list | ∃_x15, (hd _x15 _x2 ∧ tl _x15 _x0 ∧ v == _x15)]
_43:[v:int list | ∃_x40, (hd _x40 _x1 ∧ tl _x40 _42 ∧ v == _x40)]
_x83:[v:int list | ∃_x83, (hd _x83 _x2 ∧ tl _x83 _43 ∧ v == _x83)] 
 ⊢ _x83 as let (_x0) = Nil in
let (_x2) = x in
let (_9) = Cons (_x2, _x0) in
let (_x1) = s in let (_43) = Cons (_x1, _9) in Cons (_x2, _43) : int list :
[v:int list | ∃_x83, (hd _x83 _x2 ∧ tl _x83 _43 ∧ v == _x83)]

Cost: 1
Type: Ty_int
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)] 
 ⊢ _x2 as x : int :
[v:int | v == x]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)] 
 ⊢ _x1 as s : int :
[v:int | v == s]

Cost: 19
Type: (Ty_constructor(list(Ty_int)))
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x5:[v:int | v == (_x2 - 1)]
_x18:[v:int | v == (_x5 - 1)]
_x41:[v:int | v == (_x18 - 1)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x140:[v:int list | ∃_x140, (hd _x140 _x41 ∧ tl _x140 _x0 ∧ v == _x140)] 
 ⊢ _x140 as let (_x0) = Nil in
let (_x2) = x in
let (_x5) = subs _x2 in
let (_x18) = subs _x5 in let (_x41) = subs _x18 in Cons (_x41, _x0) : int list :
[v:int list | ∃_x140, (hd _x140 _x41 ∧ tl _x140 _x0 ∧ v == _x140)]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x6:[v:int | v == (_x1 - 1)]
_x17:[v:int | v == (_x6 - 1)]
_x42:[v:int | v == (_x17 - 1)]
_x0:[v:int list | emp v]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x139:[v:int list | ∃_x139, (hd _x139 _x42 ∧ tl _x139 _x0 ∧ v == _x139)] 
 ⊢ _x139 as let (_x0) = Nil in
let (_x1) = s in
let (_x6) = subs _x1 in
let (_x17) = subs _x6 in let (_x42) = subs _x17 in Cons (_x42, _x0) : int list :
[v:int list | ∃_x139, (hd _x139 _x42 ∧ tl _x139 _x0 ∧ v == _x139)]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_123:[v:int | v == (_x1 - 1)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_124:[v:int list | ∃s_7, (s_7 >= 0 ∧ s_7 < s ∧ s_7 == _123 ∧ (∃_x30, (len _x30 s_7 ∧ (∀u, (list_mem _x30 u => u == _x1)) ∧ v == _x30)))]
_125:[v:int list | ∃_x67, (hd _x67 _x2 ∧ tl _x67 _124 ∧ v == _x67)]
_x138:[v:int list | ∃_x138, (hd _x138 _x1 ∧ tl _x138 _125 ∧ v == _x138)] 
 ⊢ _x138 as let (_x1) = s in
let (_x6) = subs _x1 in
let (_x29) = duplicate_list_gen _x6 in
let (_23) = _x29 _x1 in
let (_x2) = x in let (_125) = Cons (_x2, _23) in Cons (_x1, _125) : int list :
[v:int list | ∃_x138, (hd _x138 _x1 ∧ tl _x138 _125 ∧ v == _x138)]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_120:[v:int | v == (_x1 - 1)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_121:[v:int list | ∃s_6, (s_6 >= 0 ∧ s_6 < s ∧ s_6 == _120 ∧ (∃_x28, (len _x28 s_6 ∧ (∀u, (list_mem _x28 u => u == _x2)) ∧ v == _x28)))]
_122:[v:int list | ∃_x68, (hd _x68 _x2 ∧ tl _x68 _121 ∧ v == _x68)]
_x137:[v:int list | ∃_x137, (hd _x137 _x1 ∧ tl _x137 _122 ∧ v == _x137)] 
 ⊢ _x137 as let (_x1) = s in
let (_x6) = subs _x1 in
let (_x27) = duplicate_list_gen _x6 in
let (_x2) = x in
let (_25) = _x27 _x2 in let (_122) = Cons (_x2, _25) in Cons (_x1, _122) : int list :
[v:int list | ∃_x137, (hd _x137 _x1 ∧ tl _x137 _122 ∧ v == _x137)]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_117:[v:int | v == (_x1 - 1)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_118:[v:int list | ∃s_7, (s_7 >= 0 ∧ s_7 < s ∧ s_7 == _117 ∧ (∃_x30, (len _x30 s_7 ∧ (∀u, (list_mem _x30 u => u == _x1)) ∧ v == _x30)))]
_119:[v:int list | ∃_x69, (hd _x69 _x1 ∧ tl _x69 _118 ∧ v == _x69)]
_x136:[v:int list | ∃_x136, (hd _x136 _x1 ∧ tl _x136 _119 ∧ v == _x136)] 
 ⊢ _x136 as let (_x1) = s in
let (_x6) = subs _x1 in
let (_x29) = duplicate_list_gen _x6 in
let (_27) = _x29 _x1 in let (_119) = Cons (_x1, _27) in Cons (_x1, _119) : int list :
[v:int list | ∃_x136, (hd _x136 _x1 ∧ tl _x136 _119 ∧ v == _x136)]

_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_114:[v:int | v == (_x1 - 1)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_115:[v:int list | ∃s_6, (s_6 >= 0 ∧ s_6 < s ∧ s_6 == _114 ∧ (∃_x28, (len _x28 s_6 ∧ (∀u, (list_mem _x28 u => u == _x2)) ∧ v == _x28)))]
_116:[v:int list | ∃_x70, (hd _x70 _x1 ∧ tl _x70 _115 ∧ v == _x70)]
_x135:[v:int list | ∃_x135, (hd _x135 _x1 ∧ tl _x135 _116 ∧ v == _x135)] 
 ⊢ _x135 as let (_x1) = s in
let (_x6) = subs _x1 in
let (_x27) = duplicate_list_gen _x6 in
let (_x2) = x in
let (_29) = _x27 _x2 in let (_116) = Cons (_x1, _29) in Cons (_x1, _116) : int list :
[v:int list | ∃_x135, (hd _x135 _x1 ∧ tl _x135 _116 ∧ v == _x135)]

_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_111:[v:int | v == (_x1 - 1)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_112:[v:int list | ∃s_7, (s_7 >= 0 ∧ s_7 < s ∧ s_7 == _111 ∧ (∃_x30, (len _x30 s_7 ∧ (∀u, (list_mem _x30 u => u == _x1)) ∧ v == _x30)))]
_113:[v:int list | ∃_x67, (hd _x67 _x2 ∧ tl _x67 _112 ∧ v == _x67)]
_x134:[v:int list | ∃_x134, (hd _x134 _x2 ∧ tl _x134 _113 ∧ v == _x134)] 
 ⊢ _x134 as let (_x1) = s in
let (_x6) = subs _x1 in
let (_x29) = duplicate_list_gen _x6 in
let (_23) = _x29 _x1 in
let (_x2) = x in let (_113) = Cons (_x2, _23) in Cons (_x2, _113) : int list :
[v:int list | ∃_x134, (hd _x134 _x2 ∧ tl _x134 _113 ∧ v == _x134)]

_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_108:[v:int | v == (_x1 - 1)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_109:[v:int list | ∃s_6, (s_6 >= 0 ∧ s_6 < s ∧ s_6 == _108 ∧ (∃_x28, (len _x28 s_6 ∧ (∀u, (list_mem _x28 u => u == _x2)) ∧ v == _x28)))]
_110:[v:int list | ∃_x68, (hd _x68 _x2 ∧ tl _x68 _109 ∧ v == _x68)]
_x133:[v:int list | ∃_x133, (hd _x133 _x2 ∧ tl _x133 _110 ∧ v == _x133)] 
 ⊢ _x133 as let (_x1) = s in
let (_x6) = subs _x1 in
let (_x27) = duplicate_list_gen _x6 in
let (_x2) = x in
let (_25) = _x27 _x2 in let (_110) = Cons (_x2, _25) in Cons (_x2, _110) : int list :
[v:int list | ∃_x133, (hd _x133 _x2 ∧ tl _x133 _110 ∧ v == _x133)]

_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_105:[v:int | v == (_x1 - 1)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_106:[v:int list | ∃s_7, (s_7 >= 0 ∧ s_7 < s ∧ s_7 == _105 ∧ (∃_x30, (len _x30 s_7 ∧ (∀u, (list_mem _x30 u => u == _x1)) ∧ v == _x30)))]
_107:[v:int list | ∃_x69, (hd _x69 _x1 ∧ tl _x69 _106 ∧ v == _x69)]
_x132:[v:int list | ∃_x132, (hd _x132 _x2 ∧ tl _x132 _107 ∧ v == _x132)] 
 ⊢ _x132 as let (_x1) = s in
let (_x6) = subs _x1 in
let (_x29) = duplicate_list_gen _x6 in
let (_27) = _x29 _x1 in
let (_107) = Cons (_x1, _27) in let (_x2) = x in Cons (_x2, _107) : int list :
[v:int list | ∃_x132, (hd _x132 _x2 ∧ tl _x132 _107 ∧ v == _x132)]

_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_x1:[v:int | v == s]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_102:[v:int | v == (_x1 - 1)]
_x2:[v:int | v == x]
pathcond_1:[v:unit | ∃x_2, ((x_2 <=> s == 0) ∧ (¬x_2 <=> s > 0) ∧ ¬x_2)]
_103:[v:int list | ∃s_6, (s_6 >= 0 ∧ s_6 < s ∧ s_6 == _102 ∧ (∃_x28, (len _x28 s_6 ∧ (∀u, (list_mem _x28 u => u == _x2)) ∧ v == _x28)))]
_104:[v:int list | ∃_x70, (hd _x70 _x1 ∧ tl _x70 _103 ∧ v == _x70)]
_x131:[v:int list | ∃_x131, (hd _x131 _x2 ∧ tl _x131 _104 ∧ v == _x131)] 
 ⊢ _x131 as let (_x1) = s in
let (_x6) = subs _x1 in
let (_x27) = duplicate_list_gen _x6 in
let (_x2) = x in
let (_29) = _x27 _x2 in let (_104) = Cons (_x1, _29) in Cons (_x2, _104) : int list :
[v:int list | ∃_x131, (hd _x131 _x2 ∧ tl _x131 _104 ∧ v == _x131)]

