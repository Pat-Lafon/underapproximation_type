General Collection:
New Blocks:
Old Blocks:
Type: int list
digraph poset {
  label = "Partially Ordered Set"
  size = "8.270000,11.690000"
  ratio = 0.900000
  rotate = 0.000000
  center = 1

  edge [ dir = back ]

  node0 [ label = "_x2:[v:int list | emp v] 
 ⊢ Nil  : int list :
[v:int list | emp v]
" ]
  node1 [ label = "_x6:[v:int | v == x]
_28:[v:int list | emp v]
_x16:[v:int list | ∃_x16, (hd _x16 _x6 ∧ tl _x16 _28 ∧ v == _x16)] 
 ⊢ let (_28) = Nil  in let (_x6) = x in Cons _x6 _28 : int list :
[v:int list | ∃_x16, (hd _x16 _x6 ∧ tl _x16 _28 ∧ v == _x16)]
" ]
  node2 [ label = "_x5:[v:int | v == s]
_29:[v:int list | emp v]
_x17:[v:int list | ∃_x17, (hd _x17 _x5 ∧ tl _x17 _29 ∧ v == _x17)] 
 ⊢ let (_29) = Nil  in let (_x5) = s in Cons _x5 _29 : int list :
[v:int list | ∃_x17, (hd _x17 _x5 ∧ tl _x17 _29 ∧ v == _x17)]
" ]
  node3 [ label = "_x4:[v:int | true]
_32:[v:int list | emp v]
_x18:[v:int list | ∃_x18, (hd _x18 _x4 ∧ tl _x18 _32 ∧ v == _x18)] 
 ⊢ let (_32) = Nil  in let (_x4) = int_gen () in Cons _x4 _32 : int list :
[v:int list | ∃_x18, (hd _x18 _x4 ∧ tl _x18 _32 ∧ v == _x18)]
" ]
  node4 [ label = "_x6:[v:int | v == x]
_167:[v:int | true]
_168:[v:int list | emp v]
_169:[v:int list | ∃_x18, (hd _x18 _167 ∧ tl _x18 _168 ∧ v == _x18)]
_x98:[v:int list | ∃_x98, (hd _x98 _x6 ∧ tl _x98 _169 ∧ v == _x98)] 
 ⊢ let (_32) = Nil  in
let (_x4) = int_gen () in
let (_169) = Cons _x4 _32 in let (_x6) = x in Cons _x6 _169 : int list :
[v:int list | ∃_x98, (hd _x98 _x6 ∧ tl _x98 _169 ∧ v == _x98)]
" ]
  node5 [ label = "_x6:[v:int | v == x]
_x5:[v:int | v == s]
_170:[v:int list | emp v]
_171:[v:int list | ∃_x17, (hd _x17 _x5 ∧ tl _x17 _170 ∧ v == _x17)]
_x99:[v:int list | ∃_x99, (hd _x99 _x6 ∧ tl _x99 _171 ∧ v == _x99)] 
 ⊢ let (_29) = Nil  in
let (_x5) = s in let (_171) = Cons _x5 _29 in let (_x6) = x in Cons _x6 _171 : int list :
[v:int list | ∃_x99, (hd _x99 _x6 ∧ tl _x99 _171 ∧ v == _x99)]
" ]
  node6 [ label = "_x6:[v:int | v == x]
_x6:[v:int | v == x]
_175:[v:int list | emp v]
_176:[v:int list | ∃_x16, (hd _x16 _x6 ∧ tl _x16 _175 ∧ v == _x16)]
_x100:[v:int list | ∃_x100, (hd _x100 _x6 ∧ tl _x100 _176 ∧ v == _x100)] 
 ⊢ let (_28) = Nil  in
let (_x6) = x in let (_176) = Cons _x6 _28 in Cons _x6 _176 : int list :
[v:int list | ∃_x100, (hd _x100 _x6 ∧ tl _x100 _176 ∧ v == _x100)]
" ]
  node7 [ label = "_x5:[v:int | v == s]
_183:[v:int | true]
_184:[v:int list | emp v]
_185:[v:int list | ∃_x18, (hd _x18 _183 ∧ tl _x18 _184 ∧ v == _x18)]
_x101:[v:int list | ∃_x101, (hd _x101 _x5 ∧ tl _x101 _185 ∧ v == _x101)] 
 ⊢ let (_32) = Nil  in
let (_x4) = int_gen () in
let (_185) = Cons _x4 _32 in let (_x5) = s in Cons _x5 _185 : int list :
[v:int list | ∃_x101, (hd _x101 _x5 ∧ tl _x101 _185 ∧ v == _x101)]
" ]
  node8 [ label = "_x5:[v:int | v == s]
_x5:[v:int | v == s]
_198:[v:int list | emp v]
_199:[v:int list | ∃_x17, (hd _x17 _x5 ∧ tl _x17 _198 ∧ v == _x17)]
_x102:[v:int list | ∃_x102, (hd _x102 _x5 ∧ tl _x102 _199 ∧ v == _x102)] 
 ⊢ let (_29) = Nil  in
let (_x5) = s in let (_199) = Cons _x5 _29 in Cons _x5 _199 : int list :
[v:int list | ∃_x102, (hd _x102 _x5 ∧ tl _x102 _199 ∧ v == _x102)]
" ]
  node9 [ label = "_x5:[v:int | v == s]
_x6:[v:int | v == x]
_212:[v:int list | emp v]
_213:[v:int list | ∃_x16, (hd _x16 _x6 ∧ tl _x16 _212 ∧ v == _x16)]
_x103:[v:int list | ∃_x103, (hd _x103 _x5 ∧ tl _x103 _213 ∧ v == _x103)] 
 ⊢ let (_28) = Nil  in
let (_x6) = x in let (_213) = Cons _x6 _28 in let (_x5) = s in Cons _x5 _213 : int list :
[v:int list | ∃_x103, (hd _x103 _x5 ∧ tl _x103 _213 ∧ v == _x103)]
" ]
  node10 [ label = "_x4:[v:int | true]
_229:[v:int | true]
_230:[v:int list | emp v]
_231:[v:int list | ∃_x18, (hd _x18 _229 ∧ tl _x18 _230 ∧ v == _x18)]
_x104:[v:int list | ∃_x104, (hd _x104 _x4 ∧ tl _x104 _231 ∧ v == _x104)] 
 ⊢ let (_32) = Nil  in
let (_x4) = int_gen () in let (_231) = Cons _x4 _32 in Cons _x4 _231 : int list :
[v:int list | ∃_x104, (hd _x104 _x4 ∧ tl _x104 _231 ∧ v == _x104)]
" ]
  node11 [ label = "_x4:[v:int | true]
_x5:[v:int | v == s]
_278:[v:int list | emp v]
_279:[v:int list | ∃_x17, (hd _x17 _x5 ∧ tl _x17 _278 ∧ v == _x17)]
_x105:[v:int list | ∃_x105, (hd _x105 _x4 ∧ tl _x105 _279 ∧ v == _x105)] 
 ⊢ let (_29) = Nil  in
let (_x5) = s in
let (_279) = Cons _x5 _29 in let (_x4) = int_gen () in Cons _x4 _279 : int list :
[v:int list | ∃_x105, (hd _x105 _x4 ∧ tl _x105 _279 ∧ v == _x105)]
" ]
  node12 [ label = "_x4:[v:int | true]
_x6:[v:int | v == x]
_311:[v:int list | emp v]
_312:[v:int list | ∃_x16, (hd _x16 _x6 ∧ tl _x16 _311 ∧ v == _x16)]
_x106:[v:int list | ∃_x106, (hd _x106 _x4 ∧ tl _x106 _312 ∧ v == _x106)] 
 ⊢ let (_28) = Nil  in
let (_x6) = x in
let (_312) = Cons _x6 _28 in let (_x4) = int_gen () in Cons _x4 _312 : int list :
[v:int list | ∃_x106, (hd _x106 _x4 ∧ tl _x106 _312 ∧ v == _x106)]
" ]
  node13 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)]
_348:[v:int list | emp v]
_x107:[v:int list | ∃_x107, (hd _x107 _x11 ∧ tl _x107 _348 ∧ v == _x107)] 
 ⊢ let (_348) = Nil  in let (_x5) = s in let (_x11) = subs _x5 in Cons _x11 _348 : int list :
[v:int list | ∃_x107, (hd _x107 _x11 ∧ tl _x107 _348 ∧ v == _x107)]
" ]
  node14 [ label = "_x6:[v:int | v == x]
_x10:[v:int | v == (_x6 - 1)]
_376:[v:int list | emp v]
_x108:[v:int list | ∃_x108, (hd _x108 _x10 ∧ tl _x108 _376 ∧ v == _x108)] 
 ⊢ let (_376) = Nil  in let (_x6) = x in let (_x10) = subs _x6 in Cons _x10 _376 : int list :
[v:int list | ∃_x108, (hd _x108 _x10 ∧ tl _x108 _376 ∧ v == _x108)]
" ]
  node15 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)]
_407:[v:int | true]
_408:[v:int list | emp v]
_409:[v:int list | ∃_x18, (hd _x18 _407 ∧ tl _x18 _408 ∧ v == _x18)]
_x109:[v:int list | ∃_x109, (hd _x109 _x11 ∧ tl _x109 _409 ∧ v == _x109)] 
 ⊢ let (_32) = Nil  in
let (_x4) = int_gen () in
let (_409) = Cons _x4 _32 in
let (_x5) = s in let (_x11) = subs _x5 in Cons _x11 _409 : int list :
[v:int list | ∃_x109, (hd _x109 _x11 ∧ tl _x109 _409 ∧ v == _x109)]
" ]
  node16 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)]
_x5:[v:int | v == s]
_465:[v:int list | emp v]
_466:[v:int list | ∃_x17, (hd _x17 _x5 ∧ tl _x17 _465 ∧ v == _x17)]
_x110:[v:int list | ∃_x110, (hd _x110 _x11 ∧ tl _x110 _466 ∧ v == _x110)] 
 ⊢ let (_29) = Nil  in
let (_x5) = s in
let (_466) = Cons _x5 _29 in let (_x11) = subs _x5 in Cons _x11 _466 : int list :
[v:int list | ∃_x110, (hd _x110 _x11 ∧ tl _x110 _466 ∧ v == _x110)]
" ]
  node17 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)]
_x6:[v:int | v == x]
_524:[v:int list | emp v]
_525:[v:int list | ∃_x16, (hd _x16 _x6 ∧ tl _x16 _524 ∧ v == _x16)]
_x111:[v:int list | ∃_x111, (hd _x111 _x11 ∧ tl _x111 _525 ∧ v == _x111)] 
 ⊢ let (_28) = Nil  in
let (_x6) = x in
let (_525) = Cons _x6 _28 in
let (_x5) = s in let (_x11) = subs _x5 in Cons _x11 _525 : int list :
[v:int list | ∃_x111, (hd _x111 _x11 ∧ tl _x111 _525 ∧ v == _x111)]
" ]
  node18 [ label = "_x6:[v:int | v == x]
_x10:[v:int | v == (_x6 - 1)]
_587:[v:int | true]
_588:[v:int list | emp v]
_589:[v:int list | ∃_x18, (hd _x18 _587 ∧ tl _x18 _588 ∧ v == _x18)]
_x112:[v:int list | ∃_x112, (hd _x112 _x10 ∧ tl _x112 _589 ∧ v == _x112)] 
 ⊢ let (_32) = Nil  in
let (_x4) = int_gen () in
let (_589) = Cons _x4 _32 in
let (_x6) = x in let (_x10) = subs _x6 in Cons _x10 _589 : int list :
[v:int list | ∃_x112, (hd _x112 _x10 ∧ tl _x112 _589 ∧ v == _x112)]
" ]
  node19 [ label = "_x6:[v:int | v == x]
_x10:[v:int | v == (_x6 - 1)]
_x5:[v:int | v == s]
_660:[v:int list | emp v]
_661:[v:int list | ∃_x17, (hd _x17 _x5 ∧ tl _x17 _660 ∧ v == _x17)]
_x113:[v:int list | ∃_x113, (hd _x113 _x10 ∧ tl _x113 _661 ∧ v == _x113)] 
 ⊢ let (_29) = Nil  in
let (_x5) = s in
let (_661) = Cons _x5 _29 in
let (_x6) = x in let (_x10) = subs _x6 in Cons _x10 _661 : int list :
[v:int list | ∃_x113, (hd _x113 _x10 ∧ tl _x113 _661 ∧ v == _x113)]
" ]
  node20 [ label = "_x6:[v:int | v == x]
_x10:[v:int | v == (_x6 - 1)]
_x6:[v:int | v == x]
_731:[v:int list | emp v]
_732:[v:int list | ∃_x16, (hd _x16 _x6 ∧ tl _x16 _731 ∧ v == _x16)]
_x114:[v:int list | ∃_x114, (hd _x114 _x10 ∧ tl _x114 _732 ∧ v == _x114)] 
 ⊢ let (_28) = Nil  in
let (_x6) = x in
let (_732) = Cons _x6 _28 in let (_x10) = subs _x6 in Cons _x10 _732 : int list :
[v:int list | ∃_x114, (hd _x114 _x10 ∧ tl _x114 _732 ∧ v == _x114)]
" ]

  node0 [ shape = box, color = green ]
  node1 [ shape = box, color = red ]
  node2 [ shape = box, color = red ]
  node3 [ shape = box, color = blue ]
  node3 -> node2
  node3 -> node14
  node3 -> node1
  node3 -> node13
  node4 -> node6
  node4 -> node5
  node5 [ shape = box, color = red ]
  node6 [ shape = box, color = red ]
  node7 -> node8
  node7 -> node9
  node8 [ shape = box, color = red ]
  node9 [ shape = box, color = red ]
  node10 [ shape = box, color = blue ]
  node10 -> node4
  node10 -> node12
  node10 -> node18
  node10 -> node11
  node10 -> node7
  node10 -> node15
  node11 -> node16
  node11 -> node8
  node11 -> node5
  node11 -> node19
  node12 -> node20
  node12 -> node6
  node12 -> node17
  node12 -> node9
  node13 [ shape = box, color = red ]
  node14 [ shape = box, color = red ]
  node15 -> node16
  node15 -> node17
  node16 [ shape = box, color = red ]
  node17 [ shape = box, color = red ]
  node18 -> node20
  node18 -> node19
  node19 [ shape = box, color = red ]
  node20 [ shape = box, color = red ]
}
Type: bool
digraph poset {
  label = "Partially Ordered Set"
  size = "8.270000,11.690000"
  ratio = 0.900000
  rotate = 0.000000
  center = 1

  edge [ dir = back ]

  node0 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)]
_x96:[v:bool | ∃_x96, ((_x96 <=> _x11 == 0) ∧ (¬_x96 <=> _x11 > 0) ∧ v == _x96)] 
 ⊢ let (_x5) = s in let (_x11) = subs _x5 in sizecheck _x11 : bool :
[v:bool | ∃_x96, ((_x96 <=> _x11 == 0) ∧ (¬_x96 <=> _x11 > 0) ∧ v == _x96)]
" ]
  node1 [ label = "_x6:[v:int | v == x]
_x10:[v:int | v == (_x6 - 1)]
_x97:[v:bool | ∃_x97, ((_x97 <=> _x10 == 0) ∧ (¬_x97 <=> _x10 > 0) ∧ v == _x97)] 
 ⊢ let (_x6) = x in let (_x10) = subs _x6 in sizecheck _x10 : bool :
[v:bool | ∃_x97, ((_x97 <=> _x10 == 0) ∧ (¬_x97 <=> _x10 > 0) ∧ v == _x97)]
" ]
  node2 [ label = "_x6:[v:int | v == x]
_x5:[v:int | v == s]
_871:[v:int | v == (_x5 - 1)]
_x115:[v:bool | v == (_x6 <= _871)] 
 ⊢ let (_x5) = s in let (_871) = subs _x5 in let (_x6) = x in _x6 <= _871 : bool :
[v:bool | v == (_x6 <= _871)]
" ]
  node3 [ label = "_x5:[v:int | v == s]
_x6:[v:int | v == x]
_880:[v:int | v == (_x6 - 1)]
_x118:[v:bool | v == (_x5 <= _880)] 
 ⊢ let (_x6) = x in let (_880) = subs _x6 in let (_x5) = s in _x5 <= _880 : bool :
[v:bool | v == (_x5 <= _880)]
" ]
  node4 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)]
_x6:[v:int | v == x]
_x121:[v:bool | v == (_x11 <= _x6)] 
 ⊢ let (_x6) = x in let (_x5) = s in let (_x11) = subs _x5 in _x11 <= _x6 : bool :
[v:bool | v == (_x11 <= _x6)]
" ]
  node5 [ label = "_x6:[v:int | v == x]
_x10:[v:int | v == (_x6 - 1)]
_x5:[v:int | v == s]
_x125:[v:bool | v == (_x10 <= _x5)] 
 ⊢ let (_x5) = s in let (_x6) = x in let (_x10) = subs _x6 in _x10 <= _x5 : bool :
[v:bool | v == (_x10 <= _x5)]
" ]
  node6 [ label = "_x3:[v:bool | true] 
 ⊢ bool_gen () : bool :
[v:bool | true]
" ]
  node7 [ label = "_x1:[v:bool | ¬v] 
 ⊢ False  : bool :
[v:bool | ¬v]
" ]
  node8 [ label = "_x0:[v:bool | v] 
 ⊢ True  : bool :
[v:bool | v]
" ]
  node9 [ label = "_x6:[v:int | v == x]
_x5:[v:int | v == s]
_x20:[v:bool | v == (_x6 <= _x5)] 
 ⊢ let (_x5) = s in let (_x6) = x in _x6 <= _x5 : bool :
[v:bool | v == (_x6 <= _x5)]
" ]
  node10 [ label = "_x5:[v:int | v == s]
_x6:[v:int | v == x]
_x22:[v:bool | v == (_x5 <= _x6)] 
 ⊢ let (_x6) = x in let (_x5) = s in _x5 <= _x6 : bool :
[v:bool | v == (_x5 <= _x6)]
" ]
  node11 [ label = "_x6:[v:int | v == x]
_x13:[v:bool | ∃_x13, ((_x13 <=> _x6 == 0) ∧ (¬_x13 <=> _x6 > 0) ∧ v == _x13)] 
 ⊢ let (_x6) = x in sizecheck _x6 : bool :
[v:bool | ∃_x13, ((_x13 <=> _x6 == 0) ∧ (¬_x13 <=> _x6 > 0) ∧ v == _x13)]
" ]
  node12 [ label = "_x5:[v:int | v == s]
_x14:[v:bool | ∃_x14, ((_x14 <=> _x5 == 0) ∧ (¬_x14 <=> _x5 > 0) ∧ v == _x14)] 
 ⊢ let (_x5) = s in sizecheck _x5 : bool :
[v:bool | ∃_x14, ((_x14 <=> _x5 == 0) ∧ (¬_x14 <=> _x5 > 0) ∧ v == _x14)]
" ]

  node0 [ shape = box, color = red ]
  node1 [ shape = box, color = red ]
  node2 [ shape = box, color = red ]
  node3 [ shape = box, color = red ]
  node4 [ shape = box, color = red ]
  node5 [ shape = box, color = red ]
  node6 [ shape = box, color = blue ]
  node6 -> node0
  node6 -> node8
  node6 -> node4
  node6 -> node12
  node6 -> node2
  node6 -> node10
  node6 -> node1
  node6 -> node9
  node6 -> node5
  node6 -> node3
  node6 -> node11
  node6 -> node7
  node7 [ shape = box, color = red ]
  node8 [ shape = box, color = red ]
  node9 [ shape = box, color = red ]
  node10 [ shape = box, color = red ]
  node11 [ shape = box, color = red ]
  node12 [ shape = box, color = red ]
}
Type: int
digraph poset {
  label = "Partially Ordered Set"
  size = "8.270000,11.690000"
  ratio = 0.900000
  rotate = 0.000000
  center = 1

  edge [ dir = back ]

  node0 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)]
_x94:[v:int | v == (_x11 - 1)] 
 ⊢ let (_x5) = s in let (_x11) = subs _x5 in subs _x11 : int :
[v:int | v == (_x11 - 1)]
" ]
  node1 [ label = "_x6:[v:int | v == x]
_x10:[v:int | v == (_x6 - 1)]
_x95:[v:int | v == (_x10 - 1)] 
 ⊢ let (_x6) = x in let (_x10) = subs _x6 in subs _x10 : int :
[v:int | v == (_x10 - 1)]
" ]
  node2 [ label = "_x6:[v:int | v == x]
_x10:[v:int | v == (_x6 - 1)] 
 ⊢ let (_x6) = x in subs _x6 : int :
[v:int | v == (_x6 - 1)]
" ]
  node3 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)] 
 ⊢ let (_x5) = s in subs _x5 : int :
[v:int | v == (_x5 - 1)]
" ]
  node4 [ label = "_x4:[v:int | true] 
 ⊢ int_gen () : int :
[v:int | true]
" ]
  node5 [ label = "_x5:[v:int | v == s] 
 ⊢ s : int :
[v:int | v == s]
" ]
  node6 [ label = "_x6:[v:int | v == x] 
 ⊢ x : int :
[v:int | v == x]
" ]

  node0 [ shape = box, color = red ]
  node1 [ shape = box, color = red ]
  node2 [ shape = box, color = red ]
  node3 [ shape = box, color = red ]
  node4 [ shape = box, color = blue ]
  node4 -> node0
  node4 -> node2
  node4 -> node6
  node4 -> node1
  node4 -> node5
  node4 -> node3
  node5 [ shape = box, color = red ]
  node6 [ shape = box, color = red ]
}
Path Specific Collection:
y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
New Blocks:
Type: int list
digraph poset {
  label = "Partially Ordered Set"
  size = "8.270000,11.690000"
  ratio = 0.900000
  rotate = 0.000000
  center = 1

  edge [ dir = back ]

  node0 [ label = "_x4:[v:int | true]
_x5:[v:int | v == s]
_2957:[v:int | v == (_x5 - 1)]
_x6:[v:int | v == x]
_2958:[v:int | v == (_x6 - 1)]
y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_2959:[v:int list | ∃s_17, (0 <= s_17 ∧ s_17 >= 0 ∧ s_17 < s ∧ s_17 == _2957 ∧ (∃_x158, (len _x158 s_17 ∧ sorted _x158 ∧ (∀u, (hd _x158 u => _2958 <= u)) ∧ v == _x158)))]
_x524:[v:int list | ∃_x524, (hd _x524 _x4 ∧ tl _x524 _2959 ∧ v == _x524)] 
 ⊢ let (_x5) = s in
let (_x11) = subs _x5 in
let (_x157) = sorted_list_gen _x11 in
let (_x6) = x in
let (_1151) = subs _x6 in
let (_2959) = _x157 _1151 in let (_x4) = int_gen () in Cons _x4 _2959 : int list :
[v:int list | ∃_x524, (hd _x524 _x4 ∧ tl _x524 _2959 ∧ v == _x524)]
" ]
  node1 [ label = "_x4:[v:int | true]
_x5:[v:int | v == s]
_2968:[v:int | v == (_x5 - 1)]
_x6:[v:int | v == x]
y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_2969:[v:int list | ∃s_9, (0 <= s_9 ∧ s_9 >= 0 ∧ s_9 < s ∧ s_9 == _2968 ∧ (∃_x144, (len _x144 s_9 ∧ sorted _x144 ∧ (∀u, (hd _x144 u => _x6 <= u)) ∧ v == _x144)))]
_x528:[v:int list | ∃_x528, (hd _x528 _x4 ∧ tl _x528 _2969 ∧ v == _x528)] 
 ⊢ let (_x5) = s in
let (_x11) = subs _x5 in
let (_x143) = sorted_list_gen _x11 in
let (_x6) = x in
let (_2969) = _x143 _x6 in let (_x4) = int_gen () in Cons _x4 _2969 : int list :
[v:int list | ∃_x528, (hd _x528 _x4 ∧ tl _x528 _2969 ∧ v == _x528)]
" ]
  node2 [ label = "y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x5:[v:int | v == s]
_3149:[v:int | v == (_x5 - 1)]
_x6:[v:int | v == x]
_3150:[v:int | v == (_x6 - 1)]
y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_3151:[v:int list | ∃s_17, (0 <= s_17 ∧ s_17 >= 0 ∧ s_17 < s ∧ s_17 == _3149 ∧ (∃_x158, (len _x158 s_17 ∧ sorted _x158 ∧ (∀u, (hd _x158 u => _3150 <= u)) ∧ v == _x158)))]
_x581:[v:int list | ∃_x581, (hd _x581 y ∧ tl _x581 _3151 ∧ v == _x581)] 
 ⊢ let (_x5) = s in
let (_x11) = subs _x5 in
let (_x157) = sorted_list_gen _x11 in
let (_x6) = x in
let (_1151) = subs _x6 in let (_3151) = _x157 _1151 in Cons y _3151 : int list :
[v:int list | ∃_x581, (hd _x581 y ∧ tl _x581 _3151 ∧ v == _x581)]
" ]
  node3 [ label = "y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x5:[v:int | v == s]
_3155:[v:int | v == (_x5 - 1)]
_3156:[v:int | true]
y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_3157:[v:int list | ∃s_13, (0 <= s_13 ∧ s_13 >= 0 ∧ s_13 < s ∧ s_13 == _3155 ∧ (∃_x148, (len _x148 s_13 ∧ sorted _x148 ∧ (∀u, (hd _x148 u => _3156 <= u)) ∧ v == _x148)))]
_x583:[v:int list | ∃_x583, (hd _x583 y ∧ tl _x583 _3157 ∧ v == _x583)] 
 ⊢ let (_x5) = s in
let (_x11) = subs _x5 in
let (_x147) = sorted_list_gen _x11 in
let (_1148) = int_gen () in let (_3157) = _x147 _1148 in Cons y _3157 : int list :
[v:int list | ∃_x583, (hd _x583 y ∧ tl _x583 _3157 ∧ v == _x583)]
" ]
  node4 [ label = "y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x5:[v:int | v == s]
_3160:[v:int | v == (_x5 - 1)]
_x6:[v:int | v == x]
y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_3161:[v:int list | ∃s_9, (0 <= s_9 ∧ s_9 >= 0 ∧ s_9 < s ∧ s_9 == _3160 ∧ (∃_x144, (len _x144 s_9 ∧ sorted _x144 ∧ (∀u, (hd _x144 u => _x6 <= u)) ∧ v == _x144)))]
_x585:[v:int list | ∃_x585, (hd _x585 y ∧ tl _x585 _3161 ∧ v == _x585)] 
 ⊢ let (_x5) = s in
let (_x11) = subs _x5 in
let (_x143) = sorted_list_gen _x11 in
let (_x6) = x in let (_3161) = _x143 _x6 in Cons y _3161 : int list :
[v:int list | ∃_x585, (hd _x585 y ∧ tl _x585 _3161 ∧ v == _x585)]
" ]
  node5 [ label = "y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x46:[v:int | v == (y - 1)]
_x5:[v:int | v == s]
_3213:[v:int | v == (_x5 - 1)]
_x6:[v:int | v == x]
_3214:[v:int | v == (_x6 - 1)]
y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_3215:[v:int list | ∃s_17, (0 <= s_17 ∧ s_17 >= 0 ∧ s_17 < s ∧ s_17 == _3213 ∧ (∃_x158, (len _x158 s_17 ∧ sorted _x158 ∧ (∀u, (hd _x158 u => _3214 <= u)) ∧ v == _x158)))]
_x600:[v:int list | ∃_x600, (hd _x600 _x46 ∧ tl _x600 _3215 ∧ v == _x600)] 
 ⊢ let (_x5) = s in
let (_x11) = subs _x5 in
let (_x157) = sorted_list_gen _x11 in
let (_x6) = x in
let (_1151) = subs _x6 in
let (_3215) = _x157 _1151 in
let (y) = y in let (_x46) = subs y in Cons _x46 _3215 : int list :
[v:int list | ∃_x600, (hd _x600 _x46 ∧ tl _x600 _3215 ∧ v == _x600)]
" ]
  node6 [ label = "y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x46:[v:int | v == (y - 1)]
_x5:[v:int | v == s]
_3224:[v:int | v == (_x5 - 1)]
_x6:[v:int | v == x]
y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_3225:[v:int list | ∃s_9, (0 <= s_9 ∧ s_9 >= 0 ∧ s_9 < s ∧ s_9 == _3224 ∧ (∃_x144, (len _x144 s_9 ∧ sorted _x144 ∧ (∀u, (hd _x144 u => _x6 <= u)) ∧ v == _x144)))]
_x604:[v:int list | ∃_x604, (hd _x604 _x46 ∧ tl _x604 _3225 ∧ v == _x604)] 
 ⊢ let (_x5) = s in
let (_x11) = subs _x5 in
let (_x143) = sorted_list_gen _x11 in
let (_x6) = x in
let (_3225) = _x143 _x6 in
let (y) = y in let (_x46) = subs y in Cons _x46 _3225 : int list :
[v:int list | ∃_x604, (hd _x604 _x46 ∧ tl _x604 _3225 ∧ v == _x604)]
" ]
  node7 [ label = "y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x46:[v:int | v == (y - 1)]
_x163:[v:int | v == (_x46 - 1)]
_x5:[v:int | v == s]
_3287:[v:int | v == (_x5 - 1)]
_x6:[v:int | v == x]
_3288:[v:int | v == (_x6 - 1)]
y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_3289:[v:int list | ∃s_17, (0 <= s_17 ∧ s_17 >= 0 ∧ s_17 < s ∧ s_17 == _3287 ∧ (∃_x158, (len _x158 s_17 ∧ sorted _x158 ∧ (∀u, (hd _x158 u => _3288 <= u)) ∧ v == _x158)))]
_x624:[v:int list | ∃_x624, (hd _x624 _x163 ∧ tl _x624 _3289 ∧ v == _x624)] 
 ⊢ let (_x5) = s in
let (_x11) = subs _x5 in
let (_x157) = sorted_list_gen _x11 in
let (_x6) = x in
let (_1151) = subs _x6 in
let (_3289) = _x157 _1151 in
let (y) = y in
let (_x46) = subs y in let (_x163) = subs _x46 in Cons _x163 _3289 : int list :
[v:int list | ∃_x624, (hd _x624 _x163 ∧ tl _x624 _3289 ∧ v == _x624)]
" ]
  node8 [ label = "y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x46:[v:int | v == (y - 1)]
_x163:[v:int | v == (_x46 - 1)]
_x5:[v:int | v == s]
_3293:[v:int | v == (_x5 - 1)]
_3294:[v:int | true]
y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_3295:[v:int list | ∃s_13, (0 <= s_13 ∧ s_13 >= 0 ∧ s_13 < s ∧ s_13 == _3293 ∧ (∃_x148, (len _x148 s_13 ∧ sorted _x148 ∧ (∀u, (hd _x148 u => _3294 <= u)) ∧ v == _x148)))]
_x626:[v:int list | ∃_x626, (hd _x626 _x163 ∧ tl _x626 _3295 ∧ v == _x626)] 
 ⊢ let (_x5) = s in
let (_x11) = subs _x5 in
let (_x147) = sorted_list_gen _x11 in
let (_1148) = int_gen () in
let (_3295) = _x147 _1148 in
let (y) = y in
let (_x46) = subs y in let (_x163) = subs _x46 in Cons _x163 _3295 : int list :
[v:int list | ∃_x626, (hd _x626 _x163 ∧ tl _x626 _3295 ∧ v == _x626)]
" ]
  node9 [ label = "y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x46:[v:int | v == (y - 1)]
_x163:[v:int | v == (_x46 - 1)]
_x5:[v:int | v == s]
_3298:[v:int | v == (_x5 - 1)]
_x6:[v:int | v == x]
y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_3299:[v:int list | ∃s_9, (0 <= s_9 ∧ s_9 >= 0 ∧ s_9 < s ∧ s_9 == _3298 ∧ (∃_x144, (len _x144 s_9 ∧ sorted _x144 ∧ (∀u, (hd _x144 u => _x6 <= u)) ∧ v == _x144)))]
_x628:[v:int list | ∃_x628, (hd _x628 _x163 ∧ tl _x628 _3299 ∧ v == _x628)] 
 ⊢ let (_x5) = s in
let (_x11) = subs _x5 in
let (_x143) = sorted_list_gen _x11 in
let (_x6) = x in
let (_3299) = _x143 _x6 in
let (y) = y in
let (_x46) = subs y in let (_x163) = subs _x46 in Cons _x163 _3299 : int list :
[v:int list | ∃_x628, (hd _x628 _x163 ∧ tl _x628 _3299 ∧ v == _x628)]
" ]

  node0 [ shape = box, color = blue ]
  node0 -> node1
  node0 -> node7
  node1 -> node9
  node2 -> node4
  node3 [ shape = box, color = blue ]
  node3 -> node4
  node4 [ shape = box, color = red ]
  node5 -> node2
  node5 -> node6
  node6 -> node4
  node7 -> node9
  node7 -> node5
  node8 [ shape = box, color = blue ]
  node8 -> node9
  node9 -> node6
}
Old Blocks:
Type: int
digraph poset {
  label = "Partially Ordered Set"
  size = "8.270000,11.690000"
  ratio = 0.900000
  rotate = 0.000000
  center = 1

  edge [ dir = back ]

  node0 [ label = "y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x46:[v:int | v == (y - 1)]
_x163:[v:int | v == (_x46 - 1)] 
 ⊢ let (y) = y in let (_x46) = subs y in subs _x46 : int :
[v:int | v == (_x46 - 1)]
" ]
  node1 [ label = "y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x46:[v:int | v == (y - 1)] 
 ⊢ let (y) = y in subs y : int :
[v:int | v == (y - 1)]
" ]
  node2 [ label = "y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)] 
 ⊢ y : int :
[v:int | true]
" ]

  node0 -> node1
  node1 [ shape = box, color = red ]
  node2 [ shape = box, color = blue ]
  node2 -> node0
}
Type: int list
digraph poset {
  label = "Partially Ordered Set"
  size = "8.270000,11.690000"
  ratio = 0.900000
  rotate = 0.000000
  center = 1

  edge [ dir = back ]

  node0 [ label = "y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_101:[v:int list | emp v]
_x48:[v:int list | ∃_x48, (hd _x48 y ∧ tl _x48 _101 ∧ v == _x48)] 
 ⊢ let (_101) = Nil  in Cons y _101 : int list :
[v:int list | ∃_x48, (hd _x48 y ∧ tl _x48 _101 ∧ v == _x48)]
" ]
  node1 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)]
_x6:[v:int | v == x]
y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x144:[v:int list | ∃s_9, (0 <= s_9 ∧ s_9 >= 0 ∧ s_9 < s ∧ s_9 == _x11 ∧ (∃_x144, (len _x144 s_9 ∧ sorted _x144 ∧ (∀u, (hd _x144 u => _x6 <= u)) ∧ v == _x144)))] 
 ⊢ let (_x5) = s in
let (_x11) = subs _x5 in
let (_x143) = sorted_list_gen _x11 in let (_x6) = x in _x143 _x6 : int list :
[v:int list | ∃s_9, (0 <= s_9 ∧ s_9 >= 0 ∧ s_9 < s ∧ s_9 == _x11 ∧ (∃_x144, (len _x144 s_9 ∧ sorted _x144 ∧ (∀u, (hd _x144 u => _x6 <= u)) ∧ v == _x144)))]
" ]
  node2 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)]
_x5:[v:int | v == s]
y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x146:[v:int list | ∃s_11, (0 <= s_11 ∧ s_11 >= 0 ∧ s_11 < s ∧ s_11 == _x11 ∧ (∃_x146, (len _x146 s_11 ∧ sorted _x146 ∧ (∀u, (hd _x146 u => _x5 <= u)) ∧ v == _x146)))] 
 ⊢ let (_x5) = s in
let (_x11) = subs _x5 in let (_x145) = sorted_list_gen _x11 in _x145 _x5 : int list :
[v:int list | ∃s_11, (0 <= s_11 ∧ s_11 >= 0 ∧ s_11 < s ∧ s_11 == _x11 ∧ (∃_x146, (len _x146 s_11 ∧ sorted _x146 ∧ (∀u, (hd _x146 u => _x5 <= u)) ∧ v == _x146)))]
" ]
  node3 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)]
_1148:[v:int | true]
y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x148:[v:int list | ∃s_13, (0 <= s_13 ∧ s_13 >= 0 ∧ s_13 < s ∧ s_13 == _x11 ∧ (∃_x148, (len _x148 s_13 ∧ sorted _x148 ∧ (∀u, (hd _x148 u => _1148 <= u)) ∧ v == _x148)))] 
 ⊢ let (_x5) = s in
let (_x11) = subs _x5 in
let (_x147) = sorted_list_gen _x11 in let (_1148) = int_gen () in _x147 _1148 : int list :
[v:int list | ∃s_13, (0 <= s_13 ∧ s_13 >= 0 ∧ s_13 < s ∧ s_13 == _x11 ∧ (∃_x148, (len _x148 s_13 ∧ sorted _x148 ∧ (∀u, (hd _x148 u => _1148 <= u)) ∧ v == _x148)))]
" ]
  node4 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)]
_x5:[v:int | v == s]
_1150:[v:int | v == (_x5 - 1)]
y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x156:[v:int list | ∃s_15, (0 <= s_15 ∧ s_15 >= 0 ∧ s_15 < s ∧ s_15 == _x11 ∧ (∃_x156, (len _x156 s_15 ∧ sorted _x156 ∧ (∀u, (hd _x156 u => _1150 <= u)) ∧ v == _x156)))] 
 ⊢ let (_x5) = s in
let (_x11) = subs _x5 in
let (_x155) = sorted_list_gen _x11 in let (_1150) = subs _x5 in _x155 _1150 : int list :
[v:int list | ∃s_15, (0 <= s_15 ∧ s_15 >= 0 ∧ s_15 < s ∧ s_15 == _x11 ∧ (∃_x156, (len _x156 s_15 ∧ sorted _x156 ∧ (∀u, (hd _x156 u => _1150 <= u)) ∧ v == _x156)))]
" ]
  node5 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)]
_x6:[v:int | v == x]
_1151:[v:int | v == (_x6 - 1)]
y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x158:[v:int list | ∃s_17, (0 <= s_17 ∧ s_17 >= 0 ∧ s_17 < s ∧ s_17 == _x11 ∧ (∃_x158, (len _x158 s_17 ∧ sorted _x158 ∧ (∀u, (hd _x158 u => _1151 <= u)) ∧ v == _x158)))] 
 ⊢ let (_x5) = s in
let (_x11) = subs _x5 in
let (_x157) = sorted_list_gen _x11 in
let (_x6) = x in let (_1151) = subs _x6 in _x157 _1151 : int list :
[v:int list | ∃s_17, (0 <= s_17 ∧ s_17 >= 0 ∧ s_17 < s ∧ s_17 == _x11 ∧ (∃_x158, (len _x158 s_17 ∧ sorted _x158 ∧ (∀u, (hd _x158 u => _1151 <= u)) ∧ v == _x158)))]
" ]
  node6 [ label = "_x6:[v:int | v == x]
y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_1154:[v:int list | emp v]
_1155:[v:int list | ∃_x48, (hd _x48 y ∧ tl _x48 _1154 ∧ v == _x48)]
_x165:[v:int list | ∃_x165, (hd _x165 _x6 ∧ tl _x165 _1155 ∧ v == _x165)] 
 ⊢ let (_101) = Nil  in
let (_1155) = Cons y _101 in let (_x6) = x in Cons _x6 _1155 : int list :
[v:int list | ∃_x165, (hd _x165 _x6 ∧ tl _x165 _1155 ∧ v == _x165)]
" ]
  node7 [ label = "_x5:[v:int | v == s]
y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_1156:[v:int list | emp v]
_1157:[v:int list | ∃_x48, (hd _x48 y ∧ tl _x48 _1156 ∧ v == _x48)]
_x166:[v:int list | ∃_x166, (hd _x166 _x5 ∧ tl _x166 _1157 ∧ v == _x166)] 
 ⊢ let (_101) = Nil  in
let (_1157) = Cons y _101 in let (_x5) = s in Cons _x5 _1157 : int list :
[v:int list | ∃_x166, (hd _x166 _x5 ∧ tl _x166 _1157 ∧ v == _x166)]
" ]
  node8 [ label = "_x4:[v:int | true]
y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_1158:[v:int list | emp v]
_1159:[v:int list | ∃_x48, (hd _x48 y ∧ tl _x48 _1158 ∧ v == _x48)]
_x167:[v:int list | ∃_x167, (hd _x167 _x4 ∧ tl _x167 _1159 ∧ v == _x167)] 
 ⊢ let (_101) = Nil  in
let (_1159) = Cons y _101 in let (_x4) = int_gen () in Cons _x4 _1159 : int list :
[v:int list | ∃_x167, (hd _x167 _x4 ∧ tl _x167 _1159 ∧ v == _x167)]
" ]
  node9 [ label = "y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_1160:[v:int list | emp v]
_1161:[v:int list | ∃_x48, (hd _x48 y ∧ tl _x48 _1160 ∧ v == _x48)]
_x168:[v:int list | ∃_x168, (hd _x168 y ∧ tl _x168 _1161 ∧ v == _x168)] 
 ⊢ let (_101) = Nil  in let (_1161) = Cons y _101 in Cons y _1161 : int list :
[v:int list | ∃_x168, (hd _x168 y ∧ tl _x168 _1161 ∧ v == _x168)]
" ]
  node10 [ label = "y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x46:[v:int | v == (y - 1)]
_1162:[v:int list | emp v]
_x169:[v:int list | ∃_x169, (hd _x169 _x46 ∧ tl _x169 _1162 ∧ v == _x169)] 
 ⊢ let (_1162) = Nil  in let (y) = y in let (_x46) = subs y in Cons _x46 _1162 : int list :
[v:int list | ∃_x169, (hd _x169 _x46 ∧ tl _x169 _1162 ∧ v == _x169)]
" ]
  node11 [ label = "y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x46:[v:int | v == (y - 1)]
y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_1163:[v:int list | emp v]
_1164:[v:int list | ∃_x48, (hd _x48 y ∧ tl _x48 _1163 ∧ v == _x48)]
_x170:[v:int list | ∃_x170, (hd _x170 _x46 ∧ tl _x170 _1164 ∧ v == _x170)] 
 ⊢ let (_101) = Nil  in
let (_1164) = Cons y _101 in
let (y) = y in let (_x46) = subs y in Cons _x46 _1164 : int list :
[v:int list | ∃_x170, (hd _x170 _x46 ∧ tl _x170 _1164 ∧ v == _x170)]
" ]
  node12 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)]
y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_1165:[v:int list | emp v]
_1166:[v:int list | ∃_x48, (hd _x48 y ∧ tl _x48 _1165 ∧ v == _x48)]
_x171:[v:int list | ∃_x171, (hd _x171 _x11 ∧ tl _x171 _1166 ∧ v == _x171)] 
 ⊢ let (_101) = Nil  in
let (_1166) = Cons y _101 in
let (_x5) = s in let (_x11) = subs _x5 in Cons _x11 _1166 : int list :
[v:int list | ∃_x171, (hd _x171 _x11 ∧ tl _x171 _1166 ∧ v == _x171)]
" ]
  node13 [ label = "_x6:[v:int | v == x]
_x10:[v:int | v == (_x6 - 1)]
y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_1167:[v:int list | emp v]
_1168:[v:int list | ∃_x48, (hd _x48 y ∧ tl _x48 _1167 ∧ v == _x48)]
_x172:[v:int list | ∃_x172, (hd _x172 _x10 ∧ tl _x172 _1168 ∧ v == _x172)] 
 ⊢ let (_101) = Nil  in
let (_1168) = Cons y _101 in
let (_x6) = x in let (_x10) = subs _x6 in Cons _x10 _1168 : int list :
[v:int list | ∃_x172, (hd _x172 _x10 ∧ tl _x172 _1168 ∧ v == _x172)]
" ]
  node14 [ label = "y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_1169:[v:int | true]
_1170:[v:int list | emp v]
_1171:[v:int list | ∃_x18, (hd _x18 _1169 ∧ tl _x18 _1170 ∧ v == _x18)]
_x173:[v:int list | ∃_x173, (hd _x173 y ∧ tl _x173 _1171 ∧ v == _x173)] 
 ⊢ let (_32) = Nil  in
let (_x4) = int_gen () in let (_1171) = Cons _x4 _32 in Cons y _1171 : int list :
[v:int list | ∃_x173, (hd _x173 y ∧ tl _x173 _1171 ∧ v == _x173)]
" ]
  node15 [ label = "y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x5:[v:int | v == s]
_1172:[v:int list | emp v]
_1173:[v:int list | ∃_x17, (hd _x17 _x5 ∧ tl _x17 _1172 ∧ v == _x17)]
_x174:[v:int list | ∃_x174, (hd _x174 y ∧ tl _x174 _1173 ∧ v == _x174)] 
 ⊢ let (_29) = Nil  in
let (_x5) = s in let (_1173) = Cons _x5 _29 in Cons y _1173 : int list :
[v:int list | ∃_x174, (hd _x174 y ∧ tl _x174 _1173 ∧ v == _x174)]
" ]
  node16 [ label = "y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x6:[v:int | v == x]
_1174:[v:int list | emp v]
_1175:[v:int list | ∃_x16, (hd _x16 _x6 ∧ tl _x16 _1174 ∧ v == _x16)]
_x175:[v:int list | ∃_x175, (hd _x175 y ∧ tl _x175 _1175 ∧ v == _x175)] 
 ⊢ let (_28) = Nil  in
let (_x6) = x in let (_1175) = Cons _x6 _28 in Cons y _1175 : int list :
[v:int list | ∃_x175, (hd _x175 y ∧ tl _x175 _1175 ∧ v == _x175)]
" ]
  node17 [ label = "y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x46:[v:int | v == (y - 1)]
_1176:[v:int | true]
_1177:[v:int list | emp v]
_1178:[v:int list | ∃_x18, (hd _x18 _1176 ∧ tl _x18 _1177 ∧ v == _x18)]
_x176:[v:int list | ∃_x176, (hd _x176 _x46 ∧ tl _x176 _1178 ∧ v == _x176)] 
 ⊢ let (_32) = Nil  in
let (_x4) = int_gen () in
let (_1178) = Cons _x4 _32 in
let (y) = y in let (_x46) = subs y in Cons _x46 _1178 : int list :
[v:int list | ∃_x176, (hd _x176 _x46 ∧ tl _x176 _1178 ∧ v == _x176)]
" ]
  node18 [ label = "y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x46:[v:int | v == (y - 1)]
_x5:[v:int | v == s]
_1179:[v:int list | emp v]
_1180:[v:int list | ∃_x17, (hd _x17 _x5 ∧ tl _x17 _1179 ∧ v == _x17)]
_x177:[v:int list | ∃_x177, (hd _x177 _x46 ∧ tl _x177 _1180 ∧ v == _x177)] 
 ⊢ let (_29) = Nil  in
let (_x5) = s in
let (_1180) = Cons _x5 _29 in
let (y) = y in let (_x46) = subs y in Cons _x46 _1180 : int list :
[v:int list | ∃_x177, (hd _x177 _x46 ∧ tl _x177 _1180 ∧ v == _x177)]
" ]
  node19 [ label = "y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x46:[v:int | v == (y - 1)]
_x6:[v:int | v == x]
_1181:[v:int list | emp v]
_1182:[v:int list | ∃_x16, (hd _x16 _x6 ∧ tl _x16 _1181 ∧ v == _x16)]
_x178:[v:int list | ∃_x178, (hd _x178 _x46 ∧ tl _x178 _1182 ∧ v == _x178)] 
 ⊢ let (_28) = Nil  in
let (_x6) = x in
let (_1182) = Cons _x6 _28 in
let (y) = y in let (_x46) = subs y in Cons _x46 _1182 : int list :
[v:int list | ∃_x178, (hd _x178 _x46 ∧ tl _x178 _1182 ∧ v == _x178)]
" ]

  node0 [ shape = box, color = red ]
  node1 [ shape = box, color = red ]
  node2 [ shape = box, color = red ]
  node3 [ shape = box, color = blue ]
  node3 -> node4
  node4 -> node2
  node5 [ shape = box, color = blue ]
  node5 -> node1
  node6 [ shape = box, color = red ]
  node7 [ shape = box, color = red ]
  node8 [ shape = box, color = blue ]
  node8 -> node12
  node8 -> node6
  node8 -> node9
  node8 -> node13
  node8 -> node19
  node8 -> node11
  node8 -> node7
  node9 [ shape = box, color = red ]
  node10 [ shape = box, color = blue ]
  node10 -> node0
  node11 [ shape = box, color = red ]
  node12 [ shape = box, color = red ]
  node13 [ shape = box, color = red ]
  node14 -> node16
  node14 -> node6
  node14 -> node9
  node14 -> node15
  node15 [ shape = box, color = red ]
  node16 [ shape = box, color = red ]
  node17 [ shape = box, color = blue ]
  node17 -> node18
  node17 -> node14
  node17 -> node13
  node17 -> node19
  node17 -> node11
  node18 -> node15
  node19 -> node16
}
Type: bool
digraph poset {
  label = "Partially Ordered Set"
  size = "8.270000,11.690000"
  ratio = 0.900000
  rotate = 0.000000
  center = 1

  edge [ dir = back ]

  node0 [ label = "y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x47:[v:bool | ∃_x47, ((_x47 <=> y == 0) ∧ (¬_x47 <=> y > 0) ∧ v == _x47)] 
 ⊢ let (y) = y in sizecheck y : bool :
[v:bool | ∃_x47, ((_x47 <=> y == 0) ∧ (¬_x47 <=> y > 0) ∧ v == _x47)]
" ]
  node1 [ label = "y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x49:[v:bool | v == (y <= y)] 
 ⊢ y <= y : bool :
[v:bool | v == (y <= y)]
" ]
  node2 [ label = "_x5:[v:int | v == s]
y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x51:[v:bool | v == (_x5 <= y)] 
 ⊢ let (_x5) = s in _x5 <= y : bool :
[v:bool | v == (_x5 <= y)]
" ]
  node3 [ label = "_x4:[v:int | true]
y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x52:[v:bool | v == (_x4 <= y)] 
 ⊢ let (_x4) = int_gen () in _x4 <= y : bool :
[v:bool | v == (_x4 <= y)]
" ]
  node4 [ label = "y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x5:[v:int | v == s]
_x54:[v:bool | v == (y <= _x5)] 
 ⊢ let (_x5) = s in y <= _x5 : bool :
[v:bool | v == (y <= _x5)]
" ]
  node5 [ label = "y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x46:[v:int | v == (y - 1)]
_x164:[v:bool | ∃_x164, ((_x164 <=> _x46 == 0) ∧ (¬_x164 <=> _x46 > 0) ∧ v == _x164)] 
 ⊢ let (y) = y in let (_x46) = subs y in sizecheck _x46 : bool :
[v:bool | ∃_x164, ((_x164 <=> _x46 == 0) ∧ (¬_x164 <=> _x46 > 0) ∧ v == _x164)]
" ]
  node6 [ label = "_x5:[v:int | v == s]
y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_1184:[v:int | v == (y - 1)]
_x180:[v:bool | v == (_x5 <= _1184)] 
 ⊢ let (y) = y in let (_1184) = subs y in let (_x5) = s in _x5 <= _1184 : bool :
[v:bool | v == (_x5 <= _1184)]
" ]
  node7 [ label = "y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_1186:[v:int | v == (y - 1)]
_x182:[v:bool | v == (y <= _1186)] 
 ⊢ let (y) = y in let (_1186) = subs y in y <= _1186 : bool :
[v:bool | v == (y <= _1186)]
" ]
  node8 [ label = "y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x46:[v:int | v == (y - 1)]
_x5:[v:int | v == s]
_x184:[v:bool | v == (_x46 <= _x5)] 
 ⊢ let (_x5) = s in let (y) = y in let (_x46) = subs y in _x46 <= _x5 : bool :
[v:bool | v == (_x46 <= _x5)]
" ]
  node9 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)]
y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x188:[v:bool | v == (_x11 <= y)] 
 ⊢ let (_x5) = s in let (_x11) = subs _x5 in _x11 <= y : bool :
[v:bool | v == (_x11 <= y)]
" ]
  node10 [ label = "y:[v:int | true]
pathcond_1:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ x <= y)]
_x5:[v:int | v == s]
_1191:[v:int | v == (_x5 - 1)]
_x192:[v:bool | v == (y <= _1191)] 
 ⊢ let (_x5) = s in let (_1191) = subs _x5 in y <= _1191 : bool :
[v:bool | v == (y <= _1191)]
" ]

  node0 -> node7
  node1 [ shape = box, color = red ]
  node2 -> node9
  node3 [ shape = box, color = blue ]
  node3 -> node8
  node3 -> node6
  node4 -> node10
  node4 -> node5
  node5 -> node0
  node6 -> node2
  node7 [ shape = box, color = red ]
  node8 -> node4
  node9 -> node1
  node10 -> node0
}
pathcond_0:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ x_3)]
New Blocks:
Old Blocks:
y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
New Blocks:
Type: int list
digraph poset {
  label = "Partially Ordered Set"
  size = "8.270000,11.690000"
  ratio = 0.900000
  rotate = 0.000000
  center = 1

  edge [ dir = back ]

  node0 [ label = "_x4:[v:int | true]
_x5:[v:int | v == s]
_3928:[v:int | v == (_x5 - 1)]
_x6:[v:int | v == x]
_3929:[v:int | v == (_x6 - 1)]
y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_3930:[v:int list | ∃s_18, (0 <= s_18 ∧ s_18 >= 0 ∧ s_18 < s ∧ s_18 == _3928 ∧ (∃_x158, (len _x158 s_18 ∧ sorted _x158 ∧ (∀u, (hd _x158 u => _3929 <= u)) ∧ v == _x158)))]
_x826:[v:int list | ∃_x826, (hd _x826 _x4 ∧ tl _x826 _3930 ∧ v == _x826)] 
 ⊢ let (_x5) = s in
let (_x11) = subs _x5 in
let (_x157) = sorted_list_gen _x11 in
let (_x6) = x in
let (_1151) = subs _x6 in
let (_3930) = _x157 _1151 in let (_x4) = int_gen () in Cons _x4 _3930 : int list :
[v:int list | ∃_x826, (hd _x826 _x4 ∧ tl _x826 _3930 ∧ v == _x826)]
" ]
  node1 [ label = "_x4:[v:int | true]
_x5:[v:int | v == s]
_3934:[v:int | v == (_x5 - 1)]
_3935:[v:int | true]
y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_3936:[v:int list | ∃s_14, (0 <= s_14 ∧ s_14 >= 0 ∧ s_14 < s ∧ s_14 == _3934 ∧ (∃_x148, (len _x148 s_14 ∧ sorted _x148 ∧ (∀u, (hd _x148 u => _3935 <= u)) ∧ v == _x148)))]
_x828:[v:int list | ∃_x828, (hd _x828 _x4 ∧ tl _x828 _3936 ∧ v == _x828)] 
 ⊢ let (_x5) = s in
let (_x11) = subs _x5 in
let (_x147) = sorted_list_gen _x11 in
let (_1148) = int_gen () in
let (_3936) = _x147 _1148 in let (_x4) = int_gen () in Cons _x4 _3936 : int list :
[v:int list | ∃_x828, (hd _x828 _x4 ∧ tl _x828 _3936 ∧ v == _x828)]
" ]
  node2 [ label = "_x4:[v:int | true]
_x5:[v:int | v == s]
_3939:[v:int | v == (_x5 - 1)]
_x6:[v:int | v == x]
y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_3940:[v:int list | ∃s_10, (0 <= s_10 ∧ s_10 >= 0 ∧ s_10 < s ∧ s_10 == _3939 ∧ (∃_x144, (len _x144 s_10 ∧ sorted _x144 ∧ (∀u, (hd _x144 u => _x6 <= u)) ∧ v == _x144)))]
_x830:[v:int list | ∃_x830, (hd _x830 _x4 ∧ tl _x830 _3940 ∧ v == _x830)] 
 ⊢ let (_x5) = s in
let (_x11) = subs _x5 in
let (_x143) = sorted_list_gen _x11 in
let (_x6) = x in
let (_3940) = _x143 _x6 in let (_x4) = int_gen () in Cons _x4 _3940 : int list :
[v:int list | ∃_x830, (hd _x830 _x4 ∧ tl _x830 _3940 ∧ v == _x830)]
" ]

  node0 -> node2
  node1 [ shape = box, color = blue ]
  node1 -> node0
  node2 [ shape = box, color = red ]
}
Old Blocks:
Type: int
digraph poset {
  label = "Partially Ordered Set"
  size = "8.270000,11.690000"
  ratio = 0.900000
  rotate = 0.000000
  center = 1

  edge [ dir = back ]

  node0 [ label = "y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_x70:[v:int | v == (y - 1)]
_x230:[v:int | v == (_x70 - 1)] 
 ⊢ let (y) = y in let (_x70) = subs y in subs _x70 : int :
[v:int | v == (_x70 - 1)]
" ]
  node1 [ label = "y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_x70:[v:int | v == (y - 1)] 
 ⊢ let (y) = y in subs y : int :
[v:int | v == (y - 1)]
" ]
  node2 [ label = "y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)] 
 ⊢ y : int :
[v:int | true]
" ]

  node0 [ shape = box, color = red ]
  node1 -> node0
  node2 [ shape = box, color = blue ]
  node2 -> node1
}
Type: int list
digraph poset {
  label = "Partially Ordered Set"
  size = "8.270000,11.690000"
  ratio = 0.900000
  rotate = 0.000000
  center = 1

  edge [ dir = back ]

  node0 [ label = "y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_104:[v:int list | emp v]
_x72:[v:int list | ∃_x72, (hd _x72 y ∧ tl _x72 _104 ∧ v == _x72)] 
 ⊢ let (_104) = Nil  in Cons y _104 : int list :
[v:int list | ∃_x72, (hd _x72 y ∧ tl _x72 _104 ∧ v == _x72)]
" ]
  node1 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)]
_x6:[v:int | v == x]
y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_x144:[v:int list | ∃s_10, (0 <= s_10 ∧ s_10 >= 0 ∧ s_10 < s ∧ s_10 == _x11 ∧ (∃_x144, (len _x144 s_10 ∧ sorted _x144 ∧ (∀u, (hd _x144 u => _x6 <= u)) ∧ v == _x144)))] 
 ⊢ let (_x5) = s in
let (_x11) = subs _x5 in
let (_x143) = sorted_list_gen _x11 in let (_x6) = x in _x143 _x6 : int list :
[v:int list | ∃s_10, (0 <= s_10 ∧ s_10 >= 0 ∧ s_10 < s ∧ s_10 == _x11 ∧ (∃_x144, (len _x144 s_10 ∧ sorted _x144 ∧ (∀u, (hd _x144 u => _x6 <= u)) ∧ v == _x144)))]
" ]
  node2 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)]
_x5:[v:int | v == s]
y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_x146:[v:int list | ∃s_12, (0 <= s_12 ∧ s_12 >= 0 ∧ s_12 < s ∧ s_12 == _x11 ∧ (∃_x146, (len _x146 s_12 ∧ sorted _x146 ∧ (∀u, (hd _x146 u => _x5 <= u)) ∧ v == _x146)))] 
 ⊢ let (_x5) = s in
let (_x11) = subs _x5 in let (_x145) = sorted_list_gen _x11 in _x145 _x5 : int list :
[v:int list | ∃s_12, (0 <= s_12 ∧ s_12 >= 0 ∧ s_12 < s ∧ s_12 == _x11 ∧ (∃_x146, (len _x146 s_12 ∧ sorted _x146 ∧ (∀u, (hd _x146 u => _x5 <= u)) ∧ v == _x146)))]
" ]
  node3 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)]
_1148:[v:int | true]
y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_x148:[v:int list | ∃s_14, (0 <= s_14 ∧ s_14 >= 0 ∧ s_14 < s ∧ s_14 == _x11 ∧ (∃_x148, (len _x148 s_14 ∧ sorted _x148 ∧ (∀u, (hd _x148 u => _1148 <= u)) ∧ v == _x148)))] 
 ⊢ let (_x5) = s in
let (_x11) = subs _x5 in
let (_x147) = sorted_list_gen _x11 in let (_1148) = int_gen () in _x147 _1148 : int list :
[v:int list | ∃s_14, (0 <= s_14 ∧ s_14 >= 0 ∧ s_14 < s ∧ s_14 == _x11 ∧ (∃_x148, (len _x148 s_14 ∧ sorted _x148 ∧ (∀u, (hd _x148 u => _1148 <= u)) ∧ v == _x148)))]
" ]
  node4 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)]
_x5:[v:int | v == s]
_1150:[v:int | v == (_x5 - 1)]
y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_x156:[v:int list | ∃s_16, (0 <= s_16 ∧ s_16 >= 0 ∧ s_16 < s ∧ s_16 == _x11 ∧ (∃_x156, (len _x156 s_16 ∧ sorted _x156 ∧ (∀u, (hd _x156 u => _1150 <= u)) ∧ v == _x156)))] 
 ⊢ let (_x5) = s in
let (_x11) = subs _x5 in
let (_x155) = sorted_list_gen _x11 in let (_1150) = subs _x5 in _x155 _1150 : int list :
[v:int list | ∃s_16, (0 <= s_16 ∧ s_16 >= 0 ∧ s_16 < s ∧ s_16 == _x11 ∧ (∃_x156, (len _x156 s_16 ∧ sorted _x156 ∧ (∀u, (hd _x156 u => _1150 <= u)) ∧ v == _x156)))]
" ]
  node5 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)]
_x6:[v:int | v == x]
_1151:[v:int | v == (_x6 - 1)]
y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_x158:[v:int list | ∃s_18, (0 <= s_18 ∧ s_18 >= 0 ∧ s_18 < s ∧ s_18 == _x11 ∧ (∃_x158, (len _x158 s_18 ∧ sorted _x158 ∧ (∀u, (hd _x158 u => _1151 <= u)) ∧ v == _x158)))] 
 ⊢ let (_x5) = s in
let (_x11) = subs _x5 in
let (_x157) = sorted_list_gen _x11 in
let (_x6) = x in let (_1151) = subs _x6 in _x157 _1151 : int list :
[v:int list | ∃s_18, (0 <= s_18 ∧ s_18 >= 0 ∧ s_18 < s ∧ s_18 == _x11 ∧ (∃_x158, (len _x158 s_18 ∧ sorted _x158 ∧ (∀u, (hd _x158 u => _1151 <= u)) ∧ v == _x158)))]
" ]
  node6 [ label = "_x6:[v:int | v == x]
y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_1207:[v:int list | emp v]
_1208:[v:int list | ∃_x72, (hd _x72 y ∧ tl _x72 _1207 ∧ v == _x72)]
_x232:[v:int list | ∃_x232, (hd _x232 _x6 ∧ tl _x232 _1208 ∧ v == _x232)] 
 ⊢ let (_104) = Nil  in
let (_1208) = Cons y _104 in let (_x6) = x in Cons _x6 _1208 : int list :
[v:int list | ∃_x232, (hd _x232 _x6 ∧ tl _x232 _1208 ∧ v == _x232)]
" ]
  node7 [ label = "_x5:[v:int | v == s]
y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_1209:[v:int list | emp v]
_1210:[v:int list | ∃_x72, (hd _x72 y ∧ tl _x72 _1209 ∧ v == _x72)]
_x233:[v:int list | ∃_x233, (hd _x233 _x5 ∧ tl _x233 _1210 ∧ v == _x233)] 
 ⊢ let (_104) = Nil  in
let (_1210) = Cons y _104 in let (_x5) = s in Cons _x5 _1210 : int list :
[v:int list | ∃_x233, (hd _x233 _x5 ∧ tl _x233 _1210 ∧ v == _x233)]
" ]
  node8 [ label = "_x4:[v:int | true]
y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_1211:[v:int list | emp v]
_1212:[v:int list | ∃_x72, (hd _x72 y ∧ tl _x72 _1211 ∧ v == _x72)]
_x234:[v:int list | ∃_x234, (hd _x234 _x4 ∧ tl _x234 _1212 ∧ v == _x234)] 
 ⊢ let (_104) = Nil  in
let (_1212) = Cons y _104 in let (_x4) = int_gen () in Cons _x4 _1212 : int list :
[v:int list | ∃_x234, (hd _x234 _x4 ∧ tl _x234 _1212 ∧ v == _x234)]
" ]
  node9 [ label = "y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_1213:[v:int list | emp v]
_1214:[v:int list | ∃_x72, (hd _x72 y ∧ tl _x72 _1213 ∧ v == _x72)]
_x235:[v:int list | ∃_x235, (hd _x235 y ∧ tl _x235 _1214 ∧ v == _x235)] 
 ⊢ let (_104) = Nil  in let (_1214) = Cons y _104 in Cons y _1214 : int list :
[v:int list | ∃_x235, (hd _x235 y ∧ tl _x235 _1214 ∧ v == _x235)]
" ]
  node10 [ label = "y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_x70:[v:int | v == (y - 1)]
_1215:[v:int list | emp v]
_x236:[v:int list | ∃_x236, (hd _x236 _x70 ∧ tl _x236 _1215 ∧ v == _x236)] 
 ⊢ let (_1215) = Nil  in let (y) = y in let (_x70) = subs y in Cons _x70 _1215 : int list :
[v:int list | ∃_x236, (hd _x236 _x70 ∧ tl _x236 _1215 ∧ v == _x236)]
" ]
  node11 [ label = "y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_x70:[v:int | v == (y - 1)]
y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_1216:[v:int list | emp v]
_1217:[v:int list | ∃_x72, (hd _x72 y ∧ tl _x72 _1216 ∧ v == _x72)]
_x237:[v:int list | ∃_x237, (hd _x237 _x70 ∧ tl _x237 _1217 ∧ v == _x237)] 
 ⊢ let (_104) = Nil  in
let (_1217) = Cons y _104 in
let (y) = y in let (_x70) = subs y in Cons _x70 _1217 : int list :
[v:int list | ∃_x237, (hd _x237 _x70 ∧ tl _x237 _1217 ∧ v == _x237)]
" ]
  node12 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)]
y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_1218:[v:int list | emp v]
_1219:[v:int list | ∃_x72, (hd _x72 y ∧ tl _x72 _1218 ∧ v == _x72)]
_x238:[v:int list | ∃_x238, (hd _x238 _x11 ∧ tl _x238 _1219 ∧ v == _x238)] 
 ⊢ let (_104) = Nil  in
let (_1219) = Cons y _104 in
let (_x5) = s in let (_x11) = subs _x5 in Cons _x11 _1219 : int list :
[v:int list | ∃_x238, (hd _x238 _x11 ∧ tl _x238 _1219 ∧ v == _x238)]
" ]
  node13 [ label = "_x6:[v:int | v == x]
_x10:[v:int | v == (_x6 - 1)]
y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_1220:[v:int list | emp v]
_1221:[v:int list | ∃_x72, (hd _x72 y ∧ tl _x72 _1220 ∧ v == _x72)]
_x239:[v:int list | ∃_x239, (hd _x239 _x10 ∧ tl _x239 _1221 ∧ v == _x239)] 
 ⊢ let (_104) = Nil  in
let (_1221) = Cons y _104 in
let (_x6) = x in let (_x10) = subs _x6 in Cons _x10 _1221 : int list :
[v:int list | ∃_x239, (hd _x239 _x10 ∧ tl _x239 _1221 ∧ v == _x239)]
" ]
  node14 [ label = "y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_1222:[v:int | true]
_1223:[v:int list | emp v]
_1224:[v:int list | ∃_x18, (hd _x18 _1222 ∧ tl _x18 _1223 ∧ v == _x18)]
_x240:[v:int list | ∃_x240, (hd _x240 y ∧ tl _x240 _1224 ∧ v == _x240)] 
 ⊢ let (_32) = Nil  in
let (_x4) = int_gen () in let (_1224) = Cons _x4 _32 in Cons y _1224 : int list :
[v:int list | ∃_x240, (hd _x240 y ∧ tl _x240 _1224 ∧ v == _x240)]
" ]
  node15 [ label = "y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_x5:[v:int | v == s]
_1225:[v:int list | emp v]
_1226:[v:int list | ∃_x17, (hd _x17 _x5 ∧ tl _x17 _1225 ∧ v == _x17)]
_x241:[v:int list | ∃_x241, (hd _x241 y ∧ tl _x241 _1226 ∧ v == _x241)] 
 ⊢ let (_29) = Nil  in
let (_x5) = s in let (_1226) = Cons _x5 _29 in Cons y _1226 : int list :
[v:int list | ∃_x241, (hd _x241 y ∧ tl _x241 _1226 ∧ v == _x241)]
" ]
  node16 [ label = "y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_x6:[v:int | v == x]
_1227:[v:int list | emp v]
_1228:[v:int list | ∃_x16, (hd _x16 _x6 ∧ tl _x16 _1227 ∧ v == _x16)]
_x242:[v:int list | ∃_x242, (hd _x242 y ∧ tl _x242 _1228 ∧ v == _x242)] 
 ⊢ let (_28) = Nil  in
let (_x6) = x in let (_1228) = Cons _x6 _28 in Cons y _1228 : int list :
[v:int list | ∃_x242, (hd _x242 y ∧ tl _x242 _1228 ∧ v == _x242)]
" ]
  node17 [ label = "y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_x70:[v:int | v == (y - 1)]
_1229:[v:int | true]
_1230:[v:int list | emp v]
_1231:[v:int list | ∃_x18, (hd _x18 _1229 ∧ tl _x18 _1230 ∧ v == _x18)]
_x243:[v:int list | ∃_x243, (hd _x243 _x70 ∧ tl _x243 _1231 ∧ v == _x243)] 
 ⊢ let (_32) = Nil  in
let (_x4) = int_gen () in
let (_1231) = Cons _x4 _32 in
let (y) = y in let (_x70) = subs y in Cons _x70 _1231 : int list :
[v:int list | ∃_x243, (hd _x243 _x70 ∧ tl _x243 _1231 ∧ v == _x243)]
" ]
  node18 [ label = "y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_x70:[v:int | v == (y - 1)]
_x5:[v:int | v == s]
_1232:[v:int list | emp v]
_1233:[v:int list | ∃_x17, (hd _x17 _x5 ∧ tl _x17 _1232 ∧ v == _x17)]
_x244:[v:int list | ∃_x244, (hd _x244 _x70 ∧ tl _x244 _1233 ∧ v == _x244)] 
 ⊢ let (_29) = Nil  in
let (_x5) = s in
let (_1233) = Cons _x5 _29 in
let (y) = y in let (_x70) = subs y in Cons _x70 _1233 : int list :
[v:int list | ∃_x244, (hd _x244 _x70 ∧ tl _x244 _1233 ∧ v == _x244)]
" ]
  node19 [ label = "y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_x70:[v:int | v == (y - 1)]
_x6:[v:int | v == x]
_1234:[v:int list | emp v]
_1235:[v:int list | ∃_x16, (hd _x16 _x6 ∧ tl _x16 _1234 ∧ v == _x16)]
_x245:[v:int list | ∃_x245, (hd _x245 _x70 ∧ tl _x245 _1235 ∧ v == _x245)] 
 ⊢ let (_28) = Nil  in
let (_x6) = x in
let (_1235) = Cons _x6 _28 in
let (y) = y in let (_x70) = subs y in Cons _x70 _1235 : int list :
[v:int list | ∃_x245, (hd _x245 _x70 ∧ tl _x245 _1235 ∧ v == _x245)]
" ]

  node0 [ shape = box, color = blue ]
  node0 -> node10
  node1 [ shape = box, color = red ]
  node2 [ shape = box, color = red ]
  node3 [ shape = box, color = blue ]
  node3 -> node4
  node4 -> node2
  node5 [ shape = box, color = blue ]
  node5 -> node1
  node6 [ shape = box, color = red ]
  node7 [ shape = box, color = red ]
  node8 [ shape = box, color = blue ]
  node8 -> node12
  node8 -> node6
  node8 -> node9
  node8 -> node13
  node8 -> node11
  node8 -> node7
  node9 [ shape = box, color = red ]
  node10 [ shape = box, color = red ]
  node11 [ shape = box, color = red ]
  node12 [ shape = box, color = red ]
  node13 [ shape = box, color = red ]
  node14 [ shape = box, color = blue ]
  node14 -> node16
  node14 -> node17
  node14 -> node9
  node14 -> node13
  node14 -> node15
  node15 -> node18
  node16 -> node19
  node17 -> node18
  node17 -> node19
  node17 -> node11
  node18 [ shape = box, color = red ]
  node19 [ shape = box, color = red ]
}
Type: bool
digraph poset {
  label = "Partially Ordered Set"
  size = "8.270000,11.690000"
  ratio = 0.900000
  rotate = 0.000000
  center = 1

  edge [ dir = back ]

  node0 [ label = "y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_x70:[v:int | v == (y - 1)]
_x231:[v:bool | ∃_x231, ((_x231 <=> _x70 == 0) ∧ (¬_x231 <=> _x70 > 0) ∧ v == _x231)] 
 ⊢ let (y) = y in let (_x70) = subs y in sizecheck _x70 : bool :
[v:bool | ∃_x231, ((_x231 <=> _x70 == 0) ∧ (¬_x231 <=> _x70 > 0) ∧ v == _x231)]
" ]
  node2 [ label = "_x5:[v:int | v == s]
y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_1237:[v:int | v == (y - 1)]
_x247:[v:bool | v == (_x5 <= _1237)] 
 ⊢ let (y) = y in let (_1237) = subs y in let (_x5) = s in _x5 <= _1237 : bool :
[v:bool | v == (_x5 <= _1237)]
" ]
  node5 [ label = "y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_x70:[v:int | v == (y - 1)]
_x5:[v:int | v == s]
_x251:[v:bool | v == (_x70 <= _x5)] 
 ⊢ let (_x5) = s in let (y) = y in let (_x70) = subs y in _x70 <= _x5 : bool :
[v:bool | v == (_x70 <= _x5)]
" ]
  node6 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)]
y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_x255:[v:bool | v == (_x11 <= y)] 
 ⊢ let (_x5) = s in let (_x11) = subs _x5 in _x11 <= y : bool :
[v:bool | v == (_x11 <= y)]
" ]
  node8 [ label = "y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_x5:[v:int | v == s]
_1244:[v:int | v == (_x5 - 1)]
_x259:[v:bool | v == (y <= _1244)] 
 ⊢ let (_x5) = s in let (_1244) = subs _x5 in y <= _1244 : bool :
[v:bool | v == (y <= _1244)]
" ]
  node10 [ label = "y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_x71:[v:bool | ∃_x71, ((_x71 <=> y == 0) ∧ (¬_x71 <=> y > 0) ∧ v == _x71)] 
 ⊢ let (y) = y in sizecheck y : bool :
[v:bool | ∃_x71, ((_x71 <=> y == 0) ∧ (¬_x71 <=> y > 0) ∧ v == _x71)]
" ]
  node11 [ label = "y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_x73:[v:bool | v == (y <= y)] 
 ⊢ y <= y : bool :
[v:bool | v == (y <= y)]
" ]
  node12 [ label = "_x6:[v:int | v == x]
y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_x74:[v:bool | v == (_x6 <= y)] 
 ⊢ let (_x6) = x in _x6 <= y : bool :
[v:bool | v == (_x6 <= y)]
" ]
  node13 [ label = "_x5:[v:int | v == s]
y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_x75:[v:bool | v == (_x5 <= y)] 
 ⊢ let (_x5) = s in _x5 <= y : bool :
[v:bool | v == (_x5 <= y)]
" ]
  node14 [ label = "_x4:[v:int | true]
y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_x76:[v:bool | v == (_x4 <= y)] 
 ⊢ let (_x4) = int_gen () in _x4 <= y : bool :
[v:bool | v == (_x4 <= y)]
" ]
  node15 [ label = "y:[v:int | true]
pathcond_2:[v:unit | ∃x_3, ((x_3 <=> s == 0) ∧ (¬x_3 <=> s > 0) ∧ ¬x_3 ∧ ¬x <= y)]
_x5:[v:int | v == s]
_x78:[v:bool | v == (y <= _x5)] 
 ⊢ let (_x5) = s in y <= _x5 : bool :
[v:bool | v == (y <= _x5)]
" ]

  node0 [ shape = box, color = red ]
  node2 -> node12
  node5 -> node11
  node6 -> node13
  node8 -> node15
  node10 -> node0
  node11 [ shape = box, color = red ]
  node12 [ shape = box, color = red ]
  node13 -> node2
  node14 [ shape = box, color = blue ]
  node14 -> node8
  node14 -> node10
  node14 -> node6
  node15 -> node5
}
