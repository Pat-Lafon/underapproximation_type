General Collection:
New Blocks:
Old Blocks:
Type: int list
digraph poset {
  label = "Partially Ordered Set"
  size = "8.270000,11.690000"
  ratio = 0.900000
  rotate = 0.000000
  center = 1

  edge [ dir = back ]

  node0 [ label = "_x2:[v:int list | emp v] 
 ⊢ Nil  : int list :
[v:int list | emp v]
" ]
  node1 [ label = "_x6:[v:int | v == x]
_28:[v:int list | emp v]
_x16:[v:int list | ∃_x16, (hd _x16 _x6 ∧ tl _x16 _28 ∧ v == _x16)] 
 ⊢ let (_28) = Nil  in let (_x6) = x in Cons _x6 _28 : int list :
[v:int list | ∃_x16, (hd _x16 _x6 ∧ tl _x16 _28 ∧ v == _x16)]
" ]
  node2 [ label = "_x5:[v:int | v == s]
_29:[v:int list | emp v]
_x17:[v:int list | ∃_x17, (hd _x17 _x5 ∧ tl _x17 _29 ∧ v == _x17)] 
 ⊢ let (_29) = Nil  in let (_x5) = s in Cons _x5 _29 : int list :
[v:int list | ∃_x17, (hd _x17 _x5 ∧ tl _x17 _29 ∧ v == _x17)]
" ]
  node3 [ label = "_x4:[v:int | true]
_32:[v:int list | emp v]
_x18:[v:int list | ∃_x18, (hd _x18 _x4 ∧ tl _x18 _32 ∧ v == _x18)] 
 ⊢ let (_32) = Nil  in let (_x4) = int_gen () in Cons _x4 _32 : int list :
[v:int list | ∃_x18, (hd _x18 _x4 ∧ tl _x18 _32 ∧ v == _x18)]
" ]
  node4 [ label = "_x6:[v:int | v == x]
_167:[v:int | true]
_168:[v:int list | emp v]
_169:[v:int list | ∃_x18, (hd _x18 _167 ∧ tl _x18 _168 ∧ v == _x18)]
_x98:[v:int list | ∃_x98, (hd _x98 _x6 ∧ tl _x98 _169 ∧ v == _x98)] 
 ⊢ let (_32) = Nil  in
let (_x4) = int_gen () in
let (_169) = Cons _x4 _32 in let (_x6) = x in Cons _x6 _169 : int list :
[v:int list | ∃_x98, (hd _x98 _x6 ∧ tl _x98 _169 ∧ v == _x98)]
" ]
  node5 [ label = "_x6:[v:int | v == x]
_x5:[v:int | v == s]
_170:[v:int list | emp v]
_171:[v:int list | ∃_x17, (hd _x17 _x5 ∧ tl _x17 _170 ∧ v == _x17)]
_x99:[v:int list | ∃_x99, (hd _x99 _x6 ∧ tl _x99 _171 ∧ v == _x99)] 
 ⊢ let (_29) = Nil  in
let (_x5) = s in let (_171) = Cons _x5 _29 in let (_x6) = x in Cons _x6 _171 : int list :
[v:int list | ∃_x99, (hd _x99 _x6 ∧ tl _x99 _171 ∧ v == _x99)]
" ]
  node6 [ label = "_x6:[v:int | v == x]
_x6:[v:int | v == x]
_175:[v:int list | emp v]
_176:[v:int list | ∃_x16, (hd _x16 _x6 ∧ tl _x16 _175 ∧ v == _x16)]
_x100:[v:int list | ∃_x100, (hd _x100 _x6 ∧ tl _x100 _176 ∧ v == _x100)] 
 ⊢ let (_28) = Nil  in
let (_x6) = x in let (_176) = Cons _x6 _28 in Cons _x6 _176 : int list :
[v:int list | ∃_x100, (hd _x100 _x6 ∧ tl _x100 _176 ∧ v == _x100)]
" ]
  node7 [ label = "_x5:[v:int | v == s]
_183:[v:int | true]
_184:[v:int list | emp v]
_185:[v:int list | ∃_x18, (hd _x18 _183 ∧ tl _x18 _184 ∧ v == _x18)]
_x101:[v:int list | ∃_x101, (hd _x101 _x5 ∧ tl _x101 _185 ∧ v == _x101)] 
 ⊢ let (_32) = Nil  in
let (_x4) = int_gen () in
let (_185) = Cons _x4 _32 in let (_x5) = s in Cons _x5 _185 : int list :
[v:int list | ∃_x101, (hd _x101 _x5 ∧ tl _x101 _185 ∧ v == _x101)]
" ]
  node8 [ label = "_x5:[v:int | v == s]
_x5:[v:int | v == s]
_198:[v:int list | emp v]
_199:[v:int list | ∃_x17, (hd _x17 _x5 ∧ tl _x17 _198 ∧ v == _x17)]
_x102:[v:int list | ∃_x102, (hd _x102 _x5 ∧ tl _x102 _199 ∧ v == _x102)] 
 ⊢ let (_29) = Nil  in
let (_x5) = s in let (_199) = Cons _x5 _29 in Cons _x5 _199 : int list :
[v:int list | ∃_x102, (hd _x102 _x5 ∧ tl _x102 _199 ∧ v == _x102)]
" ]
  node9 [ label = "_x5:[v:int | v == s]
_x6:[v:int | v == x]
_212:[v:int list | emp v]
_213:[v:int list | ∃_x16, (hd _x16 _x6 ∧ tl _x16 _212 ∧ v == _x16)]
_x103:[v:int list | ∃_x103, (hd _x103 _x5 ∧ tl _x103 _213 ∧ v == _x103)] 
 ⊢ let (_28) = Nil  in
let (_x6) = x in let (_213) = Cons _x6 _28 in let (_x5) = s in Cons _x5 _213 : int list :
[v:int list | ∃_x103, (hd _x103 _x5 ∧ tl _x103 _213 ∧ v == _x103)]
" ]
  node10 [ label = "_x4:[v:int | true]
_229:[v:int | true]
_230:[v:int list | emp v]
_231:[v:int list | ∃_x18, (hd _x18 _229 ∧ tl _x18 _230 ∧ v == _x18)]
_x104:[v:int list | ∃_x104, (hd _x104 _x4 ∧ tl _x104 _231 ∧ v == _x104)] 
 ⊢ let (_32) = Nil  in
let (_x4) = int_gen () in let (_231) = Cons _x4 _32 in Cons _x4 _231 : int list :
[v:int list | ∃_x104, (hd _x104 _x4 ∧ tl _x104 _231 ∧ v == _x104)]
" ]
  node11 [ label = "_x4:[v:int | true]
_x5:[v:int | v == s]
_278:[v:int list | emp v]
_279:[v:int list | ∃_x17, (hd _x17 _x5 ∧ tl _x17 _278 ∧ v == _x17)]
_x105:[v:int list | ∃_x105, (hd _x105 _x4 ∧ tl _x105 _279 ∧ v == _x105)] 
 ⊢ let (_29) = Nil  in
let (_x5) = s in
let (_279) = Cons _x5 _29 in let (_x4) = int_gen () in Cons _x4 _279 : int list :
[v:int list | ∃_x105, (hd _x105 _x4 ∧ tl _x105 _279 ∧ v == _x105)]
" ]
  node12 [ label = "_x4:[v:int | true]
_x6:[v:int | v == x]
_311:[v:int list | emp v]
_312:[v:int list | ∃_x16, (hd _x16 _x6 ∧ tl _x16 _311 ∧ v == _x16)]
_x106:[v:int list | ∃_x106, (hd _x106 _x4 ∧ tl _x106 _312 ∧ v == _x106)] 
 ⊢ let (_28) = Nil  in
let (_x6) = x in
let (_312) = Cons _x6 _28 in let (_x4) = int_gen () in Cons _x4 _312 : int list :
[v:int list | ∃_x106, (hd _x106 _x4 ∧ tl _x106 _312 ∧ v == _x106)]
" ]
  node13 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)]
_348:[v:int list | emp v]
_x107:[v:int list | ∃_x107, (hd _x107 _x11 ∧ tl _x107 _348 ∧ v == _x107)] 
 ⊢ let (_348) = Nil  in let (_x5) = s in let (_x11) = subs _x5 in Cons _x11 _348 : int list :
[v:int list | ∃_x107, (hd _x107 _x11 ∧ tl _x107 _348 ∧ v == _x107)]
" ]
  node14 [ label = "_x6:[v:int | v == x]
_x10:[v:int | v == (_x6 - 1)]
_376:[v:int list | emp v]
_x108:[v:int list | ∃_x108, (hd _x108 _x10 ∧ tl _x108 _376 ∧ v == _x108)] 
 ⊢ let (_376) = Nil  in let (_x6) = x in let (_x10) = subs _x6 in Cons _x10 _376 : int list :
[v:int list | ∃_x108, (hd _x108 _x10 ∧ tl _x108 _376 ∧ v == _x108)]
" ]
  node15 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)]
_407:[v:int | true]
_408:[v:int list | emp v]
_409:[v:int list | ∃_x18, (hd _x18 _407 ∧ tl _x18 _408 ∧ v == _x18)]
_x109:[v:int list | ∃_x109, (hd _x109 _x11 ∧ tl _x109 _409 ∧ v == _x109)] 
 ⊢ let (_32) = Nil  in
let (_x4) = int_gen () in
let (_409) = Cons _x4 _32 in
let (_x5) = s in let (_x11) = subs _x5 in Cons _x11 _409 : int list :
[v:int list | ∃_x109, (hd _x109 _x11 ∧ tl _x109 _409 ∧ v == _x109)]
" ]
  node16 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)]
_x5:[v:int | v == s]
_465:[v:int list | emp v]
_466:[v:int list | ∃_x17, (hd _x17 _x5 ∧ tl _x17 _465 ∧ v == _x17)]
_x110:[v:int list | ∃_x110, (hd _x110 _x11 ∧ tl _x110 _466 ∧ v == _x110)] 
 ⊢ let (_29) = Nil  in
let (_x5) = s in
let (_466) = Cons _x5 _29 in let (_x11) = subs _x5 in Cons _x11 _466 : int list :
[v:int list | ∃_x110, (hd _x110 _x11 ∧ tl _x110 _466 ∧ v == _x110)]
" ]
  node17 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)]
_x6:[v:int | v == x]
_524:[v:int list | emp v]
_525:[v:int list | ∃_x16, (hd _x16 _x6 ∧ tl _x16 _524 ∧ v == _x16)]
_x111:[v:int list | ∃_x111, (hd _x111 _x11 ∧ tl _x111 _525 ∧ v == _x111)] 
 ⊢ let (_28) = Nil  in
let (_x6) = x in
let (_525) = Cons _x6 _28 in
let (_x5) = s in let (_x11) = subs _x5 in Cons _x11 _525 : int list :
[v:int list | ∃_x111, (hd _x111 _x11 ∧ tl _x111 _525 ∧ v == _x111)]
" ]
  node18 [ label = "_x6:[v:int | v == x]
_x10:[v:int | v == (_x6 - 1)]
_587:[v:int | true]
_588:[v:int list | emp v]
_589:[v:int list | ∃_x18, (hd _x18 _587 ∧ tl _x18 _588 ∧ v == _x18)]
_x112:[v:int list | ∃_x112, (hd _x112 _x10 ∧ tl _x112 _589 ∧ v == _x112)] 
 ⊢ let (_32) = Nil  in
let (_x4) = int_gen () in
let (_589) = Cons _x4 _32 in
let (_x6) = x in let (_x10) = subs _x6 in Cons _x10 _589 : int list :
[v:int list | ∃_x112, (hd _x112 _x10 ∧ tl _x112 _589 ∧ v == _x112)]
" ]
  node19 [ label = "_x6:[v:int | v == x]
_x10:[v:int | v == (_x6 - 1)]
_x5:[v:int | v == s]
_660:[v:int list | emp v]
_661:[v:int list | ∃_x17, (hd _x17 _x5 ∧ tl _x17 _660 ∧ v == _x17)]
_x113:[v:int list | ∃_x113, (hd _x113 _x10 ∧ tl _x113 _661 ∧ v == _x113)] 
 ⊢ let (_29) = Nil  in
let (_x5) = s in
let (_661) = Cons _x5 _29 in
let (_x6) = x in let (_x10) = subs _x6 in Cons _x10 _661 : int list :
[v:int list | ∃_x113, (hd _x113 _x10 ∧ tl _x113 _661 ∧ v == _x113)]
" ]
  node20 [ label = "_x6:[v:int | v == x]
_x10:[v:int | v == (_x6 - 1)]
_x6:[v:int | v == x]
_731:[v:int list | emp v]
_732:[v:int list | ∃_x16, (hd _x16 _x6 ∧ tl _x16 _731 ∧ v == _x16)]
_x114:[v:int list | ∃_x114, (hd _x114 _x10 ∧ tl _x114 _732 ∧ v == _x114)] 
 ⊢ let (_28) = Nil  in
let (_x6) = x in
let (_732) = Cons _x6 _28 in let (_x10) = subs _x6 in Cons _x10 _732 : int list :
[v:int list | ∃_x114, (hd _x114 _x10 ∧ tl _x114 _732 ∧ v == _x114)]
" ]

  node0 [ shape = box, color = green ]
  node1 [ shape = box, color = red ]
  node2 [ shape = box, color = red ]
  node3 [ shape = box, color = blue ]
  node3 -> node2
  node3 -> node14
  node3 -> node1
  node3 -> node13
  node4 -> node6
  node4 -> node5
  node5 [ shape = box, color = red ]
  node6 [ shape = box, color = red ]
  node7 -> node8
  node7 -> node9
  node8 [ shape = box, color = red ]
  node9 [ shape = box, color = red ]
  node10 [ shape = box, color = blue ]
  node10 -> node4
  node10 -> node12
  node10 -> node18
  node10 -> node11
  node10 -> node7
  node10 -> node15
  node11 -> node16
  node11 -> node8
  node11 -> node5
  node11 -> node19
  node12 -> node20
  node12 -> node6
  node12 -> node17
  node12 -> node9
  node13 [ shape = box, color = red ]
  node14 [ shape = box, color = red ]
  node15 -> node16
  node15 -> node17
  node16 [ shape = box, color = red ]
  node17 [ shape = box, color = red ]
  node18 -> node20
  node18 -> node19
  node19 [ shape = box, color = red ]
  node20 [ shape = box, color = red ]
}
Type: bool
digraph poset {
  label = "Partially Ordered Set"
  size = "8.270000,11.690000"
  ratio = 0.900000
  rotate = 0.000000
  center = 1

  edge [ dir = back ]

  node0 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)]
_x96:[v:bool | ∃_x96, ((_x96 <=> _x11 == 0) ∧ (¬_x96 <=> _x11 > 0) ∧ v == _x96)] 
 ⊢ let (_x5) = s in let (_x11) = subs _x5 in sizecheck _x11 : bool :
[v:bool | ∃_x96, ((_x96 <=> _x11 == 0) ∧ (¬_x96 <=> _x11 > 0) ∧ v == _x96)]
" ]
  node1 [ label = "_x6:[v:int | v == x]
_x10:[v:int | v == (_x6 - 1)]
_x97:[v:bool | ∃_x97, ((_x97 <=> _x10 == 0) ∧ (¬_x97 <=> _x10 > 0) ∧ v == _x97)] 
 ⊢ let (_x6) = x in let (_x10) = subs _x6 in sizecheck _x10 : bool :
[v:bool | ∃_x97, ((_x97 <=> _x10 == 0) ∧ (¬_x97 <=> _x10 > 0) ∧ v == _x97)]
" ]
  node2 [ label = "_x6:[v:int | v == x]
_x5:[v:int | v == s]
_871:[v:int | v == (_x5 - 1)]
_x115:[v:bool | v == (_x6 <= _871)] 
 ⊢ let (_x5) = s in let (_871) = subs _x5 in let (_x6) = x in _x6 <= _871 : bool :
[v:bool | v == (_x6 <= _871)]
" ]
  node3 [ label = "_x5:[v:int | v == s]
_x6:[v:int | v == x]
_880:[v:int | v == (_x6 - 1)]
_x118:[v:bool | v == (_x5 <= _880)] 
 ⊢ let (_x6) = x in let (_880) = subs _x6 in let (_x5) = s in _x5 <= _880 : bool :
[v:bool | v == (_x5 <= _880)]
" ]
  node4 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)]
_x6:[v:int | v == x]
_x121:[v:bool | v == (_x11 <= _x6)] 
 ⊢ let (_x6) = x in let (_x5) = s in let (_x11) = subs _x5 in _x11 <= _x6 : bool :
[v:bool | v == (_x11 <= _x6)]
" ]
  node5 [ label = "_x6:[v:int | v == x]
_x10:[v:int | v == (_x6 - 1)]
_x5:[v:int | v == s]
_x125:[v:bool | v == (_x10 <= _x5)] 
 ⊢ let (_x5) = s in let (_x6) = x in let (_x10) = subs _x6 in _x10 <= _x5 : bool :
[v:bool | v == (_x10 <= _x5)]
" ]
  node6 [ label = "_x3:[v:bool | true] 
 ⊢ bool_gen () : bool :
[v:bool | true]
" ]
  node7 [ label = "_x1:[v:bool | ¬v] 
 ⊢ False  : bool :
[v:bool | ¬v]
" ]
  node8 [ label = "_x0:[v:bool | v] 
 ⊢ True  : bool :
[v:bool | v]
" ]
  node9 [ label = "_x6:[v:int | v == x]
_x5:[v:int | v == s]
_x20:[v:bool | v == (_x6 <= _x5)] 
 ⊢ let (_x5) = s in let (_x6) = x in _x6 <= _x5 : bool :
[v:bool | v == (_x6 <= _x5)]
" ]
  node10 [ label = "_x5:[v:int | v == s]
_x6:[v:int | v == x]
_x22:[v:bool | v == (_x5 <= _x6)] 
 ⊢ let (_x6) = x in let (_x5) = s in _x5 <= _x6 : bool :
[v:bool | v == (_x5 <= _x6)]
" ]
  node11 [ label = "_x6:[v:int | v == x]
_x13:[v:bool | ∃_x13, ((_x13 <=> _x6 == 0) ∧ (¬_x13 <=> _x6 > 0) ∧ v == _x13)] 
 ⊢ let (_x6) = x in sizecheck _x6 : bool :
[v:bool | ∃_x13, ((_x13 <=> _x6 == 0) ∧ (¬_x13 <=> _x6 > 0) ∧ v == _x13)]
" ]
  node12 [ label = "_x5:[v:int | v == s]
_x14:[v:bool | ∃_x14, ((_x14 <=> _x5 == 0) ∧ (¬_x14 <=> _x5 > 0) ∧ v == _x14)] 
 ⊢ let (_x5) = s in sizecheck _x5 : bool :
[v:bool | ∃_x14, ((_x14 <=> _x5 == 0) ∧ (¬_x14 <=> _x5 > 0) ∧ v == _x14)]
" ]

  node0 [ shape = box, color = red ]
  node1 [ shape = box, color = red ]
  node2 [ shape = box, color = red ]
  node3 [ shape = box, color = red ]
  node4 [ shape = box, color = red ]
  node5 [ shape = box, color = red ]
  node6 [ shape = box, color = blue ]
  node6 -> node0
  node6 -> node8
  node6 -> node4
  node6 -> node12
  node6 -> node2
  node6 -> node10
  node6 -> node1
  node6 -> node9
  node6 -> node5
  node6 -> node3
  node6 -> node11
  node6 -> node7
  node7 [ shape = box, color = red ]
  node8 [ shape = box, color = red ]
  node9 [ shape = box, color = red ]
  node10 [ shape = box, color = red ]
  node11 [ shape = box, color = red ]
  node12 [ shape = box, color = red ]
}
Type: int
digraph poset {
  label = "Partially Ordered Set"
  size = "8.270000,11.690000"
  ratio = 0.900000
  rotate = 0.000000
  center = 1

  edge [ dir = back ]

  node0 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)]
_x94:[v:int | v == (_x11 - 1)] 
 ⊢ let (_x5) = s in let (_x11) = subs _x5 in subs _x11 : int :
[v:int | v == (_x11 - 1)]
" ]
  node1 [ label = "_x6:[v:int | v == x]
_x10:[v:int | v == (_x6 - 1)]
_x95:[v:int | v == (_x10 - 1)] 
 ⊢ let (_x6) = x in let (_x10) = subs _x6 in subs _x10 : int :
[v:int | v == (_x10 - 1)]
" ]
  node2 [ label = "_x6:[v:int | v == x]
_x10:[v:int | v == (_x6 - 1)] 
 ⊢ let (_x6) = x in subs _x6 : int :
[v:int | v == (_x6 - 1)]
" ]
  node3 [ label = "_x5:[v:int | v == s]
_x11:[v:int | v == (_x5 - 1)] 
 ⊢ let (_x5) = s in subs _x5 : int :
[v:int | v == (_x5 - 1)]
" ]
  node4 [ label = "_x4:[v:int | true] 
 ⊢ int_gen () : int :
[v:int | true]
" ]
  node5 [ label = "_x5:[v:int | v == s] 
 ⊢ s : int :
[v:int | v == s]
" ]
  node6 [ label = "_x6:[v:int | v == x] 
 ⊢ x : int :
[v:int | v == x]
" ]

  node0 [ shape = box, color = red ]
  node1 [ shape = box, color = red ]
  node2 [ shape = box, color = red ]
  node3 [ shape = box, color = red ]
  node4 [ shape = box, color = blue ]
  node4 -> node0
  node4 -> node2
  node4 -> node6
  node4 -> node1
  node4 -> node5
  node4 -> node3
  node5 [ shape = box, color = red ]
  node6 [ shape = box, color = red ]
}
Path Specific Collection:
